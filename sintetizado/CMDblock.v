/* Generated by Yosys 0.5+ (git sha1 ba4cce9, gcc 4.8.4-2ubuntu1~14.04 -O2 -fstack-protector -fPIC -Os) */

module \$paramod\SERIAL_TO_PARALLEL\SIZE=32 (serial_in, enable_stp, SD_CLK, RESET_L, reception_complete, parallel_out);
  wire [8:0] _000_;
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  input RESET_L;
  input SD_CLK;
  wire [8:0] contador;
  input enable_stp;
  output [31:0] parallel_out;
  output reception_complete;
  input serial_in;
  NOT _238_ (
    .A(RESET_L),
    .Y(_003_)
  );
  NOT _239_ (
    .A(enable_stp),
    .Y(_004_)
  );
  NAND _240_ (
    .A(_004_),
    .B(reception_complete),
    .Y(_005_)
  );
  NOR _241_ (
    .A(contador[8]),
    .B(contador[7]),
    .Y(_006_)
  );
  NAND _242_ (
    .A(_006_),
    .B(contador[5]),
    .Y(_007_)
  );
  NOR _243_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_008_)
  );
  NOT _244_ (
    .A(contador[2]),
    .Y(_009_)
  );
  NOT _245_ (
    .A(contador[3]),
    .Y(_010_)
  );
  NAND _246_ (
    .A(_010_),
    .B(_009_),
    .Y(_011_)
  );
  NOT _247_ (
    .A(contador[4]),
    .Y(_012_)
  );
  NOT _248_ (
    .A(contador[6]),
    .Y(_013_)
  );
  NAND _249_ (
    .A(_013_),
    .B(_012_),
    .Y(_014_)
  );
  NOR _250_ (
    .A(_014_),
    .B(_011_),
    .Y(_015_)
  );
  NAND _251_ (
    .A(_015_),
    .B(_008_),
    .Y(_016_)
  );
  NOR _252_ (
    .A(_016_),
    .B(_007_),
    .Y(_017_)
  );
  NAND _253_ (
    .A(_017_),
    .B(enable_stp),
    .Y(_018_)
  );
  NAND _254_ (
    .A(_018_),
    .B(_005_),
    .Y(_002_)
  );
  NOT _255_ (
    .A(parallel_out[1]),
    .Y(_019_)
  );
  NOR _256_ (
    .A(_017_),
    .B(_019_),
    .Y(_020_)
  );
  NOT _257_ (
    .A(parallel_out[0]),
    .Y(_022_)
  );
  NOT _258_ (
    .A(_007_),
    .Y(_024_)
  );
  NOT _259_ (
    .A(_008_),
    .Y(_026_)
  );
  NOR _260_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_028_)
  );
  NOR _261_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_030_)
  );
  NAND _262_ (
    .A(_030_),
    .B(_028_),
    .Y(_032_)
  );
  NOR _263_ (
    .A(_032_),
    .B(_026_),
    .Y(_034_)
  );
  NAND _264_ (
    .A(_034_),
    .B(_024_),
    .Y(_036_)
  );
  NOR _265_ (
    .A(_036_),
    .B(_022_),
    .Y(_038_)
  );
  NOR _266_ (
    .A(_038_),
    .B(_020_),
    .Y(_040_)
  );
  NOR _267_ (
    .A(_040_),
    .B(_004_),
    .Y(_001_[0])
  );
  NOT _268_ (
    .A(parallel_out[2]),
    .Y(_043_)
  );
  NOR _269_ (
    .A(_017_),
    .B(_043_),
    .Y(_045_)
  );
  NOR _270_ (
    .A(_036_),
    .B(_019_),
    .Y(_047_)
  );
  NOR _271_ (
    .A(_047_),
    .B(_045_),
    .Y(_049_)
  );
  NOR _272_ (
    .A(_049_),
    .B(_004_),
    .Y(_001_[1])
  );
  NOT _273_ (
    .A(parallel_out[3]),
    .Y(_052_)
  );
  NOR _274_ (
    .A(_017_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _275_ (
    .A(_036_),
    .B(_043_),
    .Y(_056_)
  );
  NOR _276_ (
    .A(_056_),
    .B(_054_),
    .Y(_058_)
  );
  NOR _277_ (
    .A(_058_),
    .B(_004_),
    .Y(_001_[2])
  );
  NOT _278_ (
    .A(parallel_out[4]),
    .Y(_061_)
  );
  NOR _279_ (
    .A(_017_),
    .B(_061_),
    .Y(_063_)
  );
  NOR _280_ (
    .A(_036_),
    .B(_052_),
    .Y(_065_)
  );
  NOR _281_ (
    .A(_065_),
    .B(_063_),
    .Y(_067_)
  );
  NOR _282_ (
    .A(_067_),
    .B(_004_),
    .Y(_001_[3])
  );
  NOT _283_ (
    .A(parallel_out[5]),
    .Y(_070_)
  );
  NOR _284_ (
    .A(_017_),
    .B(_070_),
    .Y(_072_)
  );
  NOR _285_ (
    .A(_036_),
    .B(_061_),
    .Y(_074_)
  );
  NOR _286_ (
    .A(_074_),
    .B(_072_),
    .Y(_076_)
  );
  NOR _287_ (
    .A(_076_),
    .B(_004_),
    .Y(_001_[4])
  );
  NOT _288_ (
    .A(parallel_out[6]),
    .Y(_079_)
  );
  NOR _289_ (
    .A(_017_),
    .B(_079_),
    .Y(_081_)
  );
  NOR _290_ (
    .A(_036_),
    .B(_070_),
    .Y(_083_)
  );
  NOR _291_ (
    .A(_083_),
    .B(_081_),
    .Y(_085_)
  );
  NOR _292_ (
    .A(_085_),
    .B(_004_),
    .Y(_001_[5])
  );
  NOT _293_ (
    .A(parallel_out[7]),
    .Y(_088_)
  );
  NOR _294_ (
    .A(_017_),
    .B(_088_),
    .Y(_090_)
  );
  NOR _295_ (
    .A(_036_),
    .B(_079_),
    .Y(_092_)
  );
  NOR _296_ (
    .A(_092_),
    .B(_090_),
    .Y(_094_)
  );
  NOR _297_ (
    .A(_094_),
    .B(_004_),
    .Y(_001_[6])
  );
  NOT _298_ (
    .A(parallel_out[8]),
    .Y(_096_)
  );
  NOR _299_ (
    .A(_017_),
    .B(_096_),
    .Y(_097_)
  );
  NOR _300_ (
    .A(_036_),
    .B(_088_),
    .Y(_098_)
  );
  NOR _301_ (
    .A(_098_),
    .B(_097_),
    .Y(_099_)
  );
  NOR _302_ (
    .A(_099_),
    .B(_004_),
    .Y(_001_[7])
  );
  NOT _303_ (
    .A(parallel_out[9]),
    .Y(_100_)
  );
  NOR _304_ (
    .A(_017_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _305_ (
    .A(_036_),
    .B(_096_),
    .Y(_102_)
  );
  NOR _306_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR _307_ (
    .A(_103_),
    .B(_004_),
    .Y(_001_[8])
  );
  NOT _308_ (
    .A(parallel_out[10]),
    .Y(_104_)
  );
  NOR _309_ (
    .A(_017_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _310_ (
    .A(_036_),
    .B(_100_),
    .Y(_106_)
  );
  NOR _311_ (
    .A(_106_),
    .B(_105_),
    .Y(_107_)
  );
  NOR _312_ (
    .A(_107_),
    .B(_004_),
    .Y(_001_[9])
  );
  NOT _313_ (
    .A(parallel_out[11]),
    .Y(_108_)
  );
  NOR _314_ (
    .A(_017_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _315_ (
    .A(_036_),
    .B(_104_),
    .Y(_110_)
  );
  NOR _316_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _317_ (
    .A(_111_),
    .B(_004_),
    .Y(_001_[10])
  );
  NOT _318_ (
    .A(parallel_out[12]),
    .Y(_112_)
  );
  NOR _319_ (
    .A(_017_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _320_ (
    .A(_036_),
    .B(_108_),
    .Y(_114_)
  );
  NOR _321_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _322_ (
    .A(_115_),
    .B(_004_),
    .Y(_001_[11])
  );
  NOT _323_ (
    .A(parallel_out[13]),
    .Y(_116_)
  );
  NOR _324_ (
    .A(_017_),
    .B(_116_),
    .Y(_117_)
  );
  NOR _325_ (
    .A(_036_),
    .B(_112_),
    .Y(_118_)
  );
  NOR _326_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NOR _327_ (
    .A(_119_),
    .B(_004_),
    .Y(_001_[12])
  );
  NOT _328_ (
    .A(parallel_out[14]),
    .Y(_120_)
  );
  NOR _329_ (
    .A(_017_),
    .B(_120_),
    .Y(_121_)
  );
  NOR _330_ (
    .A(_036_),
    .B(_116_),
    .Y(_122_)
  );
  NOR _331_ (
    .A(_122_),
    .B(_121_),
    .Y(_123_)
  );
  NOR _332_ (
    .A(_123_),
    .B(_004_),
    .Y(_001_[13])
  );
  NOT _333_ (
    .A(parallel_out[15]),
    .Y(_124_)
  );
  NOR _334_ (
    .A(_017_),
    .B(_124_),
    .Y(_125_)
  );
  NOR _335_ (
    .A(_036_),
    .B(_120_),
    .Y(_126_)
  );
  NOR _336_ (
    .A(_126_),
    .B(_125_),
    .Y(_127_)
  );
  NOR _337_ (
    .A(_127_),
    .B(_004_),
    .Y(_001_[14])
  );
  NOT _338_ (
    .A(parallel_out[16]),
    .Y(_128_)
  );
  NOR _339_ (
    .A(_017_),
    .B(_128_),
    .Y(_129_)
  );
  NOR _340_ (
    .A(_036_),
    .B(_124_),
    .Y(_130_)
  );
  NOR _341_ (
    .A(_130_),
    .B(_129_),
    .Y(_131_)
  );
  NOR _342_ (
    .A(_131_),
    .B(_004_),
    .Y(_001_[15])
  );
  NOT _343_ (
    .A(parallel_out[17]),
    .Y(_132_)
  );
  NOR _344_ (
    .A(_017_),
    .B(_132_),
    .Y(_133_)
  );
  NOR _345_ (
    .A(_036_),
    .B(_128_),
    .Y(_134_)
  );
  NOR _346_ (
    .A(_134_),
    .B(_133_),
    .Y(_135_)
  );
  NOR _347_ (
    .A(_135_),
    .B(_004_),
    .Y(_001_[16])
  );
  NOT _348_ (
    .A(parallel_out[18]),
    .Y(_136_)
  );
  NOR _349_ (
    .A(_017_),
    .B(_136_),
    .Y(_137_)
  );
  NOR _350_ (
    .A(_036_),
    .B(_132_),
    .Y(_138_)
  );
  NOR _351_ (
    .A(_138_),
    .B(_137_),
    .Y(_139_)
  );
  NOR _352_ (
    .A(_139_),
    .B(_004_),
    .Y(_001_[17])
  );
  NOT _353_ (
    .A(parallel_out[19]),
    .Y(_140_)
  );
  NOR _354_ (
    .A(_017_),
    .B(_140_),
    .Y(_141_)
  );
  NOR _355_ (
    .A(_036_),
    .B(_136_),
    .Y(_142_)
  );
  NOR _356_ (
    .A(_142_),
    .B(_141_),
    .Y(_143_)
  );
  NOR _357_ (
    .A(_143_),
    .B(_004_),
    .Y(_001_[18])
  );
  NOT _358_ (
    .A(parallel_out[20]),
    .Y(_144_)
  );
  NOR _359_ (
    .A(_017_),
    .B(_144_),
    .Y(_145_)
  );
  NOR _360_ (
    .A(_036_),
    .B(_140_),
    .Y(_146_)
  );
  NOR _361_ (
    .A(_146_),
    .B(_145_),
    .Y(_147_)
  );
  NOR _362_ (
    .A(_147_),
    .B(_004_),
    .Y(_001_[19])
  );
  NOT _363_ (
    .A(parallel_out[21]),
    .Y(_148_)
  );
  NOR _364_ (
    .A(_017_),
    .B(_148_),
    .Y(_149_)
  );
  NOR _365_ (
    .A(_036_),
    .B(_144_),
    .Y(_150_)
  );
  NOR _366_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NOR _367_ (
    .A(_151_),
    .B(_004_),
    .Y(_001_[20])
  );
  NOT _368_ (
    .A(parallel_out[22]),
    .Y(_152_)
  );
  NOR _369_ (
    .A(_017_),
    .B(_152_),
    .Y(_153_)
  );
  NOR _370_ (
    .A(_036_),
    .B(_148_),
    .Y(_154_)
  );
  NOR _371_ (
    .A(_154_),
    .B(_153_),
    .Y(_155_)
  );
  NOR _372_ (
    .A(_155_),
    .B(_004_),
    .Y(_001_[21])
  );
  NOT _373_ (
    .A(parallel_out[23]),
    .Y(_156_)
  );
  NOR _374_ (
    .A(_017_),
    .B(_156_),
    .Y(_157_)
  );
  NOR _375_ (
    .A(_036_),
    .B(_152_),
    .Y(_158_)
  );
  NOR _376_ (
    .A(_158_),
    .B(_157_),
    .Y(_159_)
  );
  NOR _377_ (
    .A(_159_),
    .B(_004_),
    .Y(_001_[22])
  );
  NOT _378_ (
    .A(parallel_out[24]),
    .Y(_160_)
  );
  NOR _379_ (
    .A(_017_),
    .B(_160_),
    .Y(_161_)
  );
  NOR _380_ (
    .A(_036_),
    .B(_156_),
    .Y(_162_)
  );
  NOR _381_ (
    .A(_162_),
    .B(_161_),
    .Y(_163_)
  );
  NOR _382_ (
    .A(_163_),
    .B(_004_),
    .Y(_001_[23])
  );
  NOT _383_ (
    .A(parallel_out[25]),
    .Y(_164_)
  );
  NOR _384_ (
    .A(_017_),
    .B(_164_),
    .Y(_165_)
  );
  NOR _385_ (
    .A(_036_),
    .B(_160_),
    .Y(_166_)
  );
  NOR _386_ (
    .A(_166_),
    .B(_165_),
    .Y(_167_)
  );
  NOR _387_ (
    .A(_167_),
    .B(_004_),
    .Y(_001_[24])
  );
  NOT _388_ (
    .A(parallel_out[26]),
    .Y(_168_)
  );
  NOR _389_ (
    .A(_017_),
    .B(_168_),
    .Y(_169_)
  );
  NOR _390_ (
    .A(_036_),
    .B(_164_),
    .Y(_170_)
  );
  NOR _391_ (
    .A(_170_),
    .B(_169_),
    .Y(_171_)
  );
  NOR _392_ (
    .A(_171_),
    .B(_004_),
    .Y(_001_[25])
  );
  NOT _393_ (
    .A(parallel_out[27]),
    .Y(_172_)
  );
  NOR _394_ (
    .A(_017_),
    .B(_172_),
    .Y(_173_)
  );
  NOR _395_ (
    .A(_036_),
    .B(_168_),
    .Y(_174_)
  );
  NOR _396_ (
    .A(_174_),
    .B(_173_),
    .Y(_175_)
  );
  NOR _397_ (
    .A(_175_),
    .B(_004_),
    .Y(_001_[26])
  );
  NOT _398_ (
    .A(parallel_out[28]),
    .Y(_176_)
  );
  NOR _399_ (
    .A(_017_),
    .B(_176_),
    .Y(_177_)
  );
  NOR _400_ (
    .A(_036_),
    .B(_172_),
    .Y(_178_)
  );
  NOR _401_ (
    .A(_178_),
    .B(_177_),
    .Y(_179_)
  );
  NOR _402_ (
    .A(_179_),
    .B(_004_),
    .Y(_001_[27])
  );
  NOT _403_ (
    .A(parallel_out[29]),
    .Y(_180_)
  );
  NOR _404_ (
    .A(_017_),
    .B(_180_),
    .Y(_181_)
  );
  NOR _405_ (
    .A(_036_),
    .B(_176_),
    .Y(_182_)
  );
  NOR _406_ (
    .A(_182_),
    .B(_181_),
    .Y(_183_)
  );
  NOR _407_ (
    .A(_183_),
    .B(_004_),
    .Y(_001_[28])
  );
  NOT _408_ (
    .A(parallel_out[30]),
    .Y(_184_)
  );
  NOR _409_ (
    .A(_017_),
    .B(_184_),
    .Y(_185_)
  );
  NOR _410_ (
    .A(_036_),
    .B(_180_),
    .Y(_186_)
  );
  NOR _411_ (
    .A(_186_),
    .B(_185_),
    .Y(_187_)
  );
  NOR _412_ (
    .A(_187_),
    .B(_004_),
    .Y(_001_[29])
  );
  NOT _413_ (
    .A(parallel_out[31]),
    .Y(_188_)
  );
  NOR _414_ (
    .A(_017_),
    .B(_188_),
    .Y(_189_)
  );
  NOR _415_ (
    .A(_036_),
    .B(_184_),
    .Y(_190_)
  );
  NOR _416_ (
    .A(_190_),
    .B(_189_),
    .Y(_191_)
  );
  NOR _417_ (
    .A(_191_),
    .B(_004_),
    .Y(_001_[30])
  );
  NOT _418_ (
    .A(serial_in),
    .Y(_192_)
  );
  NOR _419_ (
    .A(_017_),
    .B(_192_),
    .Y(_193_)
  );
  NOR _420_ (
    .A(_036_),
    .B(_188_),
    .Y(_194_)
  );
  NOR _421_ (
    .A(_194_),
    .B(_193_),
    .Y(_195_)
  );
  NOR _422_ (
    .A(_195_),
    .B(_004_),
    .Y(_001_[31])
  );
  NAND _423_ (
    .A(contador[0]),
    .B(_004_),
    .Y(_196_)
  );
  NOR _424_ (
    .A(_017_),
    .B(contador[0]),
    .Y(_197_)
  );
  NAND _425_ (
    .A(_197_),
    .B(enable_stp),
    .Y(_198_)
  );
  NAND _426_ (
    .A(_198_),
    .B(_196_),
    .Y(_000_[0])
  );
  NOT _427_ (
    .A(contador[0]),
    .Y(_199_)
  );
  NOT _428_ (
    .A(contador[1]),
    .Y(_200_)
  );
  NOR _429_ (
    .A(_200_),
    .B(_199_),
    .Y(_201_)
  );
  NOR _430_ (
    .A(_201_),
    .B(_008_),
    .Y(_202_)
  );
  NOR _431_ (
    .A(_202_),
    .B(_004_),
    .Y(_203_)
  );
  NOR _432_ (
    .A(contador[1]),
    .B(enable_stp),
    .Y(_204_)
  );
  NOR _433_ (
    .A(_204_),
    .B(_203_),
    .Y(_000_[1])
  );
  NAND _434_ (
    .A(_201_),
    .B(enable_stp),
    .Y(_205_)
  );
  NOR _435_ (
    .A(_205_),
    .B(_009_),
    .Y(_206_)
  );
  NAND _436_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_207_)
  );
  NOR _437_ (
    .A(_207_),
    .B(_004_),
    .Y(_208_)
  );
  NOR _438_ (
    .A(_208_),
    .B(contador[2]),
    .Y(_209_)
  );
  NOR _439_ (
    .A(_209_),
    .B(_206_),
    .Y(_000_[2])
  );
  NOR _440_ (
    .A(_206_),
    .B(contador[3]),
    .Y(_210_)
  );
  NAND _441_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_211_)
  );
  NOR _442_ (
    .A(_211_),
    .B(_205_),
    .Y(_212_)
  );
  NOR _443_ (
    .A(_212_),
    .B(_210_),
    .Y(_000_[3])
  );
  NOR _444_ (
    .A(_212_),
    .B(contador[4]),
    .Y(_213_)
  );
  NOT _445_ (
    .A(_211_),
    .Y(_214_)
  );
  NAND _446_ (
    .A(_214_),
    .B(_208_),
    .Y(_215_)
  );
  NOR _447_ (
    .A(_215_),
    .B(_012_),
    .Y(_216_)
  );
  NOR _448_ (
    .A(_216_),
    .B(_213_),
    .Y(_000_[4])
  );
  NOR _449_ (
    .A(_216_),
    .B(contador[5]),
    .Y(_217_)
  );
  NAND _450_ (
    .A(_216_),
    .B(contador[5]),
    .Y(_218_)
  );
  NAND _451_ (
    .A(_218_),
    .B(_018_),
    .Y(_219_)
  );
  NOR _452_ (
    .A(_219_),
    .B(_217_),
    .Y(_000_[5])
  );
  NAND _453_ (
    .A(_218_),
    .B(contador[6]),
    .Y(_220_)
  );
  NOT _454_ (
    .A(contador[5]),
    .Y(_221_)
  );
  NAND _455_ (
    .A(_212_),
    .B(contador[4]),
    .Y(_222_)
  );
  NOR _456_ (
    .A(_222_),
    .B(_221_),
    .Y(_223_)
  );
  NAND _457_ (
    .A(_223_),
    .B(_013_),
    .Y(_224_)
  );
  NAND _458_ (
    .A(_224_),
    .B(_220_),
    .Y(_000_[6])
  );
  NOT _459_ (
    .A(contador[7]),
    .Y(_225_)
  );
  NOR _460_ (
    .A(_211_),
    .B(_207_),
    .Y(_226_)
  );
  NAND _461_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_227_)
  );
  NAND _462_ (
    .A(contador[5]),
    .B(enable_stp),
    .Y(_228_)
  );
  NOR _463_ (
    .A(_228_),
    .B(_227_),
    .Y(_229_)
  );
  NAND _464_ (
    .A(_229_),
    .B(_226_),
    .Y(_230_)
  );
  NOR _465_ (
    .A(_230_),
    .B(_225_),
    .Y(_231_)
  );
  NOT _466_ (
    .A(_230_),
    .Y(_232_)
  );
  NOR _467_ (
    .A(_232_),
    .B(contador[7]),
    .Y(_233_)
  );
  NOR _468_ (
    .A(_233_),
    .B(_231_),
    .Y(_000_[7])
  );
  NOR _469_ (
    .A(_231_),
    .B(contador[8]),
    .Y(_234_)
  );
  NOT _470_ (
    .A(contador[8]),
    .Y(_235_)
  );
  NOT _471_ (
    .A(_231_),
    .Y(_236_)
  );
  NOR _472_ (
    .A(_236_),
    .B(_235_),
    .Y(_237_)
  );
  NOR _473_ (
    .A(_237_),
    .B(_234_),
    .Y(_000_[8])
  );
  BUF _474_ (
    .A(_003_),
    .Y(_021_)
  );
  BUF _475_ (
    .A(_003_),
    .Y(_023_)
  );
  BUF _476_ (
    .A(_003_),
    .Y(_025_)
  );
  BUF _477_ (
    .A(_003_),
    .Y(_027_)
  );
  BUF _478_ (
    .A(_003_),
    .Y(_029_)
  );
  BUF _479_ (
    .A(_003_),
    .Y(_031_)
  );
  BUF _480_ (
    .A(_003_),
    .Y(_033_)
  );
  BUF _481_ (
    .A(_003_),
    .Y(_035_)
  );
  BUF _482_ (
    .A(_003_),
    .Y(_037_)
  );
  BUF _483_ (
    .A(_003_),
    .Y(_039_)
  );
  BUF _484_ (
    .A(_003_),
    .Y(_041_)
  );
  BUF _485_ (
    .A(_003_),
    .Y(_042_)
  );
  BUF _486_ (
    .A(_003_),
    .Y(_044_)
  );
  BUF _487_ (
    .A(_003_),
    .Y(_046_)
  );
  BUF _488_ (
    .A(_003_),
    .Y(_048_)
  );
  BUF _489_ (
    .A(_003_),
    .Y(_050_)
  );
  BUF _490_ (
    .A(_003_),
    .Y(_051_)
  );
  BUF _491_ (
    .A(_003_),
    .Y(_053_)
  );
  BUF _492_ (
    .A(_003_),
    .Y(_055_)
  );
  BUF _493_ (
    .A(_003_),
    .Y(_057_)
  );
  BUF _494_ (
    .A(_003_),
    .Y(_059_)
  );
  BUF _495_ (
    .A(_003_),
    .Y(_060_)
  );
  BUF _496_ (
    .A(_003_),
    .Y(_062_)
  );
  BUF _497_ (
    .A(_003_),
    .Y(_064_)
  );
  BUF _498_ (
    .A(_003_),
    .Y(_066_)
  );
  BUF _499_ (
    .A(_003_),
    .Y(_068_)
  );
  BUF _500_ (
    .A(_003_),
    .Y(_069_)
  );
  BUF _501_ (
    .A(_003_),
    .Y(_071_)
  );
  BUF _502_ (
    .A(_003_),
    .Y(_073_)
  );
  BUF _503_ (
    .A(_003_),
    .Y(_075_)
  );
  BUF _504_ (
    .A(_003_),
    .Y(_077_)
  );
  BUF _505_ (
    .A(_003_),
    .Y(_078_)
  );
  BUF _506_ (
    .A(_003_),
    .Y(_080_)
  );
  BUF _507_ (
    .A(_003_),
    .Y(_082_)
  );
  BUF _508_ (
    .A(_003_),
    .Y(_084_)
  );
  BUF _509_ (
    .A(_003_),
    .Y(_086_)
  );
  BUF _510_ (
    .A(_003_),
    .Y(_087_)
  );
  BUF _511_ (
    .A(_003_),
    .Y(_089_)
  );
  BUF _512_ (
    .A(_003_),
    .Y(_091_)
  );
  BUF _513_ (
    .A(_003_),
    .Y(_093_)
  );
  BUF _514_ (
    .A(_003_),
    .Y(_095_)
  );
  DFFSR _515_ (
    .C(SD_CLK),
    .D(_002_),
    .Q(reception_complete),
    .R(_021_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(SD_CLK),
    .D(_001_[0]),
    .Q(parallel_out[0]),
    .R(_023_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(SD_CLK),
    .D(_001_[1]),
    .Q(parallel_out[1]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(SD_CLK),
    .D(_001_[2]),
    .Q(parallel_out[2]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(SD_CLK),
    .D(_001_[3]),
    .Q(parallel_out[3]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(SD_CLK),
    .D(_001_[4]),
    .Q(parallel_out[4]),
    .R(_031_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(SD_CLK),
    .D(_001_[5]),
    .Q(parallel_out[5]),
    .R(_033_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(SD_CLK),
    .D(_001_[6]),
    .Q(parallel_out[6]),
    .R(_035_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(SD_CLK),
    .D(_001_[7]),
    .Q(parallel_out[7]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(SD_CLK),
    .D(_001_[8]),
    .Q(parallel_out[8]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(SD_CLK),
    .D(_001_[9]),
    .Q(parallel_out[9]),
    .R(_041_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(SD_CLK),
    .D(_001_[10]),
    .Q(parallel_out[10]),
    .R(_042_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(SD_CLK),
    .D(_001_[11]),
    .Q(parallel_out[11]),
    .R(_044_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(SD_CLK),
    .D(_001_[12]),
    .Q(parallel_out[12]),
    .R(_046_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(SD_CLK),
    .D(_001_[13]),
    .Q(parallel_out[13]),
    .R(_048_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(SD_CLK),
    .D(_001_[14]),
    .Q(parallel_out[14]),
    .R(_050_),
    .S(1'b0)
  );
  DFFSR _531_ (
    .C(SD_CLK),
    .D(_001_[15]),
    .Q(parallel_out[15]),
    .R(_051_),
    .S(1'b0)
  );
  DFFSR _532_ (
    .C(SD_CLK),
    .D(_001_[16]),
    .Q(parallel_out[16]),
    .R(_053_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(SD_CLK),
    .D(_001_[17]),
    .Q(parallel_out[17]),
    .R(_055_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(SD_CLK),
    .D(_001_[18]),
    .Q(parallel_out[18]),
    .R(_057_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(SD_CLK),
    .D(_001_[19]),
    .Q(parallel_out[19]),
    .R(_059_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(SD_CLK),
    .D(_001_[20]),
    .Q(parallel_out[20]),
    .R(_060_),
    .S(1'b0)
  );
  DFFSR _537_ (
    .C(SD_CLK),
    .D(_001_[21]),
    .Q(parallel_out[21]),
    .R(_062_),
    .S(1'b0)
  );
  DFFSR _538_ (
    .C(SD_CLK),
    .D(_001_[22]),
    .Q(parallel_out[22]),
    .R(_064_),
    .S(1'b0)
  );
  DFFSR _539_ (
    .C(SD_CLK),
    .D(_001_[23]),
    .Q(parallel_out[23]),
    .R(_066_),
    .S(1'b0)
  );
  DFFSR _540_ (
    .C(SD_CLK),
    .D(_001_[24]),
    .Q(parallel_out[24]),
    .R(_068_),
    .S(1'b0)
  );
  DFFSR _541_ (
    .C(SD_CLK),
    .D(_001_[25]),
    .Q(parallel_out[25]),
    .R(_069_),
    .S(1'b0)
  );
  DFFSR _542_ (
    .C(SD_CLK),
    .D(_001_[26]),
    .Q(parallel_out[26]),
    .R(_071_),
    .S(1'b0)
  );
  DFFSR _543_ (
    .C(SD_CLK),
    .D(_001_[27]),
    .Q(parallel_out[27]),
    .R(_073_),
    .S(1'b0)
  );
  DFFSR _544_ (
    .C(SD_CLK),
    .D(_001_[28]),
    .Q(parallel_out[28]),
    .R(_075_),
    .S(1'b0)
  );
  DFFSR _545_ (
    .C(SD_CLK),
    .D(_001_[29]),
    .Q(parallel_out[29]),
    .R(_077_),
    .S(1'b0)
  );
  DFFSR _546_ (
    .C(SD_CLK),
    .D(_001_[30]),
    .Q(parallel_out[30]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _547_ (
    .C(SD_CLK),
    .D(_001_[31]),
    .Q(parallel_out[31]),
    .R(_080_),
    .S(1'b0)
  );
  DFFSR _548_ (
    .C(SD_CLK),
    .D(_000_[0]),
    .Q(contador[0]),
    .R(_082_),
    .S(1'b0)
  );
  DFFSR _549_ (
    .C(SD_CLK),
    .D(_000_[1]),
    .Q(contador[1]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _550_ (
    .C(SD_CLK),
    .D(_000_[2]),
    .Q(contador[2]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _551_ (
    .C(SD_CLK),
    .D(_000_[3]),
    .Q(contador[3]),
    .R(_087_),
    .S(1'b0)
  );
  DFFSR _552_ (
    .C(SD_CLK),
    .D(_000_[4]),
    .Q(contador[4]),
    .R(_089_),
    .S(1'b0)
  );
  DFFSR _553_ (
    .C(SD_CLK),
    .D(_000_[5]),
    .Q(contador[5]),
    .R(_091_),
    .S(1'b0)
  );
  DFFSR _554_ (
    .C(SD_CLK),
    .D(_000_[6]),
    .Q(contador[6]),
    .R(_093_),
    .S(1'b0)
  );
  DFFSR _555_ (
    .C(SD_CLK),
    .D(_000_[7]),
    .Q(contador[7]),
    .R(_095_),
    .S(1'b0)
  );
  DFFSR _556_ (
    .C(SD_CLK),
    .D(_000_[8]),
    .Q(contador[8]),
    .R(_003_),
    .S(1'b0)
  );
endmodule

module BloqueDATA(CLK, SD_CLK, RESET_L, timeout_Reg_Regs_DATA, writeRead_Regs_DATA, blockCount_Regs_DATA, multipleData_Regs_DATA, timeout_enable_Regs_DATA, FIFO_OK_FIFO_DATA, dataFromFIFO_FIFO_Phy, New_DAT_DMA_DATA, DATA_PIN_IN, writeFIFO_enable_Phy_FIFO, readFIFO_enable_Phy_FIFO, dataReadToFIFO_Phy_FIFO, transfer_complete_DATA_DMA, IO_enable_Phy_SD_CARD, DATA_PIN_OUT, pad_state_Phy_PAD, pad_enable_Phy_PAD);
  input CLK;
  input DATA_PIN_IN;
  output DATA_PIN_OUT;
  input FIFO_OK_FIFO_DATA;
  output IO_enable_Phy_SD_CARD;
  input New_DAT_DMA_DATA;
  input RESET_L;
  input SD_CLK;
  wire ack_IN_Phy_DATA;
  wire ack_OUT_DATA_Phy;
  input [3:0] blockCount_Regs_DATA;
  wire [3:0] blocks_DATA_Phy;
  wire complete_Phy_DATA;
  input [31:0] dataFromFIFO_FIFO_Phy;
  wire [31:0] dataParallel_Phy_PS;
  output [31:0] dataReadToFIFO_Phy_FIFO;
  wire [31:0] data_read_SP_Phy;
  wire enable_pts_Wrapper_Phy_PS;
  wire enable_stp_Wrapper_Phy_SP;
  wire idle_out_DATA_Phy;
  input multipleData_Regs_DATA;
  wire multiple_DATA_Phy;
  output pad_enable_Phy_PAD;
  output pad_state_Phy_PAD;
  output readFIFO_enable_Phy_FIFO;
  wire reception_complete_SP_Phy;
  wire reset_Wrapper_Phy_PS;
  wire serial_Ready_Phy_DATA;
  wire strobe_OUT_DATA_Phy;
  wire timeout_Phy_DATA;
  input [15:0] timeout_Reg_Regs_DATA;
  input timeout_enable_Regs_DATA;
  wire [15:0] timeout_value_DATA_Phy;
  output transfer_complete_DATA_DMA;
  wire transmission_complete_PS_Phy;
  output writeFIFO_enable_Phy_FIFO;
  wire writeReadPhysical_DATA_Phy;
  input writeRead_Regs_DATA;
  DATA_PHYSICAL CapaFisica (
    .IO_enable_Phy_SD_CARD(IO_enable_Phy_SD_CARD),
    .RESET_L(RESET_L),
    .SD_CLK(SD_CLK),
    .ack_IN_DATA_Phy(ack_OUT_DATA_Phy),
    .ack_OUT_Phy_DATA(ack_IN_Phy_DATA),
    .blocks_DATA_Phy(blocks_DATA_Phy),
    .complete_Phy_DATA(complete_Phy_DATA),
    .dataFromFIFO_FIFO_Phy(dataFromFIFO_FIFO_Phy),
    .dataParallel_Phy_PS(dataParallel_Phy_PS),
    .dataReadToFIFO_Phy_FIFO(dataReadToFIFO_Phy_FIFO),
    .data_read_SP_Phy(data_read_SP_Phy),
    .data_timeout_Phy_DATA(timeout_Phy_DATA),
    .enable_pts_Wrapper_Phy_PS(enable_pts_Wrapper_Phy_PS),
    .enable_stp_Wrapper_Phy_SP(enable_stp_Wrapper_Phy_SP),
    .idle_in_DATA_Phy(idle_out_DATA_Phy),
    .multiple_DATA_Phy(multiple_DATA_Phy),
    .pad_enable_Phy_PAD(pad_enable_Phy_PAD),
    .pad_state_Phy_PAD(pad_state_Phy_PAD),
    .readFIFO_enable_Phy_FIFO(readFIFO_enable_Phy_FIFO),
    .reception_complete_SP_Phy(reception_complete_SP_Phy),
    .reset_Wrapper_Phy_PS(reset_Wrapper_Phy_PS),
    .serial_Ready_Phy_DATA(serial_Ready_Phy_DATA),
    .strobe_IN_DATA_Phy(strobe_OUT_DATA_Phy),
    .timeout_Reg_DATA_Phy(timeout_value_DATA_Phy),
    .transmission_complete_PS_Phy(transmission_complete_PS_Phy),
    .writeFIFO_enable_Phy_FIFO(writeFIFO_enable_Phy_FIFO),
    .writeRead_DATA_Phy(writeReadPhysical_DATA_Phy)
  );
  DATA ControlDatos (
    .CLK(CLK),
    .RESET_L(RESET_L),
    .ack_IN_Phy_DATA(ack_IN_Phy_DATA),
    .ack_OUT_DATA_Phy(ack_OUT_DATA_Phy),
    .blockCount_Regs_DATA(blockCount_Regs_DATA),
    .blocks_DATA_Phy(blocks_DATA_Phy),
    .complete_Phy_DATA(complete_Phy_DATA),
    .fifo_OK_FIFO_DATA(FIFO_OK_FIFO_DATA),
    .idle_out_DATA_Phy(idle_out_DATA_Phy),
    .multipleData_Regs_DATA(multipleData_Regs_DATA),
    .multiple_DATA_Phy(multiple_DATA_Phy),
    .new_DAT_DMA_DATA(New_DAT_DMA_DATA),
    .serial_Ready_Phy_DATA(serial_Ready_Phy_DATA),
    .strobe_OUT_DATA_Phy(strobe_OUT_DATA_Phy),
    .timeout_Enable_Regs_DATA(timeout_enable_Regs_DATA),
    .timeout_Phy_DATA(timeout_Phy_DATA),
    .timeout_Reg_Regs_DATA(timeout_Reg_Regs_DATA),
    .timeout_value_DATA_Phy(timeout_value_DATA_Phy),
    .transfer_complete_DATA_DMA(transfer_complete_DATA_DMA),
    .writeReadPhysical_DATA_Phy(writeReadPhysical_DATA_Phy),
    .writeRead_Regs_DATA(writeRead_Regs_DATA)
  );
  PARALLEL_TO_SERIAL convert_paralelo_serial (
    .SD_CLK(SD_CLK),
    .enable_pts(enable_pts_Wrapper_Phy_PS),
    .parallel_complete(transmission_complete_PS_Phy),
    .reset_pts(reset_Wrapper_Phy_PS),
    .signal_in(dataParallel_Phy_PS),
    .signal_out(DATA_PIN_OUT)
  );
  \$paramod\SERIAL_TO_PARALLEL\SIZE=32  convert_serial_paralelo (
    .RESET_L(RESET_L),
    .SD_CLK(SD_CLK),
    .enable_stp(enable_stp_Wrapper_Phy_SP),
    .parallel_out(data_read_SP_Phy),
    .reception_complete(reception_complete_SP_Phy),
    .serial_in(DATA_PIN_IN)
  );
endmodule

module CMD(clk_host, reset_host, new_command, cmd_argument, cmd_index, cmd_complete, cmd_index_error, response, CMD_PIN_OUT, IO_enable_pin, CMD_PIN_IN, clk_SD);
  input CMD_PIN_IN;
  output CMD_PIN_OUT;
  output IO_enable_pin;
  wire ack_control_to_physical;
  wire ack_physic_to_control;
  input clk_SD;
  input clk_host;
  input [31:0] cmd_argument;
  output cmd_complete;
  input [5:0] cmd_index;
  output cmd_index_error;
  wire [39:0] cmd_out_control_to_pts;
  wire end_parallel;
  wire end_serializer;
  wire idle_control_to_physical;
  input new_command;
  wire [135:0] pad_response;
  wire physic_enable_pts;
  wire physic_enable_stp;
  wire physic_reset_pts;
  wire physic_reset_stp;
  input reset_host;
  output [127:0] response;
  wire [135:0] response_to_cmd_in;
  wire strobe_control_to_physical;
  wire strobe_physic_to_control;
  cmd_control cmd_control1 (
    .ack_in(ack_physic_to_control),
    .ack_out(ack_control_to_physical),
    .clk_host(clk_host),
    .cmd_argument(cmd_argument),
    .cmd_complete(cmd_complete),
    .cmd_in(response_to_cmd_in),
    .cmd_index(cmd_index),
    .cmd_index_error(cmd_index_error),
    .cmd_out(cmd_out_control_to_pts),
    .idle_out(idle_control_to_physical),
    .new_command(new_command),
    .reset_host(reset_host),
    .response(response),
    .strobe_in(strobe_physic_to_control),
    .strobe_out(strobe_control_to_physical)
  );
  control_capa_fisica control_capa_fisica1 (
    .ack_in(ack_control_to_physical),
    .ack_out(ack_physic_to_control),
    .clk_SD(clk_SD),
    .enable_pts(physic_enable_pts),
    .enable_stp(physic_enable_stp),
    .idle_in(idle_control_to_physical),
    .load_send(IO_enable_pin),
    .pad_response(pad_response),
    .reception_complete(end_serializer),
    .reset_host(reset_host),
    .reset_pts(physic_reset_pts),
    .reset_stp(physic_reset_stp),
    .response(response_to_cmd_in),
    .strobe_in(strobe_control_to_physical),
    .strobe_out(strobe_physic_to_control),
    .transmission_complete(end_parallel)
  );
  parallel_to_serial parallel_to_serial1 (
    .clk_SD(clk_SD),
    .enable_pts(physic_enable_pts),
    .parallel_complete(end_parallel),
    .reset_pts(physic_reset_pts),
    .signal_in(cmd_out_control_to_pts),
    .signal_out(CMD_PIN_OUT)
  );
  serial_to_parallel serial_to_parallel1 (
    .clk_SD(clk_SD),
    .command(cmd_out_control_to_pts),
    .enable_stp(physic_enable_stp),
    .reset_stp(physic_reset_stp),
    .serial_complete(end_serializer),
    .signal_in(CMD_PIN_IN),
    .signal_out(pad_response)
  );
endmodule

module DATA(CLK, RESET_L, writeRead_Regs_DATA, blockCount_Regs_DATA, multipleData_Regs_DATA, timeout_Enable_Regs_DATA, timeout_Reg_Regs_DATA, new_DAT_DMA_DATA, serial_Ready_Phy_DATA, timeout_Phy_DATA, complete_Phy_DATA, ack_IN_Phy_DATA, fifo_OK_FIFO_DATA, transfer_complete_DATA_DMA, strobe_OUT_DATA_Phy, ack_OUT_DATA_Phy, blocks_DATA_Phy, timeout_value_DATA_Phy, writeReadPhysical_DATA_Phy, multiple_DATA_Phy, idle_out_DATA_Phy);
  wire _0_;
  input CLK;
  input RESET_L;
  wire STATE;
  input ack_IN_Phy_DATA;
  output ack_OUT_DATA_Phy;
  input [3:0] blockCount_Regs_DATA;
  output [3:0] blocks_DATA_Phy;
  input complete_Phy_DATA;
  input fifo_OK_FIFO_DATA;
  output idle_out_DATA_Phy;
  input multipleData_Regs_DATA;
  output multiple_DATA_Phy;
  input new_DAT_DMA_DATA;
  input serial_Ready_Phy_DATA;
  output strobe_OUT_DATA_Phy;
  input timeout_Enable_Regs_DATA;
  input timeout_Phy_DATA;
  input [15:0] timeout_Reg_Regs_DATA;
  output [15:0] timeout_value_DATA_Phy;
  output transfer_complete_DATA_DMA;
  output writeReadPhysical_DATA_Phy;
  input writeRead_Regs_DATA;
  NOT _1_ (
    .A(RESET_L),
    .Y(_0_)
  );
  NOT _2_ (
    .A(STATE),
    .Y(idle_out_DATA_Phy)
  );
  DFF _3_ (
    .C(CLK),
    .D(_0_),
    .Q(STATE)
  );
  \$_DLATCH_P_  _4_ (
    .D(1'b0),
    .E(STATE),
    .Q(timeout_value_DATA_Phy[7])
  );
  assign ack_OUT_DATA_Phy = timeout_value_DATA_Phy[7];
  assign blocks_DATA_Phy = { timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7] };
  assign multiple_DATA_Phy = timeout_value_DATA_Phy[7];
  assign strobe_OUT_DATA_Phy = timeout_value_DATA_Phy[7];
  assign { timeout_value_DATA_Phy[15:8], timeout_value_DATA_Phy[6:0] } = { timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7] };
  assign transfer_complete_DATA_DMA = timeout_value_DATA_Phy[7];
  assign writeReadPhysical_DATA_Phy = timeout_value_DATA_Phy[7];
endmodule

module DATA_PHYSICAL(SD_CLK, RESET_L, strobe_IN_DATA_Phy, ack_IN_DATA_Phy, timeout_Reg_DATA_Phy, blocks_DATA_Phy, writeRead_DATA_Phy, multiple_DATA_Phy, idle_in_DATA_Phy, transmission_complete_PS_Phy, reception_complete_SP_Phy, data_read_SP_Phy, dataFromFIFO_FIFO_Phy, serial_Ready_Phy_DATA, complete_Phy_DATA, ack_OUT_Phy_DATA, data_timeout_Phy_DATA, reset_Wrapper_Phy_PS, enable_pts_Wrapper_Phy_PS, enable_stp_Wrapper_Phy_SP, dataParallel_Phy_PS, pad_state_Phy_PAD, pad_enable_Phy_PAD, writeFIFO_enable_Phy_FIFO, readFIFO_enable_Phy_FIFO, dataReadToFIFO_Phy_FIFO, IO_enable_Phy_SD_CARD);
  wire _0_;
  wire _1_;
  output IO_enable_Phy_SD_CARD;
  input RESET_L;
  input SD_CLK;
  wire STATE;
  input ack_IN_DATA_Phy;
  output ack_OUT_Phy_DATA;
  input [3:0] blocks_DATA_Phy;
  output complete_Phy_DATA;
  input [31:0] dataFromFIFO_FIFO_Phy;
  output [31:0] dataParallel_Phy_PS;
  output [31:0] dataReadToFIFO_Phy_FIFO;
  input [31:0] data_read_SP_Phy;
  output data_timeout_Phy_DATA;
  output enable_pts_Wrapper_Phy_PS;
  output enable_stp_Wrapper_Phy_SP;
  input idle_in_DATA_Phy;
  input multiple_DATA_Phy;
  output pad_enable_Phy_PAD;
  output pad_state_Phy_PAD;
  output readFIFO_enable_Phy_FIFO;
  input reception_complete_SP_Phy;
  output reset_Wrapper_Phy_PS;
  output serial_Ready_Phy_DATA;
  input strobe_IN_DATA_Phy;
  input [15:0] timeout_Reg_DATA_Phy;
  input transmission_complete_PS_Phy;
  output writeFIFO_enable_Phy_FIFO;
  input writeRead_DATA_Phy;
  NOT _2_ (
    .A(RESET_L),
    .Y(_0_)
  );
  NOT _3_ (
    .A(STATE),
    .Y(serial_Ready_Phy_DATA)
  );
  BUF _4_ (
    .A(STATE),
    .Y(_1_)
  );
  DFF _5_ (
    .C(SD_CLK),
    .D(_0_),
    .Q(STATE)
  );
  \$_DLATCH_P_  _6_ (
    .D(_1_),
    .E(STATE),
    .Q(reset_Wrapper_Phy_PS)
  );
  \$_DLATCH_P_  _7_ (
    .D(1'b0),
    .E(STATE),
    .Q(dataParallel_Phy_PS[24])
  );
  assign IO_enable_Phy_SD_CARD = dataParallel_Phy_PS[24];
  assign ack_OUT_Phy_DATA = dataParallel_Phy_PS[24];
  assign complete_Phy_DATA = dataParallel_Phy_PS[24];
  assign { dataParallel_Phy_PS[31:25], dataParallel_Phy_PS[23:0] } = { dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24] };
  assign dataReadToFIFO_Phy_FIFO = { dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24] };
  assign data_timeout_Phy_DATA = dataParallel_Phy_PS[24];
  assign enable_pts_Wrapper_Phy_PS = dataParallel_Phy_PS[24];
  assign enable_stp_Wrapper_Phy_SP = dataParallel_Phy_PS[24];
  assign pad_enable_Phy_PAD = dataParallel_Phy_PS[24];
  assign pad_state_Phy_PAD = dataParallel_Phy_PS[24];
  assign readFIFO_enable_Phy_FIFO = dataParallel_Phy_PS[24];
  assign writeFIFO_enable_Phy_FIFO = dataParallel_Phy_PS[24];
endmodule

module PARALLEL_TO_SERIAL(enable_pts, reset_pts, SD_CLK, signal_in, signal_out, parallel_complete);
  wire [8:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  input SD_CLK;
  wire [8:0] contador;
  input enable_pts;
  output parallel_complete;
  input reset_pts;
  input [31:0] signal_in;
  output signal_out;
  NOT _166_ (
    .A(reset_pts),
    .Y(_128_)
  );
  NOT _167_ (
    .A(parallel_complete),
    .Y(_129_)
  );
  NOR _168_ (
    .A(enable_pts),
    .B(_129_),
    .Y(_130_)
  );
  NOT _169_ (
    .A(enable_pts),
    .Y(_131_)
  );
  NOR _170_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_132_)
  );
  NOT _171_ (
    .A(_132_),
    .Y(_133_)
  );
  NOR _172_ (
    .A(_133_),
    .B(contador[3]),
    .Y(_134_)
  );
  NOT _173_ (
    .A(contador[7]),
    .Y(_135_)
  );
  NOR _174_ (
    .A(contador[8]),
    .B(contador[4]),
    .Y(_136_)
  );
  NAND _175_ (
    .A(_136_),
    .B(_135_),
    .Y(_137_)
  );
  NOT _176_ (
    .A(contador[2]),
    .Y(_138_)
  );
  NOT _177_ (
    .A(contador[5]),
    .Y(_139_)
  );
  NOR _178_ (
    .A(_139_),
    .B(contador[6]),
    .Y(_140_)
  );
  NAND _179_ (
    .A(_140_),
    .B(_138_),
    .Y(_141_)
  );
  NOR _180_ (
    .A(_141_),
    .B(_137_),
    .Y(_142_)
  );
  NAND _181_ (
    .A(_142_),
    .B(_134_),
    .Y(_143_)
  );
  NOR _182_ (
    .A(_143_),
    .B(_131_),
    .Y(_144_)
  );
  NOR _183_ (
    .A(_144_),
    .B(_130_),
    .Y(_145_)
  );
  NOR _184_ (
    .A(_145_),
    .B(_128_),
    .Y(_001_)
  );
  NOR _185_ (
    .A(_144_),
    .B(_128_),
    .Y(_146_)
  );
  NOT _186_ (
    .A(_146_),
    .Y(_147_)
  );
  NOT _187_ (
    .A(contador[0]),
    .Y(_148_)
  );
  NAND _188_ (
    .A(_148_),
    .B(_131_),
    .Y(_149_)
  );
  NAND _189_ (
    .A(contador[0]),
    .B(enable_pts),
    .Y(_150_)
  );
  NAND _190_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NOR _191_ (
    .A(_151_),
    .B(_147_),
    .Y(_000_[0])
  );
  NOT _192_ (
    .A(contador[1]),
    .Y(_152_)
  );
  NOR _193_ (
    .A(_150_),
    .B(_152_),
    .Y(_153_)
  );
  NAND _194_ (
    .A(_150_),
    .B(_152_),
    .Y(_154_)
  );
  NAND _195_ (
    .A(_154_),
    .B(reset_pts),
    .Y(_155_)
  );
  NOR _196_ (
    .A(_155_),
    .B(_153_),
    .Y(_000_[1])
  );
  NAND _197_ (
    .A(_153_),
    .B(contador[2]),
    .Y(_156_)
  );
  NOT _198_ (
    .A(_156_),
    .Y(_157_)
  );
  NOT _199_ (
    .A(_153_),
    .Y(_158_)
  );
  NAND _200_ (
    .A(_158_),
    .B(_138_),
    .Y(_159_)
  );
  NAND _201_ (
    .A(_159_),
    .B(reset_pts),
    .Y(_160_)
  );
  NOR _202_ (
    .A(_160_),
    .B(_157_),
    .Y(_000_[2])
  );
  NOT _203_ (
    .A(contador[3]),
    .Y(_161_)
  );
  NOR _204_ (
    .A(_156_),
    .B(_161_),
    .Y(_162_)
  );
  NAND _205_ (
    .A(_156_),
    .B(_161_),
    .Y(_163_)
  );
  NAND _206_ (
    .A(_163_),
    .B(reset_pts),
    .Y(_164_)
  );
  NOR _207_ (
    .A(_164_),
    .B(_162_),
    .Y(_000_[3])
  );
  NAND _208_ (
    .A(_162_),
    .B(contador[4]),
    .Y(_165_)
  );
  NOT _209_ (
    .A(_165_),
    .Y(_003_)
  );
  NOT _210_ (
    .A(contador[4]),
    .Y(_004_)
  );
  NOT _211_ (
    .A(_162_),
    .Y(_005_)
  );
  NAND _212_ (
    .A(_005_),
    .B(_004_),
    .Y(_006_)
  );
  NAND _213_ (
    .A(_006_),
    .B(reset_pts),
    .Y(_007_)
  );
  NOR _214_ (
    .A(_007_),
    .B(_003_),
    .Y(_000_[4])
  );
  NOR _215_ (
    .A(_003_),
    .B(contador[5]),
    .Y(_008_)
  );
  NOR _216_ (
    .A(_165_),
    .B(_139_),
    .Y(_009_)
  );
  NOT _217_ (
    .A(_009_),
    .Y(_010_)
  );
  NAND _218_ (
    .A(_010_),
    .B(_146_),
    .Y(_011_)
  );
  NOR _219_ (
    .A(_011_),
    .B(_008_),
    .Y(_000_[5])
  );
  NOR _220_ (
    .A(_009_),
    .B(contador[6]),
    .Y(_012_)
  );
  NAND _221_ (
    .A(_009_),
    .B(contador[6]),
    .Y(_013_)
  );
  NAND _222_ (
    .A(_013_),
    .B(reset_pts),
    .Y(_014_)
  );
  NOR _223_ (
    .A(_014_),
    .B(_012_),
    .Y(_000_[6])
  );
  NOR _224_ (
    .A(_013_),
    .B(_135_),
    .Y(_015_)
  );
  NAND _225_ (
    .A(_013_),
    .B(_135_),
    .Y(_016_)
  );
  NAND _226_ (
    .A(_016_),
    .B(reset_pts),
    .Y(_017_)
  );
  NOR _227_ (
    .A(_017_),
    .B(_015_),
    .Y(_000_[7])
  );
  NOT _228_ (
    .A(contador[8]),
    .Y(_018_)
  );
  NOR _229_ (
    .A(_015_),
    .B(_018_),
    .Y(_019_)
  );
  NOT _230_ (
    .A(_015_),
    .Y(_020_)
  );
  NOR _231_ (
    .A(_020_),
    .B(contador[8]),
    .Y(_021_)
  );
  NOR _232_ (
    .A(_021_),
    .B(_019_),
    .Y(_022_)
  );
  NOR _233_ (
    .A(_022_),
    .B(_128_),
    .Y(_000_[8])
  );
  NOT _234_ (
    .A(signal_out),
    .Y(_023_)
  );
  NOR _235_ (
    .A(_143_),
    .B(_023_),
    .Y(_024_)
  );
  NOR _236_ (
    .A(signal_in[0]),
    .B(_004_),
    .Y(_025_)
  );
  NOR _237_ (
    .A(signal_in[16]),
    .B(contador[4]),
    .Y(_026_)
  );
  NOR _238_ (
    .A(_026_),
    .B(_025_),
    .Y(_027_)
  );
  NOR _239_ (
    .A(_027_),
    .B(_161_),
    .Y(_028_)
  );
  NOR _240_ (
    .A(signal_in[24]),
    .B(contador[4]),
    .Y(_029_)
  );
  NOR _241_ (
    .A(signal_in[8]),
    .B(_004_),
    .Y(_030_)
  );
  NOR _242_ (
    .A(_030_),
    .B(_029_),
    .Y(_031_)
  );
  NOR _243_ (
    .A(_031_),
    .B(contador[3]),
    .Y(_032_)
  );
  NOR _244_ (
    .A(_032_),
    .B(_028_),
    .Y(_033_)
  );
  NOR _245_ (
    .A(_033_),
    .B(_152_),
    .Y(_034_)
  );
  NAND _246_ (
    .A(signal_in[26]),
    .B(_004_),
    .Y(_035_)
  );
  NAND _247_ (
    .A(signal_in[10]),
    .B(contador[4]),
    .Y(_036_)
  );
  NAND _248_ (
    .A(_036_),
    .B(_035_),
    .Y(_037_)
  );
  NOR _249_ (
    .A(_037_),
    .B(contador[3]),
    .Y(_038_)
  );
  NOT _250_ (
    .A(signal_in[2]),
    .Y(_039_)
  );
  NOR _251_ (
    .A(_039_),
    .B(_004_),
    .Y(_040_)
  );
  NAND _252_ (
    .A(signal_in[18]),
    .B(_004_),
    .Y(_041_)
  );
  NAND _253_ (
    .A(_041_),
    .B(contador[3]),
    .Y(_042_)
  );
  NOR _254_ (
    .A(_042_),
    .B(_040_),
    .Y(_043_)
  );
  NOR _255_ (
    .A(_043_),
    .B(_038_),
    .Y(_044_)
  );
  NOR _256_ (
    .A(_044_),
    .B(contador[1]),
    .Y(_045_)
  );
  NOR _257_ (
    .A(_045_),
    .B(_034_),
    .Y(_046_)
  );
  NOR _258_ (
    .A(_046_),
    .B(_138_),
    .Y(_047_)
  );
  NOR _259_ (
    .A(signal_in[4]),
    .B(_004_),
    .Y(_048_)
  );
  NOR _260_ (
    .A(signal_in[20]),
    .B(contador[4]),
    .Y(_049_)
  );
  NOR _261_ (
    .A(_049_),
    .B(_048_),
    .Y(_050_)
  );
  NOR _262_ (
    .A(_050_),
    .B(_161_),
    .Y(_051_)
  );
  NOR _263_ (
    .A(signal_in[28]),
    .B(contador[4]),
    .Y(_052_)
  );
  NOR _264_ (
    .A(signal_in[12]),
    .B(_004_),
    .Y(_053_)
  );
  NOR _265_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _266_ (
    .A(_054_),
    .B(contador[3]),
    .Y(_055_)
  );
  NOR _267_ (
    .A(_055_),
    .B(_051_),
    .Y(_056_)
  );
  NOR _268_ (
    .A(_056_),
    .B(_152_),
    .Y(_057_)
  );
  NAND _269_ (
    .A(signal_in[30]),
    .B(_004_),
    .Y(_058_)
  );
  NAND _270_ (
    .A(signal_in[14]),
    .B(contador[4]),
    .Y(_059_)
  );
  NAND _271_ (
    .A(_059_),
    .B(_058_),
    .Y(_060_)
  );
  NOR _272_ (
    .A(_060_),
    .B(contador[3]),
    .Y(_061_)
  );
  NOT _273_ (
    .A(signal_in[6]),
    .Y(_062_)
  );
  NOR _274_ (
    .A(_062_),
    .B(_004_),
    .Y(_063_)
  );
  NAND _275_ (
    .A(signal_in[22]),
    .B(_004_),
    .Y(_064_)
  );
  NAND _276_ (
    .A(_064_),
    .B(contador[3]),
    .Y(_065_)
  );
  NOR _277_ (
    .A(_065_),
    .B(_063_),
    .Y(_066_)
  );
  NOR _278_ (
    .A(_066_),
    .B(_061_),
    .Y(_067_)
  );
  NOR _279_ (
    .A(_067_),
    .B(contador[1]),
    .Y(_068_)
  );
  NOR _280_ (
    .A(_068_),
    .B(_057_),
    .Y(_069_)
  );
  NOR _281_ (
    .A(_069_),
    .B(contador[2]),
    .Y(_070_)
  );
  NOR _282_ (
    .A(_070_),
    .B(_047_),
    .Y(_071_)
  );
  NOR _283_ (
    .A(_071_),
    .B(_148_),
    .Y(_072_)
  );
  NAND _284_ (
    .A(signal_in[25]),
    .B(_004_),
    .Y(_073_)
  );
  NOT _285_ (
    .A(signal_in[9]),
    .Y(_074_)
  );
  NOR _286_ (
    .A(_074_),
    .B(_004_),
    .Y(_075_)
  );
  NOR _287_ (
    .A(_075_),
    .B(contador[3]),
    .Y(_076_)
  );
  NAND _288_ (
    .A(_076_),
    .B(_073_),
    .Y(_077_)
  );
  NAND _289_ (
    .A(signal_in[1]),
    .B(contador[4]),
    .Y(_078_)
  );
  NOT _290_ (
    .A(signal_in[17]),
    .Y(_079_)
  );
  NOR _291_ (
    .A(_079_),
    .B(contador[4]),
    .Y(_080_)
  );
  NOR _292_ (
    .A(_080_),
    .B(_161_),
    .Y(_081_)
  );
  NAND _293_ (
    .A(_081_),
    .B(_078_),
    .Y(_082_)
  );
  NAND _294_ (
    .A(_082_),
    .B(_077_),
    .Y(_083_)
  );
  NOR _295_ (
    .A(_083_),
    .B(_138_),
    .Y(_084_)
  );
  NAND _296_ (
    .A(signal_in[29]),
    .B(_004_),
    .Y(_085_)
  );
  NAND _297_ (
    .A(signal_in[13]),
    .B(contador[4]),
    .Y(_086_)
  );
  NAND _298_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NOR _299_ (
    .A(_087_),
    .B(contador[3]),
    .Y(_088_)
  );
  NOT _300_ (
    .A(signal_in[5]),
    .Y(_089_)
  );
  NOR _301_ (
    .A(_089_),
    .B(_004_),
    .Y(_090_)
  );
  NAND _302_ (
    .A(signal_in[21]),
    .B(_004_),
    .Y(_091_)
  );
  NAND _303_ (
    .A(_091_),
    .B(contador[3]),
    .Y(_092_)
  );
  NOR _304_ (
    .A(_092_),
    .B(_090_),
    .Y(_093_)
  );
  NOR _305_ (
    .A(_093_),
    .B(_088_),
    .Y(_094_)
  );
  NAND _306_ (
    .A(_094_),
    .B(_138_),
    .Y(_095_)
  );
  NAND _307_ (
    .A(_095_),
    .B(contador[1]),
    .Y(_096_)
  );
  NOR _308_ (
    .A(_096_),
    .B(_084_),
    .Y(_097_)
  );
  NAND _309_ (
    .A(_097_),
    .B(_148_),
    .Y(_098_)
  );
  NOR _310_ (
    .A(signal_in[3]),
    .B(_004_),
    .Y(_099_)
  );
  NOR _311_ (
    .A(signal_in[19]),
    .B(contador[4]),
    .Y(_100_)
  );
  NOR _312_ (
    .A(_100_),
    .B(_099_),
    .Y(_101_)
  );
  NOR _313_ (
    .A(_101_),
    .B(_161_),
    .Y(_102_)
  );
  NOR _314_ (
    .A(signal_in[27]),
    .B(contador[4]),
    .Y(_103_)
  );
  NOR _315_ (
    .A(signal_in[11]),
    .B(_004_),
    .Y(_104_)
  );
  NOR _316_ (
    .A(_104_),
    .B(_103_),
    .Y(_105_)
  );
  NOR _317_ (
    .A(_105_),
    .B(contador[3]),
    .Y(_106_)
  );
  NOR _318_ (
    .A(_106_),
    .B(_102_),
    .Y(_107_)
  );
  NOR _319_ (
    .A(_107_),
    .B(_138_),
    .Y(_108_)
  );
  NOR _320_ (
    .A(signal_in[7]),
    .B(_004_),
    .Y(_109_)
  );
  NOR _321_ (
    .A(signal_in[23]),
    .B(contador[4]),
    .Y(_110_)
  );
  NOR _322_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _323_ (
    .A(_111_),
    .B(_161_),
    .Y(_112_)
  );
  NOR _324_ (
    .A(signal_in[31]),
    .B(contador[4]),
    .Y(_113_)
  );
  NOR _325_ (
    .A(signal_in[15]),
    .B(_004_),
    .Y(_114_)
  );
  NOR _326_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _327_ (
    .A(_115_),
    .B(contador[3]),
    .Y(_116_)
  );
  NOR _328_ (
    .A(_116_),
    .B(_112_),
    .Y(_117_)
  );
  NOR _329_ (
    .A(_117_),
    .B(contador[2]),
    .Y(_118_)
  );
  NOR _330_ (
    .A(_118_),
    .B(_108_),
    .Y(_119_)
  );
  NOR _331_ (
    .A(_119_),
    .B(_133_),
    .Y(_120_)
  );
  NOT _332_ (
    .A(contador[6]),
    .Y(_121_)
  );
  NAND _333_ (
    .A(_139_),
    .B(_121_),
    .Y(_122_)
  );
  NOR _334_ (
    .A(_122_),
    .B(_120_),
    .Y(_123_)
  );
  NAND _335_ (
    .A(_123_),
    .B(_098_),
    .Y(_124_)
  );
  NOR _336_ (
    .A(_124_),
    .B(_072_),
    .Y(_125_)
  );
  NOR _337_ (
    .A(_125_),
    .B(_024_),
    .Y(_126_)
  );
  NAND _338_ (
    .A(reset_pts),
    .B(enable_pts),
    .Y(_127_)
  );
  NOR _339_ (
    .A(_127_),
    .B(_126_),
    .Y(_002_)
  );
  DFF _340_ (
    .C(SD_CLK),
    .D(_002_),
    .Q(signal_out)
  );
  DFF _341_ (
    .C(SD_CLK),
    .D(_001_),
    .Q(parallel_complete)
  );
  DFF _342_ (
    .C(SD_CLK),
    .D(_000_[0]),
    .Q(contador[0])
  );
  DFF _343_ (
    .C(SD_CLK),
    .D(_000_[1]),
    .Q(contador[1])
  );
  DFF _344_ (
    .C(SD_CLK),
    .D(_000_[2]),
    .Q(contador[2])
  );
  DFF _345_ (
    .C(SD_CLK),
    .D(_000_[3]),
    .Q(contador[3])
  );
  DFF _346_ (
    .C(SD_CLK),
    .D(_000_[4]),
    .Q(contador[4])
  );
  DFF _347_ (
    .C(SD_CLK),
    .D(_000_[5]),
    .Q(contador[5])
  );
  DFF _348_ (
    .C(SD_CLK),
    .D(_000_[6]),
    .Q(contador[6])
  );
  DFF _349_ (
    .C(SD_CLK),
    .D(_000_[7]),
    .Q(contador[7])
  );
  DFF _350_ (
    .C(SD_CLK),
    .D(_000_[8]),
    .Q(contador[8])
  );
endmodule

module SERIAL_TO_PARALLEL(serial_in, enable_stp, SD_CLK, RESET_L, reception_complete, parallel_out);
  wire [8:0] _000_;
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  input RESET_L;
  input SD_CLK;
  wire [8:0] contador;
  input enable_stp;
  output [31:0] parallel_out;
  output reception_complete;
  input serial_in;
  NOT _238_ (
    .A(RESET_L),
    .Y(_237_)
  );
  NOT _239_ (
    .A(enable_stp),
    .Y(_003_)
  );
  NAND _240_ (
    .A(_003_),
    .B(reception_complete),
    .Y(_004_)
  );
  NOR _241_ (
    .A(contador[8]),
    .B(contador[7]),
    .Y(_005_)
  );
  NAND _242_ (
    .A(_005_),
    .B(contador[5]),
    .Y(_006_)
  );
  NOR _243_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_007_)
  );
  NOT _244_ (
    .A(contador[2]),
    .Y(_008_)
  );
  NOT _245_ (
    .A(contador[3]),
    .Y(_009_)
  );
  NAND _246_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NOT _247_ (
    .A(contador[4]),
    .Y(_011_)
  );
  NOT _248_ (
    .A(contador[6]),
    .Y(_012_)
  );
  NAND _249_ (
    .A(_012_),
    .B(_011_),
    .Y(_013_)
  );
  NOR _250_ (
    .A(_013_),
    .B(_010_),
    .Y(_014_)
  );
  NAND _251_ (
    .A(_014_),
    .B(_007_),
    .Y(_015_)
  );
  NOR _252_ (
    .A(_015_),
    .B(_006_),
    .Y(_016_)
  );
  NAND _253_ (
    .A(_016_),
    .B(enable_stp),
    .Y(_017_)
  );
  NAND _254_ (
    .A(_017_),
    .B(_004_),
    .Y(_002_)
  );
  NOT _255_ (
    .A(parallel_out[1]),
    .Y(_018_)
  );
  NOR _256_ (
    .A(_016_),
    .B(_018_),
    .Y(_019_)
  );
  NOT _257_ (
    .A(parallel_out[0]),
    .Y(_021_)
  );
  NOT _258_ (
    .A(_006_),
    .Y(_023_)
  );
  NOT _259_ (
    .A(_007_),
    .Y(_024_)
  );
  NOR _260_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_026_)
  );
  NOR _261_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_028_)
  );
  NAND _262_ (
    .A(_028_),
    .B(_026_),
    .Y(_030_)
  );
  NOR _263_ (
    .A(_030_),
    .B(_024_),
    .Y(_032_)
  );
  NAND _264_ (
    .A(_032_),
    .B(_023_),
    .Y(_033_)
  );
  NOR _265_ (
    .A(_033_),
    .B(_021_),
    .Y(_034_)
  );
  NOR _266_ (
    .A(_034_),
    .B(_019_),
    .Y(_035_)
  );
  NOR _267_ (
    .A(_035_),
    .B(_003_),
    .Y(_001_[0])
  );
  NOT _268_ (
    .A(parallel_out[2]),
    .Y(_038_)
  );
  NOR _269_ (
    .A(_016_),
    .B(_038_),
    .Y(_040_)
  );
  NOR _270_ (
    .A(_033_),
    .B(_018_),
    .Y(_042_)
  );
  NOR _271_ (
    .A(_042_),
    .B(_040_),
    .Y(_043_)
  );
  NOR _272_ (
    .A(_043_),
    .B(_003_),
    .Y(_001_[1])
  );
  NOT _273_ (
    .A(parallel_out[3]),
    .Y(_044_)
  );
  NOR _274_ (
    .A(_016_),
    .B(_044_),
    .Y(_045_)
  );
  NOR _275_ (
    .A(_033_),
    .B(_038_),
    .Y(_046_)
  );
  NOR _276_ (
    .A(_046_),
    .B(_045_),
    .Y(_047_)
  );
  NOR _277_ (
    .A(_047_),
    .B(_003_),
    .Y(_001_[2])
  );
  NOT _278_ (
    .A(parallel_out[4]),
    .Y(_048_)
  );
  NOR _279_ (
    .A(_016_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _280_ (
    .A(_033_),
    .B(_044_),
    .Y(_050_)
  );
  NOR _281_ (
    .A(_050_),
    .B(_049_),
    .Y(_051_)
  );
  NOR _282_ (
    .A(_051_),
    .B(_003_),
    .Y(_001_[3])
  );
  NOT _283_ (
    .A(parallel_out[5]),
    .Y(_052_)
  );
  NOR _284_ (
    .A(_016_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _285_ (
    .A(_033_),
    .B(_048_),
    .Y(_054_)
  );
  NOR _286_ (
    .A(_054_),
    .B(_053_),
    .Y(_055_)
  );
  NOR _287_ (
    .A(_055_),
    .B(_003_),
    .Y(_001_[4])
  );
  NOT _288_ (
    .A(parallel_out[6]),
    .Y(_056_)
  );
  NOR _289_ (
    .A(_016_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _290_ (
    .A(_033_),
    .B(_052_),
    .Y(_058_)
  );
  NOR _291_ (
    .A(_058_),
    .B(_057_),
    .Y(_059_)
  );
  NOR _292_ (
    .A(_059_),
    .B(_003_),
    .Y(_001_[5])
  );
  NOT _293_ (
    .A(parallel_out[7]),
    .Y(_060_)
  );
  NOR _294_ (
    .A(_016_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _295_ (
    .A(_033_),
    .B(_056_),
    .Y(_062_)
  );
  NOR _296_ (
    .A(_062_),
    .B(_061_),
    .Y(_063_)
  );
  NOR _297_ (
    .A(_063_),
    .B(_003_),
    .Y(_001_[6])
  );
  NOT _298_ (
    .A(parallel_out[8]),
    .Y(_064_)
  );
  NOR _299_ (
    .A(_016_),
    .B(_064_),
    .Y(_065_)
  );
  NOR _300_ (
    .A(_033_),
    .B(_060_),
    .Y(_066_)
  );
  NOR _301_ (
    .A(_066_),
    .B(_065_),
    .Y(_067_)
  );
  NOR _302_ (
    .A(_067_),
    .B(_003_),
    .Y(_001_[7])
  );
  NOT _303_ (
    .A(parallel_out[9]),
    .Y(_068_)
  );
  NOR _304_ (
    .A(_016_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _305_ (
    .A(_033_),
    .B(_064_),
    .Y(_070_)
  );
  NOR _306_ (
    .A(_070_),
    .B(_069_),
    .Y(_071_)
  );
  NOR _307_ (
    .A(_071_),
    .B(_003_),
    .Y(_001_[8])
  );
  NOT _308_ (
    .A(parallel_out[10]),
    .Y(_072_)
  );
  NOR _309_ (
    .A(_016_),
    .B(_072_),
    .Y(_073_)
  );
  NOR _310_ (
    .A(_033_),
    .B(_068_),
    .Y(_074_)
  );
  NOR _311_ (
    .A(_074_),
    .B(_073_),
    .Y(_075_)
  );
  NOR _312_ (
    .A(_075_),
    .B(_003_),
    .Y(_001_[9])
  );
  NOT _313_ (
    .A(parallel_out[11]),
    .Y(_076_)
  );
  NOR _314_ (
    .A(_016_),
    .B(_076_),
    .Y(_077_)
  );
  NOR _315_ (
    .A(_033_),
    .B(_072_),
    .Y(_078_)
  );
  NOR _316_ (
    .A(_078_),
    .B(_077_),
    .Y(_079_)
  );
  NOR _317_ (
    .A(_079_),
    .B(_003_),
    .Y(_001_[10])
  );
  NOT _318_ (
    .A(parallel_out[12]),
    .Y(_080_)
  );
  NOR _319_ (
    .A(_016_),
    .B(_080_),
    .Y(_081_)
  );
  NOR _320_ (
    .A(_033_),
    .B(_076_),
    .Y(_082_)
  );
  NOR _321_ (
    .A(_082_),
    .B(_081_),
    .Y(_083_)
  );
  NOR _322_ (
    .A(_083_),
    .B(_003_),
    .Y(_001_[11])
  );
  NOT _323_ (
    .A(parallel_out[13]),
    .Y(_084_)
  );
  NOR _324_ (
    .A(_016_),
    .B(_084_),
    .Y(_085_)
  );
  NOR _325_ (
    .A(_033_),
    .B(_080_),
    .Y(_086_)
  );
  NOR _326_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NOR _327_ (
    .A(_087_),
    .B(_003_),
    .Y(_001_[12])
  );
  NOT _328_ (
    .A(parallel_out[14]),
    .Y(_088_)
  );
  NOR _329_ (
    .A(_016_),
    .B(_088_),
    .Y(_089_)
  );
  NOR _330_ (
    .A(_033_),
    .B(_084_),
    .Y(_090_)
  );
  NOR _331_ (
    .A(_090_),
    .B(_089_),
    .Y(_091_)
  );
  NOR _332_ (
    .A(_091_),
    .B(_003_),
    .Y(_001_[13])
  );
  NOT _333_ (
    .A(parallel_out[15]),
    .Y(_092_)
  );
  NOR _334_ (
    .A(_016_),
    .B(_092_),
    .Y(_093_)
  );
  NOR _335_ (
    .A(_033_),
    .B(_088_),
    .Y(_094_)
  );
  NOR _336_ (
    .A(_094_),
    .B(_093_),
    .Y(_095_)
  );
  NOR _337_ (
    .A(_095_),
    .B(_003_),
    .Y(_001_[14])
  );
  NOT _338_ (
    .A(parallel_out[16]),
    .Y(_096_)
  );
  NOR _339_ (
    .A(_016_),
    .B(_096_),
    .Y(_097_)
  );
  NOR _340_ (
    .A(_033_),
    .B(_092_),
    .Y(_098_)
  );
  NOR _341_ (
    .A(_098_),
    .B(_097_),
    .Y(_099_)
  );
  NOR _342_ (
    .A(_099_),
    .B(_003_),
    .Y(_001_[15])
  );
  NOT _343_ (
    .A(parallel_out[17]),
    .Y(_100_)
  );
  NOR _344_ (
    .A(_016_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _345_ (
    .A(_033_),
    .B(_096_),
    .Y(_102_)
  );
  NOR _346_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR _347_ (
    .A(_103_),
    .B(_003_),
    .Y(_001_[16])
  );
  NOT _348_ (
    .A(parallel_out[18]),
    .Y(_104_)
  );
  NOR _349_ (
    .A(_016_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _350_ (
    .A(_033_),
    .B(_100_),
    .Y(_106_)
  );
  NOR _351_ (
    .A(_106_),
    .B(_105_),
    .Y(_107_)
  );
  NOR _352_ (
    .A(_107_),
    .B(_003_),
    .Y(_001_[17])
  );
  NOT _353_ (
    .A(parallel_out[19]),
    .Y(_108_)
  );
  NOR _354_ (
    .A(_016_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _355_ (
    .A(_033_),
    .B(_104_),
    .Y(_110_)
  );
  NOR _356_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _357_ (
    .A(_111_),
    .B(_003_),
    .Y(_001_[18])
  );
  NOT _358_ (
    .A(parallel_out[20]),
    .Y(_112_)
  );
  NOR _359_ (
    .A(_016_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _360_ (
    .A(_033_),
    .B(_108_),
    .Y(_114_)
  );
  NOR _361_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _362_ (
    .A(_115_),
    .B(_003_),
    .Y(_001_[19])
  );
  NOT _363_ (
    .A(parallel_out[21]),
    .Y(_116_)
  );
  NOR _364_ (
    .A(_016_),
    .B(_116_),
    .Y(_117_)
  );
  NOR _365_ (
    .A(_033_),
    .B(_112_),
    .Y(_118_)
  );
  NOR _366_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NOR _367_ (
    .A(_119_),
    .B(_003_),
    .Y(_001_[20])
  );
  NOT _368_ (
    .A(parallel_out[22]),
    .Y(_120_)
  );
  NOR _369_ (
    .A(_016_),
    .B(_120_),
    .Y(_121_)
  );
  NOR _370_ (
    .A(_033_),
    .B(_116_),
    .Y(_122_)
  );
  NOR _371_ (
    .A(_122_),
    .B(_121_),
    .Y(_123_)
  );
  NOR _372_ (
    .A(_123_),
    .B(_003_),
    .Y(_001_[21])
  );
  NOT _373_ (
    .A(parallel_out[23]),
    .Y(_124_)
  );
  NOR _374_ (
    .A(_016_),
    .B(_124_),
    .Y(_125_)
  );
  NOR _375_ (
    .A(_033_),
    .B(_120_),
    .Y(_126_)
  );
  NOR _376_ (
    .A(_126_),
    .B(_125_),
    .Y(_127_)
  );
  NOR _377_ (
    .A(_127_),
    .B(_003_),
    .Y(_001_[22])
  );
  NOT _378_ (
    .A(parallel_out[24]),
    .Y(_128_)
  );
  NOR _379_ (
    .A(_016_),
    .B(_128_),
    .Y(_129_)
  );
  NOR _380_ (
    .A(_033_),
    .B(_124_),
    .Y(_130_)
  );
  NOR _381_ (
    .A(_130_),
    .B(_129_),
    .Y(_131_)
  );
  NOR _382_ (
    .A(_131_),
    .B(_003_),
    .Y(_001_[23])
  );
  NOT _383_ (
    .A(parallel_out[25]),
    .Y(_132_)
  );
  NOR _384_ (
    .A(_016_),
    .B(_132_),
    .Y(_133_)
  );
  NOR _385_ (
    .A(_033_),
    .B(_128_),
    .Y(_134_)
  );
  NOR _386_ (
    .A(_134_),
    .B(_133_),
    .Y(_135_)
  );
  NOR _387_ (
    .A(_135_),
    .B(_003_),
    .Y(_001_[24])
  );
  NOT _388_ (
    .A(parallel_out[26]),
    .Y(_136_)
  );
  NOR _389_ (
    .A(_016_),
    .B(_136_),
    .Y(_137_)
  );
  NOR _390_ (
    .A(_033_),
    .B(_132_),
    .Y(_138_)
  );
  NOR _391_ (
    .A(_138_),
    .B(_137_),
    .Y(_139_)
  );
  NOR _392_ (
    .A(_139_),
    .B(_003_),
    .Y(_001_[25])
  );
  NOT _393_ (
    .A(parallel_out[27]),
    .Y(_140_)
  );
  NOR _394_ (
    .A(_016_),
    .B(_140_),
    .Y(_141_)
  );
  NOR _395_ (
    .A(_033_),
    .B(_136_),
    .Y(_142_)
  );
  NOR _396_ (
    .A(_142_),
    .B(_141_),
    .Y(_143_)
  );
  NOR _397_ (
    .A(_143_),
    .B(_003_),
    .Y(_001_[26])
  );
  NOT _398_ (
    .A(parallel_out[28]),
    .Y(_144_)
  );
  NOR _399_ (
    .A(_016_),
    .B(_144_),
    .Y(_145_)
  );
  NOR _400_ (
    .A(_033_),
    .B(_140_),
    .Y(_146_)
  );
  NOR _401_ (
    .A(_146_),
    .B(_145_),
    .Y(_147_)
  );
  NOR _402_ (
    .A(_147_),
    .B(_003_),
    .Y(_001_[27])
  );
  NOT _403_ (
    .A(parallel_out[29]),
    .Y(_148_)
  );
  NOR _404_ (
    .A(_016_),
    .B(_148_),
    .Y(_149_)
  );
  NOR _405_ (
    .A(_033_),
    .B(_144_),
    .Y(_150_)
  );
  NOR _406_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NOR _407_ (
    .A(_151_),
    .B(_003_),
    .Y(_001_[28])
  );
  NOT _408_ (
    .A(parallel_out[30]),
    .Y(_152_)
  );
  NOR _409_ (
    .A(_016_),
    .B(_152_),
    .Y(_153_)
  );
  NOR _410_ (
    .A(_033_),
    .B(_148_),
    .Y(_154_)
  );
  NOR _411_ (
    .A(_154_),
    .B(_153_),
    .Y(_155_)
  );
  NOR _412_ (
    .A(_155_),
    .B(_003_),
    .Y(_001_[29])
  );
  NOT _413_ (
    .A(parallel_out[31]),
    .Y(_156_)
  );
  NOR _414_ (
    .A(_016_),
    .B(_156_),
    .Y(_157_)
  );
  NOR _415_ (
    .A(_033_),
    .B(_152_),
    .Y(_158_)
  );
  NOR _416_ (
    .A(_158_),
    .B(_157_),
    .Y(_159_)
  );
  NOR _417_ (
    .A(_159_),
    .B(_003_),
    .Y(_001_[30])
  );
  NOT _418_ (
    .A(serial_in),
    .Y(_160_)
  );
  NOR _419_ (
    .A(_016_),
    .B(_160_),
    .Y(_161_)
  );
  NOR _420_ (
    .A(_033_),
    .B(_156_),
    .Y(_162_)
  );
  NOR _421_ (
    .A(_162_),
    .B(_161_),
    .Y(_163_)
  );
  NOR _422_ (
    .A(_163_),
    .B(_003_),
    .Y(_001_[31])
  );
  NAND _423_ (
    .A(contador[0]),
    .B(_003_),
    .Y(_164_)
  );
  NOR _424_ (
    .A(_016_),
    .B(contador[0]),
    .Y(_165_)
  );
  NAND _425_ (
    .A(_165_),
    .B(enable_stp),
    .Y(_166_)
  );
  NAND _426_ (
    .A(_166_),
    .B(_164_),
    .Y(_000_[0])
  );
  NOT _427_ (
    .A(contador[0]),
    .Y(_167_)
  );
  NOT _428_ (
    .A(contador[1]),
    .Y(_168_)
  );
  NOR _429_ (
    .A(_168_),
    .B(_167_),
    .Y(_169_)
  );
  NOR _430_ (
    .A(_169_),
    .B(_007_),
    .Y(_170_)
  );
  NOR _431_ (
    .A(_170_),
    .B(_003_),
    .Y(_171_)
  );
  NOR _432_ (
    .A(contador[1]),
    .B(enable_stp),
    .Y(_172_)
  );
  NOR _433_ (
    .A(_172_),
    .B(_171_),
    .Y(_000_[1])
  );
  NAND _434_ (
    .A(_169_),
    .B(enable_stp),
    .Y(_173_)
  );
  NOR _435_ (
    .A(_173_),
    .B(_008_),
    .Y(_174_)
  );
  NAND _436_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_175_)
  );
  NOR _437_ (
    .A(_175_),
    .B(_003_),
    .Y(_176_)
  );
  NOR _438_ (
    .A(_176_),
    .B(contador[2]),
    .Y(_177_)
  );
  NOR _439_ (
    .A(_177_),
    .B(_174_),
    .Y(_000_[2])
  );
  NOR _440_ (
    .A(_174_),
    .B(contador[3]),
    .Y(_178_)
  );
  NAND _441_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_179_)
  );
  NOR _442_ (
    .A(_179_),
    .B(_173_),
    .Y(_180_)
  );
  NOR _443_ (
    .A(_180_),
    .B(_178_),
    .Y(_000_[3])
  );
  NOR _444_ (
    .A(_180_),
    .B(contador[4]),
    .Y(_181_)
  );
  NOT _445_ (
    .A(_179_),
    .Y(_182_)
  );
  NAND _446_ (
    .A(_182_),
    .B(_176_),
    .Y(_183_)
  );
  NOR _447_ (
    .A(_183_),
    .B(_011_),
    .Y(_184_)
  );
  NOR _448_ (
    .A(_184_),
    .B(_181_),
    .Y(_000_[4])
  );
  NOR _449_ (
    .A(_184_),
    .B(contador[5]),
    .Y(_185_)
  );
  NAND _450_ (
    .A(_184_),
    .B(contador[5]),
    .Y(_186_)
  );
  NAND _451_ (
    .A(_186_),
    .B(_017_),
    .Y(_187_)
  );
  NOR _452_ (
    .A(_187_),
    .B(_185_),
    .Y(_000_[5])
  );
  NAND _453_ (
    .A(_186_),
    .B(contador[6]),
    .Y(_188_)
  );
  NOT _454_ (
    .A(contador[5]),
    .Y(_189_)
  );
  NAND _455_ (
    .A(_180_),
    .B(contador[4]),
    .Y(_190_)
  );
  NOR _456_ (
    .A(_190_),
    .B(_189_),
    .Y(_191_)
  );
  NAND _457_ (
    .A(_191_),
    .B(_012_),
    .Y(_192_)
  );
  NAND _458_ (
    .A(_192_),
    .B(_188_),
    .Y(_000_[6])
  );
  NOT _459_ (
    .A(contador[7]),
    .Y(_193_)
  );
  NOR _460_ (
    .A(_179_),
    .B(_175_),
    .Y(_194_)
  );
  NAND _461_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_195_)
  );
  NAND _462_ (
    .A(contador[5]),
    .B(enable_stp),
    .Y(_196_)
  );
  NOR _463_ (
    .A(_196_),
    .B(_195_),
    .Y(_197_)
  );
  NAND _464_ (
    .A(_197_),
    .B(_194_),
    .Y(_198_)
  );
  NOR _465_ (
    .A(_198_),
    .B(_193_),
    .Y(_199_)
  );
  NOT _466_ (
    .A(_198_),
    .Y(_200_)
  );
  NOR _467_ (
    .A(_200_),
    .B(contador[7]),
    .Y(_201_)
  );
  NOR _468_ (
    .A(_201_),
    .B(_199_),
    .Y(_000_[7])
  );
  NOR _469_ (
    .A(_199_),
    .B(contador[8]),
    .Y(_202_)
  );
  NOT _470_ (
    .A(contador[8]),
    .Y(_203_)
  );
  NOT _471_ (
    .A(_199_),
    .Y(_204_)
  );
  NOR _472_ (
    .A(_204_),
    .B(_203_),
    .Y(_205_)
  );
  NOR _473_ (
    .A(_205_),
    .B(_202_),
    .Y(_000_[8])
  );
  BUF _474_ (
    .A(_237_),
    .Y(_020_)
  );
  BUF _475_ (
    .A(_237_),
    .Y(_022_)
  );
  BUF _476_ (
    .A(_237_),
    .Y(_206_)
  );
  BUF _477_ (
    .A(_237_),
    .Y(_025_)
  );
  BUF _478_ (
    .A(_237_),
    .Y(_027_)
  );
  BUF _479_ (
    .A(_237_),
    .Y(_029_)
  );
  BUF _480_ (
    .A(_237_),
    .Y(_031_)
  );
  BUF _481_ (
    .A(_237_),
    .Y(_207_)
  );
  BUF _482_ (
    .A(_237_),
    .Y(_208_)
  );
  BUF _483_ (
    .A(_237_),
    .Y(_209_)
  );
  BUF _484_ (
    .A(_237_),
    .Y(_036_)
  );
  BUF _485_ (
    .A(_237_),
    .Y(_037_)
  );
  BUF _486_ (
    .A(_237_),
    .Y(_039_)
  );
  BUF _487_ (
    .A(_237_),
    .Y(_041_)
  );
  BUF _488_ (
    .A(_237_),
    .Y(_210_)
  );
  BUF _489_ (
    .A(_237_),
    .Y(_211_)
  );
  BUF _490_ (
    .A(_237_),
    .Y(_212_)
  );
  BUF _491_ (
    .A(_237_),
    .Y(_213_)
  );
  BUF _492_ (
    .A(_237_),
    .Y(_214_)
  );
  BUF _493_ (
    .A(_237_),
    .Y(_215_)
  );
  BUF _494_ (
    .A(_237_),
    .Y(_216_)
  );
  BUF _495_ (
    .A(_237_),
    .Y(_217_)
  );
  BUF _496_ (
    .A(_237_),
    .Y(_218_)
  );
  BUF _497_ (
    .A(_237_),
    .Y(_219_)
  );
  BUF _498_ (
    .A(_237_),
    .Y(_220_)
  );
  BUF _499_ (
    .A(_237_),
    .Y(_221_)
  );
  BUF _500_ (
    .A(_237_),
    .Y(_222_)
  );
  BUF _501_ (
    .A(_237_),
    .Y(_223_)
  );
  BUF _502_ (
    .A(_237_),
    .Y(_224_)
  );
  BUF _503_ (
    .A(_237_),
    .Y(_225_)
  );
  BUF _504_ (
    .A(_237_),
    .Y(_226_)
  );
  BUF _505_ (
    .A(_237_),
    .Y(_227_)
  );
  BUF _506_ (
    .A(_237_),
    .Y(_228_)
  );
  BUF _507_ (
    .A(_237_),
    .Y(_229_)
  );
  BUF _508_ (
    .A(_237_),
    .Y(_230_)
  );
  BUF _509_ (
    .A(_237_),
    .Y(_231_)
  );
  BUF _510_ (
    .A(_237_),
    .Y(_232_)
  );
  BUF _511_ (
    .A(_237_),
    .Y(_233_)
  );
  BUF _512_ (
    .A(_237_),
    .Y(_234_)
  );
  BUF _513_ (
    .A(_237_),
    .Y(_235_)
  );
  BUF _514_ (
    .A(_237_),
    .Y(_236_)
  );
  DFFSR _515_ (
    .C(SD_CLK),
    .D(_002_),
    .Q(reception_complete),
    .R(_020_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(SD_CLK),
    .D(_001_[0]),
    .Q(parallel_out[0]),
    .R(_022_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(SD_CLK),
    .D(_001_[1]),
    .Q(parallel_out[1]),
    .R(_206_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(SD_CLK),
    .D(_001_[2]),
    .Q(parallel_out[2]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(SD_CLK),
    .D(_001_[3]),
    .Q(parallel_out[3]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(SD_CLK),
    .D(_001_[4]),
    .Q(parallel_out[4]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(SD_CLK),
    .D(_001_[5]),
    .Q(parallel_out[5]),
    .R(_031_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(SD_CLK),
    .D(_001_[6]),
    .Q(parallel_out[6]),
    .R(_207_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(SD_CLK),
    .D(_001_[7]),
    .Q(parallel_out[7]),
    .R(_208_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(SD_CLK),
    .D(_001_[8]),
    .Q(parallel_out[8]),
    .R(_209_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(SD_CLK),
    .D(_001_[9]),
    .Q(parallel_out[9]),
    .R(_036_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(SD_CLK),
    .D(_001_[10]),
    .Q(parallel_out[10]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(SD_CLK),
    .D(_001_[11]),
    .Q(parallel_out[11]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(SD_CLK),
    .D(_001_[12]),
    .Q(parallel_out[12]),
    .R(_041_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(SD_CLK),
    .D(_001_[13]),
    .Q(parallel_out[13]),
    .R(_210_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(SD_CLK),
    .D(_001_[14]),
    .Q(parallel_out[14]),
    .R(_211_),
    .S(1'b0)
  );
  DFFSR _531_ (
    .C(SD_CLK),
    .D(_001_[15]),
    .Q(parallel_out[15]),
    .R(_212_),
    .S(1'b0)
  );
  DFFSR _532_ (
    .C(SD_CLK),
    .D(_001_[16]),
    .Q(parallel_out[16]),
    .R(_213_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(SD_CLK),
    .D(_001_[17]),
    .Q(parallel_out[17]),
    .R(_214_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(SD_CLK),
    .D(_001_[18]),
    .Q(parallel_out[18]),
    .R(_215_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(SD_CLK),
    .D(_001_[19]),
    .Q(parallel_out[19]),
    .R(_216_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(SD_CLK),
    .D(_001_[20]),
    .Q(parallel_out[20]),
    .R(_217_),
    .S(1'b0)
  );
  DFFSR _537_ (
    .C(SD_CLK),
    .D(_001_[21]),
    .Q(parallel_out[21]),
    .R(_218_),
    .S(1'b0)
  );
  DFFSR _538_ (
    .C(SD_CLK),
    .D(_001_[22]),
    .Q(parallel_out[22]),
    .R(_219_),
    .S(1'b0)
  );
  DFFSR _539_ (
    .C(SD_CLK),
    .D(_001_[23]),
    .Q(parallel_out[23]),
    .R(_220_),
    .S(1'b0)
  );
  DFFSR _540_ (
    .C(SD_CLK),
    .D(_001_[24]),
    .Q(parallel_out[24]),
    .R(_221_),
    .S(1'b0)
  );
  DFFSR _541_ (
    .C(SD_CLK),
    .D(_001_[25]),
    .Q(parallel_out[25]),
    .R(_222_),
    .S(1'b0)
  );
  DFFSR _542_ (
    .C(SD_CLK),
    .D(_001_[26]),
    .Q(parallel_out[26]),
    .R(_223_),
    .S(1'b0)
  );
  DFFSR _543_ (
    .C(SD_CLK),
    .D(_001_[27]),
    .Q(parallel_out[27]),
    .R(_224_),
    .S(1'b0)
  );
  DFFSR _544_ (
    .C(SD_CLK),
    .D(_001_[28]),
    .Q(parallel_out[28]),
    .R(_225_),
    .S(1'b0)
  );
  DFFSR _545_ (
    .C(SD_CLK),
    .D(_001_[29]),
    .Q(parallel_out[29]),
    .R(_226_),
    .S(1'b0)
  );
  DFFSR _546_ (
    .C(SD_CLK),
    .D(_001_[30]),
    .Q(parallel_out[30]),
    .R(_227_),
    .S(1'b0)
  );
  DFFSR _547_ (
    .C(SD_CLK),
    .D(_001_[31]),
    .Q(parallel_out[31]),
    .R(_228_),
    .S(1'b0)
  );
  DFFSR _548_ (
    .C(SD_CLK),
    .D(_000_[0]),
    .Q(contador[0]),
    .R(_229_),
    .S(1'b0)
  );
  DFFSR _549_ (
    .C(SD_CLK),
    .D(_000_[1]),
    .Q(contador[1]),
    .R(_230_),
    .S(1'b0)
  );
  DFFSR _550_ (
    .C(SD_CLK),
    .D(_000_[2]),
    .Q(contador[2]),
    .R(_231_),
    .S(1'b0)
  );
  DFFSR _551_ (
    .C(SD_CLK),
    .D(_000_[3]),
    .Q(contador[3]),
    .R(_232_),
    .S(1'b0)
  );
  DFFSR _552_ (
    .C(SD_CLK),
    .D(_000_[4]),
    .Q(contador[4]),
    .R(_233_),
    .S(1'b0)
  );
  DFFSR _553_ (
    .C(SD_CLK),
    .D(_000_[5]),
    .Q(contador[5]),
    .R(_234_),
    .S(1'b0)
  );
  DFFSR _554_ (
    .C(SD_CLK),
    .D(_000_[6]),
    .Q(contador[6]),
    .R(_235_),
    .S(1'b0)
  );
  DFFSR _555_ (
    .C(SD_CLK),
    .D(_000_[7]),
    .Q(contador[7]),
    .R(_236_),
    .S(1'b0)
  );
  DFFSR _556_ (
    .C(SD_CLK),
    .D(_000_[8]),
    .Q(contador[8]),
    .R(_237_),
    .S(1'b0)
  );
endmodule

module cmd_control(clk_host, reset_host, new_command, cmd_argument, cmd_index, ack_in, strobe_in, cmd_in, response, cmd_complete, cmd_index_error, strobe_out, ack_out, idle_out, cmd_out);
  wire _0000_;
  wire _0001_;
  wire [39:0] _0002_;
  wire _0003_;
  wire [127:0] _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire [39:0] _0008_;
  wire [1:0] _0009_;
  wire _0010_;
  wire [127:0] _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire [1:0] _0015_;
  wire _0016_;
  wire [127:0] _0017_;
  wire _0018_;
  wire [1:0] _0019_;
  wire [1:0] _0020_;
  wire [1:0] _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire [1:0] _0601_;
  wire [1:0] _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire [39:0] _0609_;
  wire [5:0] _0610_;
  wire [1:0] _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  input ack_in;
  output ack_out;
  input clk_host;
  input [31:0] cmd_argument;
  output cmd_complete;
  input [135:0] cmd_in;
  input [5:0] cmd_index;
  output cmd_index_error;
  output [39:0] cmd_out;
  wire [1:0] estado;
  output idle_out;
  input new_command;
  input reset_host;
  output [127:0] response;
  input strobe_in;
  output strobe_out;
  NOT _0615_ (
    .A(_0033_),
    .Y(_0036_)
  );
  NOT _0616_ (
    .A(_0550_),
    .Y(_0037_)
  );
  NOR _0617_ (
    .A(_0037_),
    .B(_0036_),
    .Y(_0038_)
  );
  NAND _0618_ (
    .A(_0037_),
    .B(_0549_),
    .Y(_0039_)
  );
  NOR _0619_ (
    .A(_0143_),
    .B(_0033_),
    .Y(_0040_)
  );
  NOR _0620_ (
    .A(_0040_),
    .B(_0039_),
    .Y(_0041_)
  );
  NOR _0621_ (
    .A(_0041_),
    .B(_0038_),
    .Y(_0022_)
  );
  NOT _0622_ (
    .A(_0549_),
    .Y(_0042_)
  );
  NOR _0623_ (
    .A(_0037_),
    .B(_0042_),
    .Y(_0043_)
  );
  NOT _0624_ (
    .A(_0064_),
    .Y(_0044_)
  );
  NOT _0625_ (
    .A(_0261_),
    .Y(_0046_)
  );
  NOR _0626_ (
    .A(_0046_),
    .B(_0044_),
    .Y(_0047_)
  );
  NOR _0627_ (
    .A(_0047_),
    .B(_0033_),
    .Y(_0048_)
  );
  NAND _0628_ (
    .A(_0048_),
    .B(_0043_),
    .Y(_0049_)
  );
  NAND _0629_ (
    .A(_0143_),
    .B(_0036_),
    .Y(_0050_)
  );
  NOR _0630_ (
    .A(_0050_),
    .B(_0039_),
    .Y(_0051_)
  );
  NAND _0631_ (
    .A(_0550_),
    .B(_0042_),
    .Y(_0052_)
  );
  NOR _0632_ (
    .A(_0052_),
    .B(_0033_),
    .Y(_0350_)
  );
  NOR _0633_ (
    .A(_0350_),
    .B(_0051_),
    .Y(_0053_)
  );
  NAND _0634_ (
    .A(_0053_),
    .B(_0049_),
    .Y(_0082_)
  );
  NOT _0635_ (
    .A(_0349_),
    .Y(_0054_)
  );
  NOR _0636_ (
    .A(_0037_),
    .B(_0549_),
    .Y(_0055_)
  );
  NAND _0637_ (
    .A(_0055_),
    .B(_0036_),
    .Y(_0056_)
  );
  NOR _0638_ (
    .A(_0056_),
    .B(_0054_),
    .Y(_0263_)
  );
  NOT _0639_ (
    .A(_0380_),
    .Y(_0057_)
  );
  NOR _0640_ (
    .A(_0056_),
    .B(_0057_),
    .Y(_0266_)
  );
  NOT _0641_ (
    .A(_0411_),
    .Y(_0058_)
  );
  NOR _0642_ (
    .A(_0056_),
    .B(_0058_),
    .Y(_0268_)
  );
  NOT _0643_ (
    .A(_0442_),
    .Y(_0059_)
  );
  NOR _0644_ (
    .A(_0056_),
    .B(_0059_),
    .Y(_0270_)
  );
  NOT _0645_ (
    .A(_0473_),
    .Y(_0060_)
  );
  NOR _0646_ (
    .A(_0056_),
    .B(_0060_),
    .Y(_0272_)
  );
  NOT _0647_ (
    .A(_0504_),
    .Y(_0061_)
  );
  NOR _0648_ (
    .A(_0056_),
    .B(_0061_),
    .Y(_0274_)
  );
  NOT _0649_ (
    .A(_0533_),
    .Y(_0062_)
  );
  NOR _0650_ (
    .A(_0056_),
    .B(_0062_),
    .Y(_0276_)
  );
  NOT _0651_ (
    .A(_0548_),
    .Y(_0063_)
  );
  NOR _0652_ (
    .A(_0056_),
    .B(_0063_),
    .Y(_0278_)
  );
  NOT _0653_ (
    .A(_0551_),
    .Y(_0065_)
  );
  NOR _0654_ (
    .A(_0056_),
    .B(_0065_),
    .Y(_0280_)
  );
  NOT _0655_ (
    .A(_0552_),
    .Y(_0068_)
  );
  NOR _0656_ (
    .A(_0056_),
    .B(_0068_),
    .Y(_0282_)
  );
  NOT _0657_ (
    .A(_0553_),
    .Y(_0071_)
  );
  NOR _0658_ (
    .A(_0056_),
    .B(_0071_),
    .Y(_0284_)
  );
  NOT _0659_ (
    .A(_0554_),
    .Y(_0074_)
  );
  NOR _0660_ (
    .A(_0056_),
    .B(_0074_),
    .Y(_0287_)
  );
  NOT _0661_ (
    .A(_0555_),
    .Y(_0077_)
  );
  NOR _0662_ (
    .A(_0056_),
    .B(_0077_),
    .Y(_0289_)
  );
  NOT _0663_ (
    .A(_0556_),
    .Y(_0080_)
  );
  NOR _0664_ (
    .A(_0056_),
    .B(_0080_),
    .Y(_0291_)
  );
  NOT _0665_ (
    .A(_0557_),
    .Y(_0084_)
  );
  NOR _0666_ (
    .A(_0056_),
    .B(_0084_),
    .Y(_0293_)
  );
  NOT _0667_ (
    .A(_0558_),
    .Y(_0087_)
  );
  NOR _0668_ (
    .A(_0056_),
    .B(_0087_),
    .Y(_0295_)
  );
  NOT _0669_ (
    .A(_0559_),
    .Y(_0090_)
  );
  NOR _0670_ (
    .A(_0056_),
    .B(_0090_),
    .Y(_0297_)
  );
  NOT _0671_ (
    .A(_0560_),
    .Y(_0093_)
  );
  NOR _0672_ (
    .A(_0056_),
    .B(_0093_),
    .Y(_0299_)
  );
  NOT _0673_ (
    .A(_0561_),
    .Y(_0096_)
  );
  NOR _0674_ (
    .A(_0056_),
    .B(_0096_),
    .Y(_0301_)
  );
  NOT _0675_ (
    .A(_0562_),
    .Y(_0099_)
  );
  NOR _0676_ (
    .A(_0056_),
    .B(_0099_),
    .Y(_0303_)
  );
  NOT _0677_ (
    .A(_0023_),
    .Y(_0102_)
  );
  NOR _0678_ (
    .A(_0056_),
    .B(_0102_),
    .Y(_0305_)
  );
  NOT _0679_ (
    .A(_0024_),
    .Y(_0105_)
  );
  NOR _0680_ (
    .A(_0056_),
    .B(_0105_),
    .Y(_0308_)
  );
  NOT _0681_ (
    .A(_0025_),
    .Y(_0108_)
  );
  NOR _0682_ (
    .A(_0056_),
    .B(_0108_),
    .Y(_0310_)
  );
  NOT _0683_ (
    .A(_0026_),
    .Y(_0111_)
  );
  NOR _0684_ (
    .A(_0056_),
    .B(_0111_),
    .Y(_0312_)
  );
  NOT _0685_ (
    .A(_0027_),
    .Y(_0114_)
  );
  NOR _0686_ (
    .A(_0056_),
    .B(_0114_),
    .Y(_0314_)
  );
  NOT _0687_ (
    .A(_0028_),
    .Y(_0117_)
  );
  NOR _0688_ (
    .A(_0056_),
    .B(_0117_),
    .Y(_0316_)
  );
  NOT _0689_ (
    .A(_0029_),
    .Y(_0120_)
  );
  NOR _0690_ (
    .A(_0056_),
    .B(_0120_),
    .Y(_0318_)
  );
  NOT _0691_ (
    .A(_0030_),
    .Y(_0123_)
  );
  NOR _0692_ (
    .A(_0056_),
    .B(_0123_),
    .Y(_0320_)
  );
  NOT _0693_ (
    .A(_0031_),
    .Y(_0126_)
  );
  NOR _0694_ (
    .A(_0056_),
    .B(_0126_),
    .Y(_0322_)
  );
  NOT _0695_ (
    .A(_0032_),
    .Y(_0129_)
  );
  NOR _0696_ (
    .A(_0056_),
    .B(_0129_),
    .Y(_0324_)
  );
  NOT _0697_ (
    .A(_0034_),
    .Y(_0132_)
  );
  NOR _0698_ (
    .A(_0056_),
    .B(_0132_),
    .Y(_0326_)
  );
  NOT _0699_ (
    .A(_0035_),
    .Y(_0135_)
  );
  NOR _0700_ (
    .A(_0056_),
    .B(_0135_),
    .Y(_0329_)
  );
  NOT _0701_ (
    .A(_0205_),
    .Y(_0138_)
  );
  NOR _0702_ (
    .A(_0056_),
    .B(_0138_),
    .Y(_0331_)
  );
  NOT _0703_ (
    .A(_0236_),
    .Y(_0141_)
  );
  NOR _0704_ (
    .A(_0056_),
    .B(_0141_),
    .Y(_0333_)
  );
  NOT _0705_ (
    .A(_0265_),
    .Y(_0145_)
  );
  NOR _0706_ (
    .A(_0056_),
    .B(_0145_),
    .Y(_0335_)
  );
  NOT _0707_ (
    .A(_0286_),
    .Y(_0148_)
  );
  NOR _0708_ (
    .A(_0056_),
    .B(_0148_),
    .Y(_0337_)
  );
  NOT _0709_ (
    .A(_0307_),
    .Y(_0151_)
  );
  NOR _0710_ (
    .A(_0056_),
    .B(_0151_),
    .Y(_0339_)
  );
  NOT _0711_ (
    .A(_0328_),
    .Y(_0154_)
  );
  NOR _0712_ (
    .A(_0056_),
    .B(_0154_),
    .Y(_0341_)
  );
  NOT _0713_ (
    .A(_0040_),
    .Y(_0158_)
  );
  NOR _0714_ (
    .A(_0158_),
    .B(_0039_),
    .Y(_0345_)
  );
  NOR _0715_ (
    .A(_0044_),
    .B(_0033_),
    .Y(_0161_)
  );
  NAND _0716_ (
    .A(_0161_),
    .B(_0043_),
    .Y(_0163_)
  );
  NOT _0717_ (
    .A(_0163_),
    .Y(_0347_)
  );
  NOT _0718_ (
    .A(_0544_),
    .Y(_0166_)
  );
  NOR _0719_ (
    .A(_0166_),
    .B(_0045_),
    .Y(_0168_)
  );
  NOR _0720_ (
    .A(_0168_),
    .B(_0163_),
    .Y(_0351_)
  );
  NOT _0721_ (
    .A(_0066_),
    .Y(_0171_)
  );
  NOR _0722_ (
    .A(_0163_),
    .B(_0171_),
    .Y(_0353_)
  );
  NOT _0723_ (
    .A(_0067_),
    .Y(_0174_)
  );
  NOR _0724_ (
    .A(_0163_),
    .B(_0174_),
    .Y(_0354_)
  );
  NOT _0725_ (
    .A(_0069_),
    .Y(_0177_)
  );
  NOR _0726_ (
    .A(_0163_),
    .B(_0177_),
    .Y(_0356_)
  );
  NOT _0727_ (
    .A(_0070_),
    .Y(_0180_)
  );
  NOR _0728_ (
    .A(_0163_),
    .B(_0180_),
    .Y(_0357_)
  );
  NOT _0729_ (
    .A(_0072_),
    .Y(_0183_)
  );
  NOR _0730_ (
    .A(_0163_),
    .B(_0183_),
    .Y(_0359_)
  );
  NOT _0731_ (
    .A(_0073_),
    .Y(_0186_)
  );
  NOR _0732_ (
    .A(_0163_),
    .B(_0186_),
    .Y(_0360_)
  );
  NOT _0733_ (
    .A(_0075_),
    .Y(_0189_)
  );
  NOR _0734_ (
    .A(_0163_),
    .B(_0189_),
    .Y(_0362_)
  );
  NOT _0735_ (
    .A(_0076_),
    .Y(_0192_)
  );
  NOR _0736_ (
    .A(_0163_),
    .B(_0192_),
    .Y(_0363_)
  );
  NOT _0737_ (
    .A(_0078_),
    .Y(_0195_)
  );
  NOR _0738_ (
    .A(_0163_),
    .B(_0195_),
    .Y(_0365_)
  );
  NOT _0739_ (
    .A(_0079_),
    .Y(_0198_)
  );
  NOR _0740_ (
    .A(_0163_),
    .B(_0198_),
    .Y(_0366_)
  );
  NOT _0741_ (
    .A(_0081_),
    .Y(_0201_)
  );
  NOR _0742_ (
    .A(_0163_),
    .B(_0201_),
    .Y(_0368_)
  );
  NOT _0743_ (
    .A(_0083_),
    .Y(_0204_)
  );
  NOR _0744_ (
    .A(_0163_),
    .B(_0204_),
    .Y(_0369_)
  );
  NOT _0745_ (
    .A(_0085_),
    .Y(_0208_)
  );
  NOR _0746_ (
    .A(_0163_),
    .B(_0208_),
    .Y(_0371_)
  );
  NOT _0747_ (
    .A(_0086_),
    .Y(_0211_)
  );
  NOR _0748_ (
    .A(_0163_),
    .B(_0211_),
    .Y(_0372_)
  );
  NOT _0749_ (
    .A(_0088_),
    .Y(_0214_)
  );
  NOR _0750_ (
    .A(_0163_),
    .B(_0214_),
    .Y(_0374_)
  );
  NOT _0751_ (
    .A(_0089_),
    .Y(_0217_)
  );
  NOR _0752_ (
    .A(_0163_),
    .B(_0217_),
    .Y(_0375_)
  );
  NOT _0753_ (
    .A(_0091_),
    .Y(_0220_)
  );
  NOR _0754_ (
    .A(_0163_),
    .B(_0220_),
    .Y(_0377_)
  );
  NOT _0755_ (
    .A(_0092_),
    .Y(_0223_)
  );
  NOR _0756_ (
    .A(_0163_),
    .B(_0223_),
    .Y(_0378_)
  );
  NOT _0757_ (
    .A(_0094_),
    .Y(_0226_)
  );
  NOR _0758_ (
    .A(_0163_),
    .B(_0226_),
    .Y(_0381_)
  );
  NOT _0759_ (
    .A(_0095_),
    .Y(_0229_)
  );
  NOR _0760_ (
    .A(_0163_),
    .B(_0229_),
    .Y(_0382_)
  );
  NOT _0761_ (
    .A(_0097_),
    .Y(_0232_)
  );
  NOR _0762_ (
    .A(_0163_),
    .B(_0232_),
    .Y(_0384_)
  );
  NOT _0763_ (
    .A(_0098_),
    .Y(_0235_)
  );
  NOR _0764_ (
    .A(_0163_),
    .B(_0235_),
    .Y(_0385_)
  );
  NOT _0765_ (
    .A(_0100_),
    .Y(_0239_)
  );
  NOR _0766_ (
    .A(_0163_),
    .B(_0239_),
    .Y(_0387_)
  );
  NOT _0767_ (
    .A(_0101_),
    .Y(_0242_)
  );
  NOR _0768_ (
    .A(_0163_),
    .B(_0242_),
    .Y(_0388_)
  );
  NOT _0769_ (
    .A(_0103_),
    .Y(_0245_)
  );
  NOR _0770_ (
    .A(_0163_),
    .B(_0245_),
    .Y(_0390_)
  );
  NOT _0771_ (
    .A(_0104_),
    .Y(_0248_)
  );
  NOR _0772_ (
    .A(_0163_),
    .B(_0248_),
    .Y(_0391_)
  );
  NOT _0773_ (
    .A(_0106_),
    .Y(_0251_)
  );
  NOR _0774_ (
    .A(_0163_),
    .B(_0251_),
    .Y(_0393_)
  );
  NOT _0775_ (
    .A(_0107_),
    .Y(_0254_)
  );
  NOR _0776_ (
    .A(_0163_),
    .B(_0254_),
    .Y(_0394_)
  );
  NOT _0777_ (
    .A(_0109_),
    .Y(_0257_)
  );
  NOR _0778_ (
    .A(_0163_),
    .B(_0257_),
    .Y(_0396_)
  );
  NOT _0779_ (
    .A(_0110_),
    .Y(_0260_)
  );
  NOR _0780_ (
    .A(_0163_),
    .B(_0260_),
    .Y(_0397_)
  );
  NOT _0781_ (
    .A(_0112_),
    .Y(_0262_)
  );
  NOR _0782_ (
    .A(_0163_),
    .B(_0262_),
    .Y(_0399_)
  );
  NOT _0783_ (
    .A(_0113_),
    .Y(_0264_)
  );
  NOR _0784_ (
    .A(_0163_),
    .B(_0264_),
    .Y(_0400_)
  );
  NOT _0785_ (
    .A(_0115_),
    .Y(_0267_)
  );
  NOR _0786_ (
    .A(_0163_),
    .B(_0267_),
    .Y(_0402_)
  );
  NOT _0787_ (
    .A(_0116_),
    .Y(_0269_)
  );
  NOR _0788_ (
    .A(_0163_),
    .B(_0269_),
    .Y(_0403_)
  );
  NOT _0789_ (
    .A(_0118_),
    .Y(_0271_)
  );
  NOR _0790_ (
    .A(_0163_),
    .B(_0271_),
    .Y(_0405_)
  );
  NOT _0791_ (
    .A(_0119_),
    .Y(_0273_)
  );
  NOR _0792_ (
    .A(_0163_),
    .B(_0273_),
    .Y(_0406_)
  );
  NOT _0793_ (
    .A(_0121_),
    .Y(_0275_)
  );
  NOR _0794_ (
    .A(_0163_),
    .B(_0275_),
    .Y(_0408_)
  );
  NOT _0795_ (
    .A(_0122_),
    .Y(_0277_)
  );
  NOR _0796_ (
    .A(_0163_),
    .B(_0277_),
    .Y(_0409_)
  );
  NOT _0797_ (
    .A(_0124_),
    .Y(_0279_)
  );
  NOR _0798_ (
    .A(_0163_),
    .B(_0279_),
    .Y(_0412_)
  );
  NOT _0799_ (
    .A(_0125_),
    .Y(_0281_)
  );
  NOR _0800_ (
    .A(_0163_),
    .B(_0281_),
    .Y(_0413_)
  );
  NOT _0801_ (
    .A(_0127_),
    .Y(_0283_)
  );
  NOR _0802_ (
    .A(_0163_),
    .B(_0283_),
    .Y(_0415_)
  );
  NOT _0803_ (
    .A(_0128_),
    .Y(_0285_)
  );
  NOR _0804_ (
    .A(_0163_),
    .B(_0285_),
    .Y(_0416_)
  );
  NOT _0805_ (
    .A(_0130_),
    .Y(_0288_)
  );
  NOR _0806_ (
    .A(_0163_),
    .B(_0288_),
    .Y(_0418_)
  );
  NOT _0807_ (
    .A(_0131_),
    .Y(_0290_)
  );
  NOR _0808_ (
    .A(_0163_),
    .B(_0290_),
    .Y(_0419_)
  );
  NOT _0809_ (
    .A(_0133_),
    .Y(_0292_)
  );
  NOR _0810_ (
    .A(_0163_),
    .B(_0292_),
    .Y(_0421_)
  );
  NOT _0811_ (
    .A(_0134_),
    .Y(_0294_)
  );
  NOR _0812_ (
    .A(_0163_),
    .B(_0294_),
    .Y(_0422_)
  );
  NOT _0813_ (
    .A(_0136_),
    .Y(_0296_)
  );
  NOR _0814_ (
    .A(_0163_),
    .B(_0296_),
    .Y(_0424_)
  );
  NOT _0815_ (
    .A(_0137_),
    .Y(_0298_)
  );
  NOR _0816_ (
    .A(_0163_),
    .B(_0298_),
    .Y(_0425_)
  );
  NOT _0817_ (
    .A(_0139_),
    .Y(_0300_)
  );
  NOR _0818_ (
    .A(_0163_),
    .B(_0300_),
    .Y(_0427_)
  );
  NOT _0819_ (
    .A(_0140_),
    .Y(_0302_)
  );
  NOR _0820_ (
    .A(_0163_),
    .B(_0302_),
    .Y(_0428_)
  );
  NOT _0821_ (
    .A(_0142_),
    .Y(_0304_)
  );
  NOR _0822_ (
    .A(_0163_),
    .B(_0304_),
    .Y(_0430_)
  );
  NOT _0823_ (
    .A(_0144_),
    .Y(_0306_)
  );
  NOR _0824_ (
    .A(_0163_),
    .B(_0306_),
    .Y(_0431_)
  );
  NOT _0825_ (
    .A(_0146_),
    .Y(_0309_)
  );
  NOR _0826_ (
    .A(_0163_),
    .B(_0309_),
    .Y(_0433_)
  );
  NOT _0827_ (
    .A(_0147_),
    .Y(_0311_)
  );
  NOR _0828_ (
    .A(_0163_),
    .B(_0311_),
    .Y(_0434_)
  );
  NOT _0829_ (
    .A(_0149_),
    .Y(_0313_)
  );
  NOR _0830_ (
    .A(_0163_),
    .B(_0313_),
    .Y(_0436_)
  );
  NOT _0831_ (
    .A(_0150_),
    .Y(_0315_)
  );
  NOR _0832_ (
    .A(_0163_),
    .B(_0315_),
    .Y(_0437_)
  );
  NOT _0833_ (
    .A(_0152_),
    .Y(_0317_)
  );
  NOR _0834_ (
    .A(_0163_),
    .B(_0317_),
    .Y(_0439_)
  );
  NOT _0835_ (
    .A(_0153_),
    .Y(_0319_)
  );
  NOR _0836_ (
    .A(_0163_),
    .B(_0319_),
    .Y(_0440_)
  );
  NOT _0837_ (
    .A(_0155_),
    .Y(_0321_)
  );
  NOR _0838_ (
    .A(_0163_),
    .B(_0321_),
    .Y(_0443_)
  );
  NOT _0839_ (
    .A(_0156_),
    .Y(_0323_)
  );
  NOR _0840_ (
    .A(_0163_),
    .B(_0323_),
    .Y(_0444_)
  );
  NOT _0841_ (
    .A(_0157_),
    .Y(_0325_)
  );
  NOR _0842_ (
    .A(_0163_),
    .B(_0325_),
    .Y(_0446_)
  );
  NOT _0843_ (
    .A(_0159_),
    .Y(_0327_)
  );
  NOR _0844_ (
    .A(_0163_),
    .B(_0327_),
    .Y(_0447_)
  );
  NOT _0845_ (
    .A(_0160_),
    .Y(_0330_)
  );
  NOR _0846_ (
    .A(_0163_),
    .B(_0330_),
    .Y(_0449_)
  );
  NOT _0847_ (
    .A(_0162_),
    .Y(_0332_)
  );
  NOR _0848_ (
    .A(_0163_),
    .B(_0332_),
    .Y(_0450_)
  );
  NOT _0849_ (
    .A(_0164_),
    .Y(_0334_)
  );
  NOR _0850_ (
    .A(_0163_),
    .B(_0334_),
    .Y(_0452_)
  );
  NOT _0851_ (
    .A(_0165_),
    .Y(_0336_)
  );
  NOR _0852_ (
    .A(_0163_),
    .B(_0336_),
    .Y(_0453_)
  );
  NOT _0853_ (
    .A(_0167_),
    .Y(_0338_)
  );
  NOR _0854_ (
    .A(_0163_),
    .B(_0338_),
    .Y(_0455_)
  );
  NOT _0855_ (
    .A(_0169_),
    .Y(_0340_)
  );
  NOR _0856_ (
    .A(_0163_),
    .B(_0340_),
    .Y(_0456_)
  );
  NOT _0857_ (
    .A(_0170_),
    .Y(_0342_)
  );
  NOR _0858_ (
    .A(_0163_),
    .B(_0342_),
    .Y(_0458_)
  );
  NOT _0859_ (
    .A(_0172_),
    .Y(_0344_)
  );
  NOR _0860_ (
    .A(_0163_),
    .B(_0344_),
    .Y(_0459_)
  );
  NOT _0861_ (
    .A(_0173_),
    .Y(_0346_)
  );
  NOR _0862_ (
    .A(_0163_),
    .B(_0346_),
    .Y(_0461_)
  );
  NOT _0863_ (
    .A(_0175_),
    .Y(_0348_)
  );
  NOR _0864_ (
    .A(_0163_),
    .B(_0348_),
    .Y(_0462_)
  );
  NOT _0865_ (
    .A(_0176_),
    .Y(_0352_)
  );
  NOR _0866_ (
    .A(_0163_),
    .B(_0352_),
    .Y(_0464_)
  );
  NOT _0867_ (
    .A(_0178_),
    .Y(_0355_)
  );
  NOR _0868_ (
    .A(_0163_),
    .B(_0355_),
    .Y(_0465_)
  );
  NOT _0869_ (
    .A(_0179_),
    .Y(_0358_)
  );
  NOR _0870_ (
    .A(_0163_),
    .B(_0358_),
    .Y(_0467_)
  );
  NOT _0871_ (
    .A(_0181_),
    .Y(_0361_)
  );
  NOR _0872_ (
    .A(_0163_),
    .B(_0361_),
    .Y(_0468_)
  );
  NOT _0873_ (
    .A(_0182_),
    .Y(_0364_)
  );
  NOR _0874_ (
    .A(_0163_),
    .B(_0364_),
    .Y(_0470_)
  );
  NOT _0875_ (
    .A(_0184_),
    .Y(_0367_)
  );
  NOR _0876_ (
    .A(_0163_),
    .B(_0367_),
    .Y(_0471_)
  );
  NOT _0877_ (
    .A(_0185_),
    .Y(_0370_)
  );
  NOR _0878_ (
    .A(_0163_),
    .B(_0370_),
    .Y(_0474_)
  );
  NOT _0879_ (
    .A(_0187_),
    .Y(_0373_)
  );
  NOR _0880_ (
    .A(_0163_),
    .B(_0373_),
    .Y(_0475_)
  );
  NOT _0881_ (
    .A(_0188_),
    .Y(_0376_)
  );
  NOR _0882_ (
    .A(_0163_),
    .B(_0376_),
    .Y(_0477_)
  );
  NOT _0883_ (
    .A(_0190_),
    .Y(_0379_)
  );
  NOR _0884_ (
    .A(_0163_),
    .B(_0379_),
    .Y(_0478_)
  );
  NOT _0885_ (
    .A(_0191_),
    .Y(_0383_)
  );
  NOR _0886_ (
    .A(_0163_),
    .B(_0383_),
    .Y(_0480_)
  );
  NOT _0887_ (
    .A(_0193_),
    .Y(_0386_)
  );
  NOR _0888_ (
    .A(_0163_),
    .B(_0386_),
    .Y(_0481_)
  );
  NOT _0889_ (
    .A(_0194_),
    .Y(_0389_)
  );
  NOR _0890_ (
    .A(_0163_),
    .B(_0389_),
    .Y(_0483_)
  );
  NOT _0891_ (
    .A(_0196_),
    .Y(_0392_)
  );
  NOR _0892_ (
    .A(_0163_),
    .B(_0392_),
    .Y(_0484_)
  );
  NOT _0893_ (
    .A(_0197_),
    .Y(_0395_)
  );
  NOR _0894_ (
    .A(_0163_),
    .B(_0395_),
    .Y(_0486_)
  );
  NOT _0895_ (
    .A(_0199_),
    .Y(_0398_)
  );
  NOR _0896_ (
    .A(_0163_),
    .B(_0398_),
    .Y(_0487_)
  );
  NOT _0897_ (
    .A(_0200_),
    .Y(_0401_)
  );
  NOR _0898_ (
    .A(_0163_),
    .B(_0401_),
    .Y(_0489_)
  );
  NOT _0899_ (
    .A(_0202_),
    .Y(_0404_)
  );
  NOR _0900_ (
    .A(_0163_),
    .B(_0404_),
    .Y(_0490_)
  );
  NOT _0901_ (
    .A(_0203_),
    .Y(_0407_)
  );
  NOR _0902_ (
    .A(_0163_),
    .B(_0407_),
    .Y(_0492_)
  );
  NOT _0903_ (
    .A(_0206_),
    .Y(_0410_)
  );
  NOR _0904_ (
    .A(_0163_),
    .B(_0410_),
    .Y(_0493_)
  );
  NOT _0905_ (
    .A(_0207_),
    .Y(_0414_)
  );
  NOR _0906_ (
    .A(_0163_),
    .B(_0414_),
    .Y(_0495_)
  );
  NOT _0907_ (
    .A(_0209_),
    .Y(_0417_)
  );
  NOR _0908_ (
    .A(_0163_),
    .B(_0417_),
    .Y(_0496_)
  );
  NOT _0909_ (
    .A(_0210_),
    .Y(_0420_)
  );
  NOR _0910_ (
    .A(_0163_),
    .B(_0420_),
    .Y(_0498_)
  );
  NOT _0911_ (
    .A(_0212_),
    .Y(_0423_)
  );
  NOR _0912_ (
    .A(_0163_),
    .B(_0423_),
    .Y(_0499_)
  );
  NOT _0913_ (
    .A(_0213_),
    .Y(_0426_)
  );
  NOR _0914_ (
    .A(_0163_),
    .B(_0426_),
    .Y(_0501_)
  );
  NOT _0915_ (
    .A(_0215_),
    .Y(_0429_)
  );
  NOR _0916_ (
    .A(_0163_),
    .B(_0429_),
    .Y(_0502_)
  );
  NOT _0917_ (
    .A(_0216_),
    .Y(_0432_)
  );
  NOR _0918_ (
    .A(_0163_),
    .B(_0432_),
    .Y(_0505_)
  );
  NOT _0919_ (
    .A(_0218_),
    .Y(_0435_)
  );
  NOR _0920_ (
    .A(_0163_),
    .B(_0435_),
    .Y(_0506_)
  );
  NOT _0921_ (
    .A(_0219_),
    .Y(_0438_)
  );
  NOR _0922_ (
    .A(_0163_),
    .B(_0438_),
    .Y(_0508_)
  );
  NOT _0923_ (
    .A(_0221_),
    .Y(_0441_)
  );
  NOR _0924_ (
    .A(_0163_),
    .B(_0441_),
    .Y(_0509_)
  );
  NOT _0925_ (
    .A(_0222_),
    .Y(_0445_)
  );
  NOR _0926_ (
    .A(_0163_),
    .B(_0445_),
    .Y(_0511_)
  );
  NOT _0927_ (
    .A(_0224_),
    .Y(_0448_)
  );
  NOR _0928_ (
    .A(_0163_),
    .B(_0448_),
    .Y(_0512_)
  );
  NOT _0929_ (
    .A(_0225_),
    .Y(_0451_)
  );
  NOR _0930_ (
    .A(_0163_),
    .B(_0451_),
    .Y(_0514_)
  );
  NOT _0931_ (
    .A(_0227_),
    .Y(_0454_)
  );
  NOR _0932_ (
    .A(_0163_),
    .B(_0454_),
    .Y(_0515_)
  );
  NOT _0933_ (
    .A(_0228_),
    .Y(_0457_)
  );
  NOR _0934_ (
    .A(_0163_),
    .B(_0457_),
    .Y(_0517_)
  );
  NOT _0935_ (
    .A(_0230_),
    .Y(_0460_)
  );
  NOR _0936_ (
    .A(_0163_),
    .B(_0460_),
    .Y(_0518_)
  );
  NOT _0937_ (
    .A(_0231_),
    .Y(_0463_)
  );
  NOR _0938_ (
    .A(_0163_),
    .B(_0463_),
    .Y(_0520_)
  );
  NOT _0939_ (
    .A(_0233_),
    .Y(_0466_)
  );
  NOR _0940_ (
    .A(_0163_),
    .B(_0466_),
    .Y(_0521_)
  );
  NOT _0941_ (
    .A(_0234_),
    .Y(_0469_)
  );
  NOR _0942_ (
    .A(_0163_),
    .B(_0469_),
    .Y(_0523_)
  );
  NOT _0943_ (
    .A(_0237_),
    .Y(_0472_)
  );
  NOR _0944_ (
    .A(_0163_),
    .B(_0472_),
    .Y(_0524_)
  );
  NOT _0945_ (
    .A(_0238_),
    .Y(_0476_)
  );
  NOR _0946_ (
    .A(_0163_),
    .B(_0476_),
    .Y(_0525_)
  );
  NOT _0947_ (
    .A(_0240_),
    .Y(_0479_)
  );
  NOR _0948_ (
    .A(_0163_),
    .B(_0479_),
    .Y(_0526_)
  );
  NOT _0949_ (
    .A(_0241_),
    .Y(_0482_)
  );
  NOR _0950_ (
    .A(_0163_),
    .B(_0482_),
    .Y(_0528_)
  );
  NOT _0951_ (
    .A(_0243_),
    .Y(_0485_)
  );
  NOR _0952_ (
    .A(_0163_),
    .B(_0485_),
    .Y(_0530_)
  );
  NOT _0953_ (
    .A(_0244_),
    .Y(_0488_)
  );
  NOR _0954_ (
    .A(_0163_),
    .B(_0488_),
    .Y(_0531_)
  );
  NOT _0955_ (
    .A(_0246_),
    .Y(_0491_)
  );
  NOR _0956_ (
    .A(_0163_),
    .B(_0491_),
    .Y(_0532_)
  );
  NOT _0957_ (
    .A(_0247_),
    .Y(_0494_)
  );
  NOR _0958_ (
    .A(_0163_),
    .B(_0494_),
    .Y(_0534_)
  );
  NOT _0959_ (
    .A(_0249_),
    .Y(_0497_)
  );
  NOR _0960_ (
    .A(_0163_),
    .B(_0497_),
    .Y(_0535_)
  );
  NOT _0961_ (
    .A(_0250_),
    .Y(_0500_)
  );
  NOR _0962_ (
    .A(_0163_),
    .B(_0500_),
    .Y(_0536_)
  );
  NOT _0963_ (
    .A(_0252_),
    .Y(_0503_)
  );
  NOR _0964_ (
    .A(_0163_),
    .B(_0503_),
    .Y(_0537_)
  );
  NOT _0965_ (
    .A(_0253_),
    .Y(_0507_)
  );
  NOR _0966_ (
    .A(_0163_),
    .B(_0507_),
    .Y(_0538_)
  );
  NOT _0967_ (
    .A(_0255_),
    .Y(_0510_)
  );
  NOR _0968_ (
    .A(_0163_),
    .B(_0510_),
    .Y(_0539_)
  );
  NOT _0969_ (
    .A(_0256_),
    .Y(_0513_)
  );
  NOR _0970_ (
    .A(_0163_),
    .B(_0513_),
    .Y(_0540_)
  );
  NOT _0971_ (
    .A(_0258_),
    .Y(_0516_)
  );
  NOR _0972_ (
    .A(_0163_),
    .B(_0516_),
    .Y(_0541_)
  );
  NOT _0973_ (
    .A(_0045_),
    .Y(_0519_)
  );
  NOR _0974_ (
    .A(_0163_),
    .B(_0519_),
    .Y(_0542_)
  );
  NOT _0975_ (
    .A(_0259_),
    .Y(_0522_)
  );
  NOR _0976_ (
    .A(_0163_),
    .B(_0522_),
    .Y(_0543_)
  );
  NOR _0977_ (
    .A(_0041_),
    .B(_0550_),
    .Y(_0545_)
  );
  NOR _0978_ (
    .A(_0038_),
    .B(_0549_),
    .Y(_0546_)
  );
  NAND _0979_ (
    .A(_0052_),
    .B(_0039_),
    .Y(_0527_)
  );
  NOR _0980_ (
    .A(_0161_),
    .B(_0042_),
    .Y(_0529_)
  );
  NOR _0981_ (
    .A(_0529_),
    .B(_0527_),
    .Y(_0547_)
  );
  \$_DLATCH_P_  _0982_ (
    .D(_0002_[0]),
    .E(_0565_),
    .Q(cmd_out[0])
  );
  \$_DLATCH_P_  _0983_ (
    .D(_0002_[1]),
    .E(_0565_),
    .Q(cmd_out[1])
  );
  \$_DLATCH_P_  _0984_ (
    .D(_0002_[2]),
    .E(_0565_),
    .Q(cmd_out[2])
  );
  \$_DLATCH_P_  _0985_ (
    .D(_0002_[3]),
    .E(_0565_),
    .Q(cmd_out[3])
  );
  \$_DLATCH_P_  _0986_ (
    .D(_0002_[4]),
    .E(_0565_),
    .Q(cmd_out[4])
  );
  \$_DLATCH_P_  _0987_ (
    .D(_0002_[5]),
    .E(_0565_),
    .Q(cmd_out[5])
  );
  \$_DLATCH_P_  _0988_ (
    .D(_0002_[6]),
    .E(_0565_),
    .Q(cmd_out[6])
  );
  \$_DLATCH_P_  _0989_ (
    .D(_0002_[7]),
    .E(_0565_),
    .Q(cmd_out[7])
  );
  \$_DLATCH_P_  _0990_ (
    .D(_0002_[8]),
    .E(_0565_),
    .Q(cmd_out[8])
  );
  \$_DLATCH_P_  _0991_ (
    .D(_0002_[9]),
    .E(_0565_),
    .Q(cmd_out[9])
  );
  \$_DLATCH_P_  _0992_ (
    .D(_0002_[10]),
    .E(_0565_),
    .Q(cmd_out[10])
  );
  \$_DLATCH_P_  _0993_ (
    .D(_0002_[11]),
    .E(_0565_),
    .Q(cmd_out[11])
  );
  \$_DLATCH_P_  _0994_ (
    .D(_0002_[12]),
    .E(_0565_),
    .Q(cmd_out[12])
  );
  \$_DLATCH_P_  _0995_ (
    .D(_0002_[13]),
    .E(_0565_),
    .Q(cmd_out[13])
  );
  \$_DLATCH_P_  _0996_ (
    .D(_0002_[14]),
    .E(_0565_),
    .Q(cmd_out[14])
  );
  \$_DLATCH_P_  _0997_ (
    .D(_0002_[15]),
    .E(_0565_),
    .Q(cmd_out[15])
  );
  \$_DLATCH_P_  _0998_ (
    .D(_0002_[16]),
    .E(_0565_),
    .Q(cmd_out[16])
  );
  \$_DLATCH_P_  _0999_ (
    .D(_0002_[17]),
    .E(_0565_),
    .Q(cmd_out[17])
  );
  \$_DLATCH_P_  _1000_ (
    .D(_0002_[18]),
    .E(_0565_),
    .Q(cmd_out[18])
  );
  \$_DLATCH_P_  _1001_ (
    .D(_0002_[19]),
    .E(_0565_),
    .Q(cmd_out[19])
  );
  \$_DLATCH_P_  _1002_ (
    .D(_0002_[20]),
    .E(_0565_),
    .Q(cmd_out[20])
  );
  \$_DLATCH_P_  _1003_ (
    .D(_0002_[21]),
    .E(_0565_),
    .Q(cmd_out[21])
  );
  \$_DLATCH_P_  _1004_ (
    .D(_0002_[22]),
    .E(_0565_),
    .Q(cmd_out[22])
  );
  \$_DLATCH_P_  _1005_ (
    .D(_0002_[23]),
    .E(_0565_),
    .Q(cmd_out[23])
  );
  \$_DLATCH_P_  _1006_ (
    .D(_0002_[24]),
    .E(_0565_),
    .Q(cmd_out[24])
  );
  \$_DLATCH_P_  _1007_ (
    .D(_0002_[25]),
    .E(_0565_),
    .Q(cmd_out[25])
  );
  \$_DLATCH_P_  _1008_ (
    .D(_0002_[26]),
    .E(_0565_),
    .Q(cmd_out[26])
  );
  \$_DLATCH_P_  _1009_ (
    .D(_0002_[27]),
    .E(_0565_),
    .Q(cmd_out[27])
  );
  \$_DLATCH_P_  _1010_ (
    .D(_0002_[28]),
    .E(_0565_),
    .Q(cmd_out[28])
  );
  \$_DLATCH_P_  _1011_ (
    .D(_0002_[29]),
    .E(_0565_),
    .Q(cmd_out[29])
  );
  \$_DLATCH_P_  _1012_ (
    .D(_0002_[30]),
    .E(_0565_),
    .Q(cmd_out[30])
  );
  \$_DLATCH_P_  _1013_ (
    .D(_0002_[31]),
    .E(_0565_),
    .Q(cmd_out[31])
  );
  \$_DLATCH_P_  _1014_ (
    .D(_0002_[32]),
    .E(_0565_),
    .Q(cmd_out[32])
  );
  \$_DLATCH_P_  _1015_ (
    .D(_0002_[33]),
    .E(_0565_),
    .Q(cmd_out[33])
  );
  \$_DLATCH_P_  _1016_ (
    .D(_0002_[34]),
    .E(_0565_),
    .Q(cmd_out[34])
  );
  \$_DLATCH_P_  _1017_ (
    .D(_0002_[35]),
    .E(_0565_),
    .Q(cmd_out[35])
  );
  \$_DLATCH_P_  _1018_ (
    .D(_0002_[36]),
    .E(_0565_),
    .Q(cmd_out[36])
  );
  \$_DLATCH_P_  _1019_ (
    .D(_0002_[37]),
    .E(_0565_),
    .Q(cmd_out[37])
  );
  \$_DLATCH_P_  _1020_ (
    .D(_0005_),
    .E(_0565_),
    .Q(cmd_out[38])
  );
  \$_DLATCH_P_  _1021_ (
    .D(_0002_[39]),
    .E(_0565_),
    .Q(cmd_out[39])
  );
  \$_DLATCH_P_  _1022_ (
    .D(_0003_),
    .E(_0566_),
    .Q(idle_out)
  );
  \$_DLATCH_P_  _1023_ (
    .D(_0000_),
    .E(_0568_),
    .Q(ack_out)
  );
  \$_DLATCH_P_  _1024_ (
    .D(_0004_[0]),
    .E(_0568_),
    .Q(response[0])
  );
  \$_DLATCH_P_  _1025_ (
    .D(_0004_[1]),
    .E(_0568_),
    .Q(response[1])
  );
  \$_DLATCH_P_  _1026_ (
    .D(_0004_[2]),
    .E(_0568_),
    .Q(response[2])
  );
  \$_DLATCH_P_  _1027_ (
    .D(_0004_[3]),
    .E(_0568_),
    .Q(response[3])
  );
  \$_DLATCH_P_  _1028_ (
    .D(_0004_[4]),
    .E(_0568_),
    .Q(response[4])
  );
  \$_DLATCH_P_  _1029_ (
    .D(_0004_[5]),
    .E(_0568_),
    .Q(response[5])
  );
  \$_DLATCH_P_  _1030_ (
    .D(_0004_[6]),
    .E(_0568_),
    .Q(response[6])
  );
  \$_DLATCH_P_  _1031_ (
    .D(_0004_[7]),
    .E(_0568_),
    .Q(response[7])
  );
  \$_DLATCH_P_  _1032_ (
    .D(_0004_[8]),
    .E(_0568_),
    .Q(response[8])
  );
  \$_DLATCH_P_  _1033_ (
    .D(_0004_[9]),
    .E(_0568_),
    .Q(response[9])
  );
  \$_DLATCH_P_  _1034_ (
    .D(_0004_[10]),
    .E(_0568_),
    .Q(response[10])
  );
  \$_DLATCH_P_  _1035_ (
    .D(_0004_[11]),
    .E(_0568_),
    .Q(response[11])
  );
  \$_DLATCH_P_  _1036_ (
    .D(_0004_[12]),
    .E(_0568_),
    .Q(response[12])
  );
  \$_DLATCH_P_  _1037_ (
    .D(_0004_[13]),
    .E(_0568_),
    .Q(response[13])
  );
  \$_DLATCH_P_  _1038_ (
    .D(_0004_[14]),
    .E(_0568_),
    .Q(response[14])
  );
  \$_DLATCH_P_  _1039_ (
    .D(_0004_[15]),
    .E(_0568_),
    .Q(response[15])
  );
  \$_DLATCH_P_  _1040_ (
    .D(_0004_[16]),
    .E(_0568_),
    .Q(response[16])
  );
  \$_DLATCH_P_  _1041_ (
    .D(_0004_[17]),
    .E(_0568_),
    .Q(response[17])
  );
  \$_DLATCH_P_  _1042_ (
    .D(_0004_[18]),
    .E(_0568_),
    .Q(response[18])
  );
  \$_DLATCH_P_  _1043_ (
    .D(_0004_[19]),
    .E(_0568_),
    .Q(response[19])
  );
  \$_DLATCH_P_  _1044_ (
    .D(_0004_[20]),
    .E(_0568_),
    .Q(response[20])
  );
  \$_DLATCH_P_  _1045_ (
    .D(_0004_[21]),
    .E(_0568_),
    .Q(response[21])
  );
  \$_DLATCH_P_  _1046_ (
    .D(_0004_[22]),
    .E(_0568_),
    .Q(response[22])
  );
  \$_DLATCH_P_  _1047_ (
    .D(_0004_[23]),
    .E(_0568_),
    .Q(response[23])
  );
  \$_DLATCH_P_  _1048_ (
    .D(_0004_[24]),
    .E(_0568_),
    .Q(response[24])
  );
  \$_DLATCH_P_  _1049_ (
    .D(_0004_[25]),
    .E(_0568_),
    .Q(response[25])
  );
  \$_DLATCH_P_  _1050_ (
    .D(_0004_[26]),
    .E(_0568_),
    .Q(response[26])
  );
  \$_DLATCH_P_  _1051_ (
    .D(_0004_[27]),
    .E(_0568_),
    .Q(response[27])
  );
  \$_DLATCH_P_  _1052_ (
    .D(_0004_[28]),
    .E(_0568_),
    .Q(response[28])
  );
  \$_DLATCH_P_  _1053_ (
    .D(_0004_[29]),
    .E(_0568_),
    .Q(response[29])
  );
  \$_DLATCH_P_  _1054_ (
    .D(_0004_[30]),
    .E(_0568_),
    .Q(response[30])
  );
  \$_DLATCH_P_  _1055_ (
    .D(_0004_[31]),
    .E(_0568_),
    .Q(response[31])
  );
  \$_DLATCH_P_  _1056_ (
    .D(_0004_[32]),
    .E(_0568_),
    .Q(response[32])
  );
  \$_DLATCH_P_  _1057_ (
    .D(_0004_[33]),
    .E(_0568_),
    .Q(response[33])
  );
  \$_DLATCH_P_  _1058_ (
    .D(_0004_[34]),
    .E(_0568_),
    .Q(response[34])
  );
  \$_DLATCH_P_  _1059_ (
    .D(_0004_[35]),
    .E(_0568_),
    .Q(response[35])
  );
  \$_DLATCH_P_  _1060_ (
    .D(_0004_[36]),
    .E(_0568_),
    .Q(response[36])
  );
  \$_DLATCH_P_  _1061_ (
    .D(_0004_[37]),
    .E(_0568_),
    .Q(response[37])
  );
  \$_DLATCH_P_  _1062_ (
    .D(_0004_[38]),
    .E(_0568_),
    .Q(response[38])
  );
  \$_DLATCH_P_  _1063_ (
    .D(_0004_[39]),
    .E(_0568_),
    .Q(response[39])
  );
  \$_DLATCH_P_  _1064_ (
    .D(_0004_[40]),
    .E(_0568_),
    .Q(response[40])
  );
  \$_DLATCH_P_  _1065_ (
    .D(_0004_[41]),
    .E(_0568_),
    .Q(response[41])
  );
  \$_DLATCH_P_  _1066_ (
    .D(_0004_[42]),
    .E(_0568_),
    .Q(response[42])
  );
  \$_DLATCH_P_  _1067_ (
    .D(_0004_[43]),
    .E(_0568_),
    .Q(response[43])
  );
  \$_DLATCH_P_  _1068_ (
    .D(_0004_[44]),
    .E(_0568_),
    .Q(response[44])
  );
  \$_DLATCH_P_  _1069_ (
    .D(_0004_[45]),
    .E(_0568_),
    .Q(response[45])
  );
  \$_DLATCH_P_  _1070_ (
    .D(_0004_[46]),
    .E(_0568_),
    .Q(response[46])
  );
  \$_DLATCH_P_  _1071_ (
    .D(_0004_[47]),
    .E(_0568_),
    .Q(response[47])
  );
  \$_DLATCH_P_  _1072_ (
    .D(_0004_[48]),
    .E(_0568_),
    .Q(response[48])
  );
  \$_DLATCH_P_  _1073_ (
    .D(_0004_[49]),
    .E(_0568_),
    .Q(response[49])
  );
  \$_DLATCH_P_  _1074_ (
    .D(_0004_[50]),
    .E(_0568_),
    .Q(response[50])
  );
  \$_DLATCH_P_  _1075_ (
    .D(_0004_[51]),
    .E(_0568_),
    .Q(response[51])
  );
  \$_DLATCH_P_  _1076_ (
    .D(_0004_[52]),
    .E(_0568_),
    .Q(response[52])
  );
  \$_DLATCH_P_  _1077_ (
    .D(_0004_[53]),
    .E(_0568_),
    .Q(response[53])
  );
  \$_DLATCH_P_  _1078_ (
    .D(_0004_[54]),
    .E(_0568_),
    .Q(response[54])
  );
  \$_DLATCH_P_  _1079_ (
    .D(_0004_[55]),
    .E(_0568_),
    .Q(response[55])
  );
  \$_DLATCH_P_  _1080_ (
    .D(_0004_[56]),
    .E(_0568_),
    .Q(response[56])
  );
  \$_DLATCH_P_  _1081_ (
    .D(_0004_[57]),
    .E(_0568_),
    .Q(response[57])
  );
  \$_DLATCH_P_  _1082_ (
    .D(_0004_[58]),
    .E(_0568_),
    .Q(response[58])
  );
  \$_DLATCH_P_  _1083_ (
    .D(_0004_[59]),
    .E(_0568_),
    .Q(response[59])
  );
  \$_DLATCH_P_  _1084_ (
    .D(_0004_[60]),
    .E(_0568_),
    .Q(response[60])
  );
  \$_DLATCH_P_  _1085_ (
    .D(_0004_[61]),
    .E(_0568_),
    .Q(response[61])
  );
  \$_DLATCH_P_  _1086_ (
    .D(_0004_[62]),
    .E(_0568_),
    .Q(response[62])
  );
  \$_DLATCH_P_  _1087_ (
    .D(_0004_[63]),
    .E(_0568_),
    .Q(response[63])
  );
  \$_DLATCH_P_  _1088_ (
    .D(_0004_[64]),
    .E(_0568_),
    .Q(response[64])
  );
  \$_DLATCH_P_  _1089_ (
    .D(_0004_[65]),
    .E(_0568_),
    .Q(response[65])
  );
  \$_DLATCH_P_  _1090_ (
    .D(_0004_[66]),
    .E(_0568_),
    .Q(response[66])
  );
  \$_DLATCH_P_  _1091_ (
    .D(_0004_[67]),
    .E(_0568_),
    .Q(response[67])
  );
  \$_DLATCH_P_  _1092_ (
    .D(_0004_[68]),
    .E(_0568_),
    .Q(response[68])
  );
  \$_DLATCH_P_  _1093_ (
    .D(_0004_[69]),
    .E(_0568_),
    .Q(response[69])
  );
  \$_DLATCH_P_  _1094_ (
    .D(_0004_[70]),
    .E(_0568_),
    .Q(response[70])
  );
  \$_DLATCH_P_  _1095_ (
    .D(_0004_[71]),
    .E(_0568_),
    .Q(response[71])
  );
  \$_DLATCH_P_  _1096_ (
    .D(_0004_[72]),
    .E(_0568_),
    .Q(response[72])
  );
  \$_DLATCH_P_  _1097_ (
    .D(_0004_[73]),
    .E(_0568_),
    .Q(response[73])
  );
  \$_DLATCH_P_  _1098_ (
    .D(_0004_[74]),
    .E(_0568_),
    .Q(response[74])
  );
  \$_DLATCH_P_  _1099_ (
    .D(_0004_[75]),
    .E(_0568_),
    .Q(response[75])
  );
  \$_DLATCH_P_  _1100_ (
    .D(_0004_[76]),
    .E(_0568_),
    .Q(response[76])
  );
  \$_DLATCH_P_  _1101_ (
    .D(_0004_[77]),
    .E(_0568_),
    .Q(response[77])
  );
  \$_DLATCH_P_  _1102_ (
    .D(_0004_[78]),
    .E(_0568_),
    .Q(response[78])
  );
  \$_DLATCH_P_  _1103_ (
    .D(_0004_[79]),
    .E(_0568_),
    .Q(response[79])
  );
  \$_DLATCH_P_  _1104_ (
    .D(_0004_[80]),
    .E(_0568_),
    .Q(response[80])
  );
  \$_DLATCH_P_  _1105_ (
    .D(_0004_[81]),
    .E(_0568_),
    .Q(response[81])
  );
  \$_DLATCH_P_  _1106_ (
    .D(_0004_[82]),
    .E(_0568_),
    .Q(response[82])
  );
  \$_DLATCH_P_  _1107_ (
    .D(_0004_[83]),
    .E(_0568_),
    .Q(response[83])
  );
  \$_DLATCH_P_  _1108_ (
    .D(_0004_[84]),
    .E(_0568_),
    .Q(response[84])
  );
  \$_DLATCH_P_  _1109_ (
    .D(_0004_[85]),
    .E(_0568_),
    .Q(response[85])
  );
  \$_DLATCH_P_  _1110_ (
    .D(_0004_[86]),
    .E(_0568_),
    .Q(response[86])
  );
  \$_DLATCH_P_  _1111_ (
    .D(_0004_[87]),
    .E(_0568_),
    .Q(response[87])
  );
  \$_DLATCH_P_  _1112_ (
    .D(_0004_[88]),
    .E(_0568_),
    .Q(response[88])
  );
  \$_DLATCH_P_  _1113_ (
    .D(_0004_[89]),
    .E(_0568_),
    .Q(response[89])
  );
  \$_DLATCH_P_  _1114_ (
    .D(_0004_[90]),
    .E(_0568_),
    .Q(response[90])
  );
  \$_DLATCH_P_  _1115_ (
    .D(_0004_[91]),
    .E(_0568_),
    .Q(response[91])
  );
  \$_DLATCH_P_  _1116_ (
    .D(_0004_[92]),
    .E(_0568_),
    .Q(response[92])
  );
  \$_DLATCH_P_  _1117_ (
    .D(_0004_[93]),
    .E(_0568_),
    .Q(response[93])
  );
  \$_DLATCH_P_  _1118_ (
    .D(_0004_[94]),
    .E(_0568_),
    .Q(response[94])
  );
  \$_DLATCH_P_  _1119_ (
    .D(_0004_[95]),
    .E(_0568_),
    .Q(response[95])
  );
  \$_DLATCH_P_  _1120_ (
    .D(_0004_[96]),
    .E(_0568_),
    .Q(response[96])
  );
  \$_DLATCH_P_  _1121_ (
    .D(_0004_[97]),
    .E(_0568_),
    .Q(response[97])
  );
  \$_DLATCH_P_  _1122_ (
    .D(_0004_[98]),
    .E(_0568_),
    .Q(response[98])
  );
  \$_DLATCH_P_  _1123_ (
    .D(_0004_[99]),
    .E(_0568_),
    .Q(response[99])
  );
  \$_DLATCH_P_  _1124_ (
    .D(_0004_[100]),
    .E(_0568_),
    .Q(response[100])
  );
  \$_DLATCH_P_  _1125_ (
    .D(_0004_[101]),
    .E(_0568_),
    .Q(response[101])
  );
  \$_DLATCH_P_  _1126_ (
    .D(_0004_[102]),
    .E(_0568_),
    .Q(response[102])
  );
  \$_DLATCH_P_  _1127_ (
    .D(_0004_[103]),
    .E(_0568_),
    .Q(response[103])
  );
  \$_DLATCH_P_  _1128_ (
    .D(_0004_[104]),
    .E(_0568_),
    .Q(response[104])
  );
  \$_DLATCH_P_  _1129_ (
    .D(_0004_[105]),
    .E(_0568_),
    .Q(response[105])
  );
  \$_DLATCH_P_  _1130_ (
    .D(_0004_[106]),
    .E(_0568_),
    .Q(response[106])
  );
  \$_DLATCH_P_  _1131_ (
    .D(_0004_[107]),
    .E(_0568_),
    .Q(response[107])
  );
  \$_DLATCH_P_  _1132_ (
    .D(_0004_[108]),
    .E(_0568_),
    .Q(response[108])
  );
  \$_DLATCH_P_  _1133_ (
    .D(_0004_[109]),
    .E(_0568_),
    .Q(response[109])
  );
  \$_DLATCH_P_  _1134_ (
    .D(_0004_[110]),
    .E(_0568_),
    .Q(response[110])
  );
  \$_DLATCH_P_  _1135_ (
    .D(_0004_[111]),
    .E(_0568_),
    .Q(response[111])
  );
  \$_DLATCH_P_  _1136_ (
    .D(_0004_[112]),
    .E(_0568_),
    .Q(response[112])
  );
  \$_DLATCH_P_  _1137_ (
    .D(_0004_[113]),
    .E(_0568_),
    .Q(response[113])
  );
  \$_DLATCH_P_  _1138_ (
    .D(_0004_[114]),
    .E(_0568_),
    .Q(response[114])
  );
  \$_DLATCH_P_  _1139_ (
    .D(_0004_[115]),
    .E(_0568_),
    .Q(response[115])
  );
  \$_DLATCH_P_  _1140_ (
    .D(_0004_[116]),
    .E(_0568_),
    .Q(response[116])
  );
  \$_DLATCH_P_  _1141_ (
    .D(_0004_[117]),
    .E(_0568_),
    .Q(response[117])
  );
  \$_DLATCH_P_  _1142_ (
    .D(_0004_[118]),
    .E(_0568_),
    .Q(response[118])
  );
  \$_DLATCH_P_  _1143_ (
    .D(_0004_[119]),
    .E(_0568_),
    .Q(response[119])
  );
  \$_DLATCH_P_  _1144_ (
    .D(_0004_[120]),
    .E(_0568_),
    .Q(response[120])
  );
  \$_DLATCH_P_  _1145_ (
    .D(_0004_[121]),
    .E(_0568_),
    .Q(response[121])
  );
  \$_DLATCH_P_  _1146_ (
    .D(_0004_[122]),
    .E(_0568_),
    .Q(response[122])
  );
  \$_DLATCH_P_  _1147_ (
    .D(_0004_[123]),
    .E(_0568_),
    .Q(response[123])
  );
  \$_DLATCH_P_  _1148_ (
    .D(_0004_[124]),
    .E(_0568_),
    .Q(response[124])
  );
  \$_DLATCH_P_  _1149_ (
    .D(_0004_[125]),
    .E(_0568_),
    .Q(response[125])
  );
  \$_DLATCH_P_  _1150_ (
    .D(_0004_[126]),
    .E(_0568_),
    .Q(response[126])
  );
  \$_DLATCH_P_  _1151_ (
    .D(_0004_[127]),
    .E(_0568_),
    .Q(response[127])
  );
  \$_DLATCH_P_  _1152_ (
    .D(_0001_),
    .E(_0568_),
    .Q(cmd_index_error)
  );
  assign cmd_complete = ack_out;
  assign strobe_out = cmd_out[38];
  assign _0563_ = estado[0];
  assign _0564_ = estado[1];
  assign _0343_ = 1'b0;
  assign estado[0] = _0022_;
  assign estado[1] = _0082_;
  assign _0033_ = reset_host;
  assign _0045_ = cmd_in[134];
  assign _0143_ = new_command;
  assign _0205_ = cmd_index[0];
  assign _0236_ = cmd_index[1];
  assign _0265_ = cmd_index[2];
  assign _0286_ = cmd_index[3];
  assign _0307_ = cmd_index[4];
  assign _0328_ = cmd_index[5];
  assign _0349_ = cmd_argument[0];
  assign _0380_ = cmd_argument[1];
  assign _0411_ = cmd_argument[2];
  assign _0442_ = cmd_argument[3];
  assign _0473_ = cmd_argument[4];
  assign _0504_ = cmd_argument[5];
  assign _0533_ = cmd_argument[6];
  assign _0548_ = cmd_argument[7];
  assign _0551_ = cmd_argument[8];
  assign _0552_ = cmd_argument[9];
  assign _0553_ = cmd_argument[10];
  assign _0554_ = cmd_argument[11];
  assign _0555_ = cmd_argument[12];
  assign _0556_ = cmd_argument[13];
  assign _0557_ = cmd_argument[14];
  assign _0558_ = cmd_argument[15];
  assign _0559_ = cmd_argument[16];
  assign _0560_ = cmd_argument[17];
  assign _0561_ = cmd_argument[18];
  assign _0562_ = cmd_argument[19];
  assign _0023_ = cmd_argument[20];
  assign _0024_ = cmd_argument[21];
  assign _0025_ = cmd_argument[22];
  assign _0026_ = cmd_argument[23];
  assign _0027_ = cmd_argument[24];
  assign _0028_ = cmd_argument[25];
  assign _0029_ = cmd_argument[26];
  assign _0030_ = cmd_argument[27];
  assign _0031_ = cmd_argument[28];
  assign _0032_ = cmd_argument[29];
  assign _0034_ = cmd_argument[30];
  assign _0035_ = cmd_argument[31];
  assign _0064_ = strobe_in;
  assign _0066_ = cmd_in[8];
  assign _0067_ = cmd_in[9];
  assign _0069_ = cmd_in[10];
  assign _0070_ = cmd_in[11];
  assign _0072_ = cmd_in[12];
  assign _0073_ = cmd_in[13];
  assign _0075_ = cmd_in[14];
  assign _0076_ = cmd_in[15];
  assign _0078_ = cmd_in[16];
  assign _0079_ = cmd_in[17];
  assign _0081_ = cmd_in[18];
  assign _0083_ = cmd_in[19];
  assign _0085_ = cmd_in[20];
  assign _0086_ = cmd_in[21];
  assign _0088_ = cmd_in[22];
  assign _0089_ = cmd_in[23];
  assign _0091_ = cmd_in[24];
  assign _0092_ = cmd_in[25];
  assign _0094_ = cmd_in[26];
  assign _0095_ = cmd_in[27];
  assign _0097_ = cmd_in[28];
  assign _0098_ = cmd_in[29];
  assign _0100_ = cmd_in[30];
  assign _0101_ = cmd_in[31];
  assign _0103_ = cmd_in[32];
  assign _0104_ = cmd_in[33];
  assign _0106_ = cmd_in[34];
  assign _0107_ = cmd_in[35];
  assign _0109_ = cmd_in[36];
  assign _0110_ = cmd_in[37];
  assign _0112_ = cmd_in[38];
  assign _0113_ = cmd_in[39];
  assign _0115_ = cmd_in[40];
  assign _0116_ = cmd_in[41];
  assign _0118_ = cmd_in[42];
  assign _0119_ = cmd_in[43];
  assign _0121_ = cmd_in[44];
  assign _0122_ = cmd_in[45];
  assign _0124_ = cmd_in[46];
  assign _0125_ = cmd_in[47];
  assign _0127_ = cmd_in[48];
  assign _0128_ = cmd_in[49];
  assign _0130_ = cmd_in[50];
  assign _0131_ = cmd_in[51];
  assign _0133_ = cmd_in[52];
  assign _0134_ = cmd_in[53];
  assign _0136_ = cmd_in[54];
  assign _0137_ = cmd_in[55];
  assign _0139_ = cmd_in[56];
  assign _0140_ = cmd_in[57];
  assign _0142_ = cmd_in[58];
  assign _0144_ = cmd_in[59];
  assign _0146_ = cmd_in[60];
  assign _0147_ = cmd_in[61];
  assign _0149_ = cmd_in[62];
  assign _0150_ = cmd_in[63];
  assign _0152_ = cmd_in[64];
  assign _0153_ = cmd_in[65];
  assign _0155_ = cmd_in[66];
  assign _0156_ = cmd_in[67];
  assign _0157_ = cmd_in[68];
  assign _0159_ = cmd_in[69];
  assign _0160_ = cmd_in[70];
  assign _0162_ = cmd_in[71];
  assign _0164_ = cmd_in[72];
  assign _0165_ = cmd_in[73];
  assign _0167_ = cmd_in[74];
  assign _0169_ = cmd_in[75];
  assign _0170_ = cmd_in[76];
  assign _0172_ = cmd_in[77];
  assign _0173_ = cmd_in[78];
  assign _0175_ = cmd_in[79];
  assign _0176_ = cmd_in[80];
  assign _0178_ = cmd_in[81];
  assign _0179_ = cmd_in[82];
  assign _0181_ = cmd_in[83];
  assign _0182_ = cmd_in[84];
  assign _0184_ = cmd_in[85];
  assign _0185_ = cmd_in[86];
  assign _0187_ = cmd_in[87];
  assign _0188_ = cmd_in[88];
  assign _0190_ = cmd_in[89];
  assign _0191_ = cmd_in[90];
  assign _0193_ = cmd_in[91];
  assign _0194_ = cmd_in[92];
  assign _0196_ = cmd_in[93];
  assign _0197_ = cmd_in[94];
  assign _0199_ = cmd_in[95];
  assign _0200_ = cmd_in[96];
  assign _0202_ = cmd_in[97];
  assign _0203_ = cmd_in[98];
  assign _0206_ = cmd_in[99];
  assign _0207_ = cmd_in[100];
  assign _0209_ = cmd_in[101];
  assign _0210_ = cmd_in[102];
  assign _0212_ = cmd_in[103];
  assign _0213_ = cmd_in[104];
  assign _0215_ = cmd_in[105];
  assign _0216_ = cmd_in[106];
  assign _0218_ = cmd_in[107];
  assign _0219_ = cmd_in[108];
  assign _0221_ = cmd_in[109];
  assign _0222_ = cmd_in[110];
  assign _0224_ = cmd_in[111];
  assign _0225_ = cmd_in[112];
  assign _0227_ = cmd_in[113];
  assign _0228_ = cmd_in[114];
  assign _0230_ = cmd_in[115];
  assign _0231_ = cmd_in[116];
  assign _0233_ = cmd_in[117];
  assign _0234_ = cmd_in[118];
  assign _0237_ = cmd_in[119];
  assign _0238_ = cmd_in[120];
  assign _0240_ = cmd_in[121];
  assign _0241_ = cmd_in[122];
  assign _0243_ = cmd_in[123];
  assign _0244_ = cmd_in[124];
  assign _0246_ = cmd_in[125];
  assign _0247_ = cmd_in[126];
  assign _0249_ = cmd_in[127];
  assign _0250_ = cmd_in[128];
  assign _0252_ = cmd_in[129];
  assign _0253_ = cmd_in[130];
  assign _0255_ = cmd_in[131];
  assign _0256_ = cmd_in[132];
  assign _0258_ = cmd_in[133];
  assign _0259_ = cmd_in[135];
  assign _0261_ = ack_in;
  assign _0002_[0] = _0263_;
  assign _0002_[1] = _0266_;
  assign _0002_[2] = _0268_;
  assign _0002_[3] = _0270_;
  assign _0002_[4] = _0272_;
  assign _0002_[5] = _0274_;
  assign _0002_[6] = _0276_;
  assign _0002_[7] = _0278_;
  assign _0002_[8] = _0280_;
  assign _0002_[9] = _0282_;
  assign _0002_[10] = _0284_;
  assign _0002_[11] = _0287_;
  assign _0002_[12] = _0289_;
  assign _0002_[13] = _0291_;
  assign _0002_[14] = _0293_;
  assign _0002_[15] = _0295_;
  assign _0002_[16] = _0297_;
  assign _0002_[17] = _0299_;
  assign _0002_[18] = _0301_;
  assign _0002_[19] = _0303_;
  assign _0002_[20] = _0305_;
  assign _0002_[21] = _0308_;
  assign _0002_[22] = _0310_;
  assign _0002_[23] = _0312_;
  assign _0002_[24] = _0314_;
  assign _0002_[25] = _0316_;
  assign _0002_[26] = _0318_;
  assign _0002_[27] = _0320_;
  assign _0002_[28] = _0322_;
  assign _0002_[29] = _0324_;
  assign _0002_[30] = _0326_;
  assign _0002_[31] = _0329_;
  assign _0002_[32] = _0331_;
  assign _0002_[33] = _0333_;
  assign _0002_[34] = _0335_;
  assign _0002_[35] = _0337_;
  assign _0002_[36] = _0339_;
  assign _0002_[37] = _0341_;
  assign _0002_[39] = _0343_;
  assign _0003_ = _0345_;
  assign _0000_ = _0347_;
  assign _0005_ = _0350_;
  assign _0001_ = _0351_;
  assign _0004_[0] = _0353_;
  assign _0004_[1] = _0354_;
  assign _0004_[2] = _0356_;
  assign _0004_[3] = _0357_;
  assign _0004_[4] = _0359_;
  assign _0004_[5] = _0360_;
  assign _0004_[6] = _0362_;
  assign _0004_[7] = _0363_;
  assign _0004_[8] = _0365_;
  assign _0004_[9] = _0366_;
  assign _0004_[10] = _0368_;
  assign _0004_[11] = _0369_;
  assign _0004_[12] = _0371_;
  assign _0004_[13] = _0372_;
  assign _0004_[14] = _0374_;
  assign _0004_[15] = _0375_;
  assign _0004_[16] = _0377_;
  assign _0004_[17] = _0378_;
  assign _0004_[18] = _0381_;
  assign _0004_[19] = _0382_;
  assign _0004_[20] = _0384_;
  assign _0004_[21] = _0385_;
  assign _0004_[22] = _0387_;
  assign _0004_[23] = _0388_;
  assign _0004_[24] = _0390_;
  assign _0004_[25] = _0391_;
  assign _0004_[26] = _0393_;
  assign _0004_[27] = _0394_;
  assign _0004_[28] = _0396_;
  assign _0004_[29] = _0397_;
  assign _0004_[30] = _0399_;
  assign _0004_[31] = _0400_;
  assign _0004_[32] = _0402_;
  assign _0004_[33] = _0403_;
  assign _0004_[34] = _0405_;
  assign _0004_[35] = _0406_;
  assign _0004_[36] = _0408_;
  assign _0004_[37] = _0409_;
  assign _0004_[38] = _0412_;
  assign _0004_[39] = _0413_;
  assign _0004_[40] = _0415_;
  assign _0004_[41] = _0416_;
  assign _0004_[42] = _0418_;
  assign _0004_[43] = _0419_;
  assign _0004_[44] = _0421_;
  assign _0004_[45] = _0422_;
  assign _0004_[46] = _0424_;
  assign _0004_[47] = _0425_;
  assign _0004_[48] = _0427_;
  assign _0004_[49] = _0428_;
  assign _0004_[50] = _0430_;
  assign _0004_[51] = _0431_;
  assign _0004_[52] = _0433_;
  assign _0004_[53] = _0434_;
  assign _0004_[54] = _0436_;
  assign _0004_[55] = _0437_;
  assign _0004_[56] = _0439_;
  assign _0004_[57] = _0440_;
  assign _0004_[58] = _0443_;
  assign _0004_[59] = _0444_;
  assign _0004_[60] = _0446_;
  assign _0004_[61] = _0447_;
  assign _0004_[62] = _0449_;
  assign _0004_[63] = _0450_;
  assign _0004_[64] = _0452_;
  assign _0004_[65] = _0453_;
  assign _0004_[66] = _0455_;
  assign _0004_[67] = _0456_;
  assign _0004_[68] = _0458_;
  assign _0004_[69] = _0459_;
  assign _0004_[70] = _0461_;
  assign _0004_[71] = _0462_;
  assign _0004_[72] = _0464_;
  assign _0004_[73] = _0465_;
  assign _0004_[74] = _0467_;
  assign _0004_[75] = _0468_;
  assign _0004_[76] = _0470_;
  assign _0004_[77] = _0471_;
  assign _0004_[78] = _0474_;
  assign _0004_[79] = _0475_;
  assign _0004_[80] = _0477_;
  assign _0004_[81] = _0478_;
  assign _0004_[82] = _0480_;
  assign _0004_[83] = _0481_;
  assign _0004_[84] = _0483_;
  assign _0004_[85] = _0484_;
  assign _0004_[86] = _0486_;
  assign _0004_[87] = _0487_;
  assign _0004_[88] = _0489_;
  assign _0004_[89] = _0490_;
  assign _0004_[90] = _0492_;
  assign _0004_[91] = _0493_;
  assign _0004_[92] = _0495_;
  assign _0004_[93] = _0496_;
  assign _0004_[94] = _0498_;
  assign _0004_[95] = _0499_;
  assign _0004_[96] = _0501_;
  assign _0004_[97] = _0502_;
  assign _0004_[98] = _0505_;
  assign _0004_[99] = _0506_;
  assign _0004_[100] = _0508_;
  assign _0004_[101] = _0509_;
  assign _0004_[102] = _0511_;
  assign _0004_[103] = _0512_;
  assign _0004_[104] = _0514_;
  assign _0004_[105] = _0515_;
  assign _0004_[106] = _0517_;
  assign _0004_[107] = _0518_;
  assign _0004_[108] = _0520_;
  assign _0004_[109] = _0521_;
  assign _0004_[110] = _0523_;
  assign _0004_[111] = _0524_;
  assign _0004_[112] = _0525_;
  assign _0004_[113] = _0526_;
  assign _0004_[114] = _0528_;
  assign _0004_[115] = _0530_;
  assign _0004_[116] = _0531_;
  assign _0004_[117] = _0532_;
  assign _0004_[118] = _0534_;
  assign _0004_[119] = _0535_;
  assign _0004_[120] = _0536_;
  assign _0004_[121] = _0537_;
  assign _0004_[122] = _0538_;
  assign _0004_[123] = _0539_;
  assign _0004_[124] = _0540_;
  assign _0004_[125] = _0541_;
  assign _0004_[126] = _0542_;
  assign _0004_[127] = _0543_;
  assign _0544_ = cmd_out[0];
  assign _0566_ = _0545_;
  assign _0565_ = _0546_;
  assign _0568_ = _0547_;
  assign _0549_ = _0563_;
  assign _0550_ = _0564_;
endmodule

module control_capa_fisica(strobe_in, ack_in, idle_in, pad_response, reception_complete, transmission_complete, ack_out, strobe_out, response, load_send, enable_stp, enable_pts, reset_stp, reset_pts, reset_host, clk_SD);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire [135:0] _0003_;
  wire _0004_;
  wire [2:0] _0005_;
  wire [2:0] _0006_;
  wire [2:0] _0007_;
  wire [2:0] _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire [2:0] _0013_;
  wire _0014_;
  wire [135:0] _0015_;
  wire _0016_;
  wire [2:0] _0017_;
  wire _0018_;
  wire [135:0] _0019_;
  wire [2:0] _0020_;
  wire _0021_;
  wire [2:0] _0022_;
  wire _0023_;
  wire _0024_;
  wire [2:0] _0025_;
  wire [2:0] _0026_;
  wire [2:0] _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire [2:0] _0598_;
  wire _0599_;
  wire [2:0] _0600_;
  wire _0601_;
  wire [2:0] _0602_;
  wire _0603_;
  wire [2:0] _0604_;
  wire _0605_;
  wire [2:0] _0606_;
  wire _0607_;
  wire [2:0] _0608_;
  wire _0609_;
  wire [1:0] _0610_;
  wire _0611_;
  wire [1:0] _0612_;
  wire _0613_;
  wire [1:0] _0614_;
  wire _0615_;
  wire [1:0] _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire [1:0] _0623_;
  wire [1:0] _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire _0729_;
  wire _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire _0735_;
  wire _0736_;
  wire _0737_;
  wire _0738_;
  wire _0739_;
  wire _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire _0744_;
  wire _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire _0750_;
  wire _0751_;
  wire _0752_;
  wire _0753_;
  wire _0754_;
  wire _0755_;
  wire _0756_;
  wire _0757_;
  wire _0758_;
  wire _0759_;
  wire _0760_;
  wire _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire _0765_;
  wire _0766_;
  wire [2:0] _0767_;
  wire [2:0] _0768_;
  wire [2:0] _0769_;
  wire _0770_;
  wire _0771_;
  wire _0772_;
  wire _0773_;
  wire _0774_;
  wire _0775_;
  wire [2:0] _0776_;
  wire _0777_;
  wire _0778_;
  wire _0779_;
  wire _0780_;
  wire _0781_;
  wire _0782_;
  wire [2:0] _0783_;
  wire [407:0] _0784_;
  wire [3:0] _0785_;
  wire _0786_;
  wire [2:0] _0787_;
  wire [2:0] _0788_;
  wire [14:0] _0789_;
  wire [2:0] _0790_;
  wire _0791_;
  wire _0792_;
  wire _0793_;
  wire _0794_;
  wire _0795_;
  wire _0796_;
  wire _0797_;
  input ack_in;
  output ack_out;
  input clk_SD;
  output enable_pts;
  output enable_stp;
  wire [2:0] estado;
  input idle_in;
  output load_send;
  input [135:0] pad_response;
  input reception_complete;
  input reset_host;
  output reset_pts;
  output reset_stp;
  output [135:0] response;
  input strobe_in;
  output strobe_out;
  input transmission_complete;
  NOT _0798_ (
    .A(_0029_),
    .Y(_0034_)
  );
  NOT _0799_ (
    .A(_0031_),
    .Y(_0035_)
  );
  NAND _0800_ (
    .A(_0035_),
    .B(_0030_),
    .Y(_0036_)
  );
  NOR _0801_ (
    .A(_0036_),
    .B(_0034_),
    .Y(_0037_)
  );
  NOT _0802_ (
    .A(_0391_),
    .Y(_0038_)
  );
  NOR _0803_ (
    .A(_0038_),
    .B(_0033_),
    .Y(_0039_)
  );
  NOR _0804_ (
    .A(_0039_),
    .B(_0084_),
    .Y(_0040_)
  );
  NAND _0805_ (
    .A(_0040_),
    .B(_0037_),
    .Y(_0041_)
  );
  NOT _0806_ (
    .A(_0084_),
    .Y(_0042_)
  );
  NOT _0807_ (
    .A(_0030_),
    .Y(_0043_)
  );
  NAND _0808_ (
    .A(_0035_),
    .B(_0043_),
    .Y(_0044_)
  );
  NOR _0809_ (
    .A(_0044_),
    .B(_0034_),
    .Y(_0045_)
  );
  NAND _0810_ (
    .A(_0045_),
    .B(_0042_),
    .Y(_0046_)
  );
  NAND _0811_ (
    .A(_0046_),
    .B(_0041_),
    .Y(_0047_)
  );
  NAND _0812_ (
    .A(_0031_),
    .B(_0030_),
    .Y(_0048_)
  );
  NOR _0813_ (
    .A(_0048_),
    .B(_0029_),
    .Y(_0049_)
  );
  NOT _0814_ (
    .A(_0119_),
    .Y(_0050_)
  );
  NOR _0815_ (
    .A(_0050_),
    .B(_0033_),
    .Y(_0051_)
  );
  NOR _0816_ (
    .A(_0051_),
    .B(_0084_),
    .Y(_0052_)
  );
  NAND _0817_ (
    .A(_0052_),
    .B(_0049_),
    .Y(_0053_)
  );
  NAND _0818_ (
    .A(_0031_),
    .B(_0043_),
    .Y(_0054_)
  );
  NOR _0819_ (
    .A(_0054_),
    .B(_0029_),
    .Y(_0055_)
  );
  NOR _0820_ (
    .A(_0112_),
    .B(_0033_),
    .Y(_0056_)
  );
  NOR _0821_ (
    .A(_0056_),
    .B(_0084_),
    .Y(_0057_)
  );
  NAND _0822_ (
    .A(_0057_),
    .B(_0055_),
    .Y(_0058_)
  );
  NAND _0823_ (
    .A(_0058_),
    .B(_0053_),
    .Y(_0059_)
  );
  NOR _0824_ (
    .A(_0059_),
    .B(_0047_),
    .Y(_0060_)
  );
  NOR _0825_ (
    .A(_0031_),
    .B(_0034_),
    .Y(_0061_)
  );
  NOR _0826_ (
    .A(_0031_),
    .B(_0030_),
    .Y(_0062_)
  );
  NOR _0827_ (
    .A(_0062_),
    .B(_0029_),
    .Y(_0063_)
  );
  NOR _0828_ (
    .A(_0063_),
    .B(_0061_),
    .Y(_0064_)
  );
  NOR _0829_ (
    .A(_0036_),
    .B(_0029_),
    .Y(_0065_)
  );
  NAND _0830_ (
    .A(_0065_),
    .B(_0042_),
    .Y(_0066_)
  );
  NOR _0831_ (
    .A(_0066_),
    .B(_0108_),
    .Y(_0067_)
  );
  NOR _0832_ (
    .A(_0067_),
    .B(_0064_),
    .Y(_0068_)
  );
  NAND _0833_ (
    .A(_0068_),
    .B(_0060_),
    .Y(_0028_)
  );
  NOT _0834_ (
    .A(_0108_),
    .Y(_0069_)
  );
  NOR _0835_ (
    .A(_0066_),
    .B(_0069_),
    .Y(_0070_)
  );
  NOR _0836_ (
    .A(_0030_),
    .B(_0029_),
    .Y(_0071_)
  );
  NAND _0837_ (
    .A(_0071_),
    .B(_0031_),
    .Y(_0072_)
  );
  NOT _0838_ (
    .A(_0033_),
    .Y(_0073_)
  );
  NAND _0839_ (
    .A(_0042_),
    .B(_0073_),
    .Y(_0074_)
  );
  NOR _0840_ (
    .A(_0074_),
    .B(_0072_),
    .Y(_0393_)
  );
  NOR _0841_ (
    .A(_0393_),
    .B(_0070_),
    .Y(_0075_)
  );
  NOR _0842_ (
    .A(_0084_),
    .B(_0033_),
    .Y(_0076_)
  );
  NAND _0843_ (
    .A(_0076_),
    .B(_0049_),
    .Y(_0077_)
  );
  NOR _0844_ (
    .A(_0077_),
    .B(_0119_),
    .Y(_0078_)
  );
  NOR _0845_ (
    .A(_0031_),
    .B(_0043_),
    .Y(_0079_)
  );
  NAND _0846_ (
    .A(_0079_),
    .B(_0029_),
    .Y(_0080_)
  );
  NAND _0847_ (
    .A(_0076_),
    .B(_0391_),
    .Y(_0081_)
  );
  NOR _0848_ (
    .A(_0081_),
    .B(_0080_),
    .Y(_0082_)
  );
  NOR _0849_ (
    .A(_0082_),
    .B(_0078_),
    .Y(_0083_)
  );
  NAND _0850_ (
    .A(_0083_),
    .B(_0075_),
    .Y(_0214_)
  );
  NOR _0851_ (
    .A(_0035_),
    .B(_0043_),
    .Y(_0085_)
  );
  NAND _0852_ (
    .A(_0085_),
    .B(_0034_),
    .Y(_0086_)
  );
  NOR _0853_ (
    .A(_0086_),
    .B(_0050_),
    .Y(_0087_)
  );
  NOR _0854_ (
    .A(_0087_),
    .B(_0061_),
    .Y(_0088_)
  );
  NOR _0855_ (
    .A(_0088_),
    .B(_0074_),
    .Y(_0032_)
  );
  NOT _0856_ (
    .A(_0066_),
    .Y(_0392_)
  );
  NOT _0857_ (
    .A(_0077_),
    .Y(_0394_)
  );
  NOT _0858_ (
    .A(_0255_),
    .Y(_0089_)
  );
  NAND _0859_ (
    .A(_0076_),
    .B(_0045_),
    .Y(_0090_)
  );
  NOR _0860_ (
    .A(_0090_),
    .B(_0089_),
    .Y(_0396_)
  );
  NOT _0861_ (
    .A(_0256_),
    .Y(_0091_)
  );
  NOR _0862_ (
    .A(_0090_),
    .B(_0091_),
    .Y(_0397_)
  );
  NOT _0863_ (
    .A(_0257_),
    .Y(_0092_)
  );
  NOR _0864_ (
    .A(_0090_),
    .B(_0092_),
    .Y(_0398_)
  );
  NOT _0865_ (
    .A(_0258_),
    .Y(_0093_)
  );
  NOR _0866_ (
    .A(_0090_),
    .B(_0093_),
    .Y(_0399_)
  );
  NOT _0867_ (
    .A(_0259_),
    .Y(_0094_)
  );
  NOR _0868_ (
    .A(_0090_),
    .B(_0094_),
    .Y(_0400_)
  );
  NOT _0869_ (
    .A(_0260_),
    .Y(_0095_)
  );
  NOR _0870_ (
    .A(_0090_),
    .B(_0095_),
    .Y(_0401_)
  );
  NOT _0871_ (
    .A(_0261_),
    .Y(_0096_)
  );
  NOR _0872_ (
    .A(_0090_),
    .B(_0096_),
    .Y(_0402_)
  );
  NOT _0873_ (
    .A(_0262_),
    .Y(_0097_)
  );
  NOR _0874_ (
    .A(_0090_),
    .B(_0097_),
    .Y(_0403_)
  );
  NOT _0875_ (
    .A(_0263_),
    .Y(_0098_)
  );
  NOR _0876_ (
    .A(_0090_),
    .B(_0098_),
    .Y(_0404_)
  );
  NOT _0877_ (
    .A(_0264_),
    .Y(_0099_)
  );
  NOR _0878_ (
    .A(_0090_),
    .B(_0099_),
    .Y(_0405_)
  );
  NOT _0879_ (
    .A(_0265_),
    .Y(_0100_)
  );
  NOR _0880_ (
    .A(_0090_),
    .B(_0100_),
    .Y(_0406_)
  );
  NOT _0881_ (
    .A(_0266_),
    .Y(_0101_)
  );
  NOR _0882_ (
    .A(_0090_),
    .B(_0101_),
    .Y(_0407_)
  );
  NOT _0883_ (
    .A(_0267_),
    .Y(_0102_)
  );
  NOR _0884_ (
    .A(_0090_),
    .B(_0102_),
    .Y(_0408_)
  );
  NOT _0885_ (
    .A(_0268_),
    .Y(_0103_)
  );
  NOR _0886_ (
    .A(_0090_),
    .B(_0103_),
    .Y(_0409_)
  );
  NOT _0887_ (
    .A(_0269_),
    .Y(_0104_)
  );
  NOR _0888_ (
    .A(_0090_),
    .B(_0104_),
    .Y(_0410_)
  );
  NOT _0889_ (
    .A(_0270_),
    .Y(_0105_)
  );
  NOR _0890_ (
    .A(_0090_),
    .B(_0105_),
    .Y(_0411_)
  );
  NOT _0891_ (
    .A(_0271_),
    .Y(_0106_)
  );
  NOR _0892_ (
    .A(_0090_),
    .B(_0106_),
    .Y(_0412_)
  );
  NOT _0893_ (
    .A(_0272_),
    .Y(_0107_)
  );
  NOR _0894_ (
    .A(_0090_),
    .B(_0107_),
    .Y(_0413_)
  );
  NOT _0895_ (
    .A(_0273_),
    .Y(_0109_)
  );
  NOR _0896_ (
    .A(_0090_),
    .B(_0109_),
    .Y(_0414_)
  );
  NOT _0897_ (
    .A(_0274_),
    .Y(_0110_)
  );
  NOR _0898_ (
    .A(_0090_),
    .B(_0110_),
    .Y(_0415_)
  );
  NOT _0899_ (
    .A(_0275_),
    .Y(_0111_)
  );
  NOR _0900_ (
    .A(_0090_),
    .B(_0111_),
    .Y(_0416_)
  );
  NOT _0901_ (
    .A(_0276_),
    .Y(_0113_)
  );
  NOR _0902_ (
    .A(_0090_),
    .B(_0113_),
    .Y(_0417_)
  );
  NOT _0903_ (
    .A(_0277_),
    .Y(_0114_)
  );
  NOR _0904_ (
    .A(_0090_),
    .B(_0114_),
    .Y(_0418_)
  );
  NOT _0905_ (
    .A(_0278_),
    .Y(_0115_)
  );
  NOR _0906_ (
    .A(_0090_),
    .B(_0115_),
    .Y(_0419_)
  );
  NOT _0907_ (
    .A(_0279_),
    .Y(_0116_)
  );
  NOR _0908_ (
    .A(_0090_),
    .B(_0116_),
    .Y(_0420_)
  );
  NOT _0909_ (
    .A(_0280_),
    .Y(_0117_)
  );
  NOR _0910_ (
    .A(_0090_),
    .B(_0117_),
    .Y(_0421_)
  );
  NOT _0911_ (
    .A(_0281_),
    .Y(_0118_)
  );
  NOR _0912_ (
    .A(_0090_),
    .B(_0118_),
    .Y(_0422_)
  );
  NOT _0913_ (
    .A(_0282_),
    .Y(_0120_)
  );
  NOR _0914_ (
    .A(_0090_),
    .B(_0120_),
    .Y(_0423_)
  );
  NOT _0915_ (
    .A(_0283_),
    .Y(_0121_)
  );
  NOR _0916_ (
    .A(_0090_),
    .B(_0121_),
    .Y(_0424_)
  );
  NOT _0917_ (
    .A(_0284_),
    .Y(_0122_)
  );
  NOR _0918_ (
    .A(_0090_),
    .B(_0122_),
    .Y(_0425_)
  );
  NOT _0919_ (
    .A(_0285_),
    .Y(_0123_)
  );
  NOR _0920_ (
    .A(_0090_),
    .B(_0123_),
    .Y(_0426_)
  );
  NOT _0921_ (
    .A(_0286_),
    .Y(_0124_)
  );
  NOR _0922_ (
    .A(_0090_),
    .B(_0124_),
    .Y(_0427_)
  );
  NOT _0923_ (
    .A(_0287_),
    .Y(_0125_)
  );
  NOR _0924_ (
    .A(_0090_),
    .B(_0125_),
    .Y(_0428_)
  );
  NOT _0925_ (
    .A(_0288_),
    .Y(_0126_)
  );
  NOR _0926_ (
    .A(_0090_),
    .B(_0126_),
    .Y(_0429_)
  );
  NOT _0927_ (
    .A(_0289_),
    .Y(_0127_)
  );
  NOR _0928_ (
    .A(_0090_),
    .B(_0127_),
    .Y(_0430_)
  );
  NOT _0929_ (
    .A(_0290_),
    .Y(_0128_)
  );
  NOR _0930_ (
    .A(_0090_),
    .B(_0128_),
    .Y(_0431_)
  );
  NOT _0931_ (
    .A(_0291_),
    .Y(_0129_)
  );
  NOR _0932_ (
    .A(_0090_),
    .B(_0129_),
    .Y(_0432_)
  );
  NOT _0933_ (
    .A(_0292_),
    .Y(_0130_)
  );
  NOR _0934_ (
    .A(_0090_),
    .B(_0130_),
    .Y(_0433_)
  );
  NOT _0935_ (
    .A(_0293_),
    .Y(_0131_)
  );
  NOR _0936_ (
    .A(_0090_),
    .B(_0131_),
    .Y(_0434_)
  );
  NOT _0937_ (
    .A(_0294_),
    .Y(_0132_)
  );
  NOR _0938_ (
    .A(_0090_),
    .B(_0132_),
    .Y(_0435_)
  );
  NOT _0939_ (
    .A(_0295_),
    .Y(_0133_)
  );
  NOR _0940_ (
    .A(_0090_),
    .B(_0133_),
    .Y(_0436_)
  );
  NOT _0941_ (
    .A(_0296_),
    .Y(_0134_)
  );
  NOR _0942_ (
    .A(_0090_),
    .B(_0134_),
    .Y(_0437_)
  );
  NOT _0943_ (
    .A(_0297_),
    .Y(_0135_)
  );
  NOR _0944_ (
    .A(_0090_),
    .B(_0135_),
    .Y(_0438_)
  );
  NOT _0945_ (
    .A(_0298_),
    .Y(_0136_)
  );
  NOR _0946_ (
    .A(_0090_),
    .B(_0136_),
    .Y(_0439_)
  );
  NOT _0947_ (
    .A(_0299_),
    .Y(_0137_)
  );
  NOR _0948_ (
    .A(_0090_),
    .B(_0137_),
    .Y(_0440_)
  );
  NOT _0949_ (
    .A(_0300_),
    .Y(_0138_)
  );
  NOR _0950_ (
    .A(_0090_),
    .B(_0138_),
    .Y(_0441_)
  );
  NOT _0951_ (
    .A(_0301_),
    .Y(_0139_)
  );
  NOR _0952_ (
    .A(_0090_),
    .B(_0139_),
    .Y(_0442_)
  );
  NOT _0953_ (
    .A(_0302_),
    .Y(_0140_)
  );
  NOR _0954_ (
    .A(_0090_),
    .B(_0140_),
    .Y(_0443_)
  );
  NOT _0955_ (
    .A(_0303_),
    .Y(_0141_)
  );
  NOR _0956_ (
    .A(_0090_),
    .B(_0141_),
    .Y(_0444_)
  );
  NOT _0957_ (
    .A(_0304_),
    .Y(_0142_)
  );
  NOR _0958_ (
    .A(_0090_),
    .B(_0142_),
    .Y(_0445_)
  );
  NOT _0959_ (
    .A(_0305_),
    .Y(_0143_)
  );
  NOR _0960_ (
    .A(_0090_),
    .B(_0143_),
    .Y(_0446_)
  );
  NOT _0961_ (
    .A(_0306_),
    .Y(_0144_)
  );
  NOR _0962_ (
    .A(_0090_),
    .B(_0144_),
    .Y(_0447_)
  );
  NOT _0963_ (
    .A(_0307_),
    .Y(_0145_)
  );
  NOR _0964_ (
    .A(_0090_),
    .B(_0145_),
    .Y(_0448_)
  );
  NOT _0965_ (
    .A(_0308_),
    .Y(_0146_)
  );
  NOR _0966_ (
    .A(_0090_),
    .B(_0146_),
    .Y(_0449_)
  );
  NOT _0967_ (
    .A(_0309_),
    .Y(_0147_)
  );
  NOR _0968_ (
    .A(_0090_),
    .B(_0147_),
    .Y(_0450_)
  );
  NOT _0969_ (
    .A(_0310_),
    .Y(_0148_)
  );
  NOR _0970_ (
    .A(_0090_),
    .B(_0148_),
    .Y(_0451_)
  );
  NOT _0971_ (
    .A(_0311_),
    .Y(_0149_)
  );
  NOR _0972_ (
    .A(_0090_),
    .B(_0149_),
    .Y(_0452_)
  );
  NOT _0973_ (
    .A(_0312_),
    .Y(_0150_)
  );
  NOR _0974_ (
    .A(_0090_),
    .B(_0150_),
    .Y(_0453_)
  );
  NOT _0975_ (
    .A(_0313_),
    .Y(_0151_)
  );
  NOR _0976_ (
    .A(_0090_),
    .B(_0151_),
    .Y(_0454_)
  );
  NOT _0977_ (
    .A(_0314_),
    .Y(_0152_)
  );
  NOR _0978_ (
    .A(_0090_),
    .B(_0152_),
    .Y(_0455_)
  );
  NOT _0979_ (
    .A(_0315_),
    .Y(_0153_)
  );
  NOR _0980_ (
    .A(_0090_),
    .B(_0153_),
    .Y(_0456_)
  );
  NOT _0981_ (
    .A(_0316_),
    .Y(_0154_)
  );
  NOR _0982_ (
    .A(_0090_),
    .B(_0154_),
    .Y(_0457_)
  );
  NOT _0983_ (
    .A(_0317_),
    .Y(_0155_)
  );
  NOR _0984_ (
    .A(_0090_),
    .B(_0155_),
    .Y(_0458_)
  );
  NOT _0985_ (
    .A(_0318_),
    .Y(_0156_)
  );
  NOR _0986_ (
    .A(_0090_),
    .B(_0156_),
    .Y(_0459_)
  );
  NOT _0987_ (
    .A(_0319_),
    .Y(_0157_)
  );
  NOR _0988_ (
    .A(_0090_),
    .B(_0157_),
    .Y(_0460_)
  );
  NOT _0989_ (
    .A(_0320_),
    .Y(_0158_)
  );
  NOR _0990_ (
    .A(_0090_),
    .B(_0158_),
    .Y(_0461_)
  );
  NOT _0991_ (
    .A(_0321_),
    .Y(_0159_)
  );
  NOR _0992_ (
    .A(_0090_),
    .B(_0159_),
    .Y(_0462_)
  );
  NOT _0993_ (
    .A(_0322_),
    .Y(_0160_)
  );
  NOR _0994_ (
    .A(_0090_),
    .B(_0160_),
    .Y(_0463_)
  );
  NOT _0995_ (
    .A(_0323_),
    .Y(_0161_)
  );
  NOR _0996_ (
    .A(_0090_),
    .B(_0161_),
    .Y(_0464_)
  );
  NOT _0997_ (
    .A(_0324_),
    .Y(_0162_)
  );
  NOR _0998_ (
    .A(_0090_),
    .B(_0162_),
    .Y(_0465_)
  );
  NOT _0999_ (
    .A(_0325_),
    .Y(_0163_)
  );
  NOR _1000_ (
    .A(_0090_),
    .B(_0163_),
    .Y(_0466_)
  );
  NOT _1001_ (
    .A(_0326_),
    .Y(_0164_)
  );
  NOR _1002_ (
    .A(_0090_),
    .B(_0164_),
    .Y(_0467_)
  );
  NOT _1003_ (
    .A(_0327_),
    .Y(_0165_)
  );
  NOR _1004_ (
    .A(_0090_),
    .B(_0165_),
    .Y(_0468_)
  );
  NOT _1005_ (
    .A(_0328_),
    .Y(_0166_)
  );
  NOR _1006_ (
    .A(_0090_),
    .B(_0166_),
    .Y(_0469_)
  );
  NOT _1007_ (
    .A(_0329_),
    .Y(_0167_)
  );
  NOR _1008_ (
    .A(_0090_),
    .B(_0167_),
    .Y(_0470_)
  );
  NOT _1009_ (
    .A(_0330_),
    .Y(_0168_)
  );
  NOR _1010_ (
    .A(_0090_),
    .B(_0168_),
    .Y(_0471_)
  );
  NOT _1011_ (
    .A(_0331_),
    .Y(_0169_)
  );
  NOR _1012_ (
    .A(_0090_),
    .B(_0169_),
    .Y(_0472_)
  );
  NOT _1013_ (
    .A(_0332_),
    .Y(_0170_)
  );
  NOR _1014_ (
    .A(_0090_),
    .B(_0170_),
    .Y(_0473_)
  );
  NOT _1015_ (
    .A(_0333_),
    .Y(_0171_)
  );
  NOR _1016_ (
    .A(_0090_),
    .B(_0171_),
    .Y(_0474_)
  );
  NOT _1017_ (
    .A(_0334_),
    .Y(_0172_)
  );
  NOR _1018_ (
    .A(_0090_),
    .B(_0172_),
    .Y(_0475_)
  );
  NOT _1019_ (
    .A(_0335_),
    .Y(_0173_)
  );
  NOR _1020_ (
    .A(_0090_),
    .B(_0173_),
    .Y(_0476_)
  );
  NOT _1021_ (
    .A(_0336_),
    .Y(_0174_)
  );
  NOR _1022_ (
    .A(_0090_),
    .B(_0174_),
    .Y(_0477_)
  );
  NOT _1023_ (
    .A(_0337_),
    .Y(_0175_)
  );
  NOR _1024_ (
    .A(_0090_),
    .B(_0175_),
    .Y(_0478_)
  );
  NOT _1025_ (
    .A(_0338_),
    .Y(_0176_)
  );
  NOR _1026_ (
    .A(_0090_),
    .B(_0176_),
    .Y(_0479_)
  );
  NOT _1027_ (
    .A(_0339_),
    .Y(_0177_)
  );
  NOR _1028_ (
    .A(_0090_),
    .B(_0177_),
    .Y(_0480_)
  );
  NOT _1029_ (
    .A(_0340_),
    .Y(_0178_)
  );
  NOR _1030_ (
    .A(_0090_),
    .B(_0178_),
    .Y(_0481_)
  );
  NOT _1031_ (
    .A(_0341_),
    .Y(_0179_)
  );
  NOR _1032_ (
    .A(_0090_),
    .B(_0179_),
    .Y(_0482_)
  );
  NOT _1033_ (
    .A(_0342_),
    .Y(_0180_)
  );
  NOR _1034_ (
    .A(_0090_),
    .B(_0180_),
    .Y(_0483_)
  );
  NOT _1035_ (
    .A(_0343_),
    .Y(_0181_)
  );
  NOR _1036_ (
    .A(_0090_),
    .B(_0181_),
    .Y(_0484_)
  );
  NOT _1037_ (
    .A(_0344_),
    .Y(_0182_)
  );
  NOR _1038_ (
    .A(_0090_),
    .B(_0182_),
    .Y(_0485_)
  );
  NOT _1039_ (
    .A(_0345_),
    .Y(_0183_)
  );
  NOR _1040_ (
    .A(_0090_),
    .B(_0183_),
    .Y(_0486_)
  );
  NOT _1041_ (
    .A(_0346_),
    .Y(_0184_)
  );
  NOR _1042_ (
    .A(_0090_),
    .B(_0184_),
    .Y(_0487_)
  );
  NOT _1043_ (
    .A(_0347_),
    .Y(_0185_)
  );
  NOR _1044_ (
    .A(_0090_),
    .B(_0185_),
    .Y(_0488_)
  );
  NOT _1045_ (
    .A(_0348_),
    .Y(_0186_)
  );
  NOR _1046_ (
    .A(_0090_),
    .B(_0186_),
    .Y(_0489_)
  );
  NOT _1047_ (
    .A(_0349_),
    .Y(_0187_)
  );
  NOR _1048_ (
    .A(_0090_),
    .B(_0187_),
    .Y(_0490_)
  );
  NOT _1049_ (
    .A(_0350_),
    .Y(_0188_)
  );
  NOR _1050_ (
    .A(_0090_),
    .B(_0188_),
    .Y(_0491_)
  );
  NOT _1051_ (
    .A(_0351_),
    .Y(_0189_)
  );
  NOR _1052_ (
    .A(_0090_),
    .B(_0189_),
    .Y(_0492_)
  );
  NOT _1053_ (
    .A(_0352_),
    .Y(_0190_)
  );
  NOR _1054_ (
    .A(_0090_),
    .B(_0190_),
    .Y(_0493_)
  );
  NOT _1055_ (
    .A(_0353_),
    .Y(_0191_)
  );
  NOR _1056_ (
    .A(_0090_),
    .B(_0191_),
    .Y(_0494_)
  );
  NOT _1057_ (
    .A(_0354_),
    .Y(_0192_)
  );
  NOR _1058_ (
    .A(_0090_),
    .B(_0192_),
    .Y(_0495_)
  );
  NOT _1059_ (
    .A(_0355_),
    .Y(_0193_)
  );
  NOR _1060_ (
    .A(_0090_),
    .B(_0193_),
    .Y(_0496_)
  );
  NOT _1061_ (
    .A(_0356_),
    .Y(_0194_)
  );
  NOR _1062_ (
    .A(_0090_),
    .B(_0194_),
    .Y(_0497_)
  );
  NOT _1063_ (
    .A(_0357_),
    .Y(_0195_)
  );
  NOR _1064_ (
    .A(_0090_),
    .B(_0195_),
    .Y(_0498_)
  );
  NOT _1065_ (
    .A(_0358_),
    .Y(_0196_)
  );
  NOR _1066_ (
    .A(_0090_),
    .B(_0196_),
    .Y(_0499_)
  );
  NOT _1067_ (
    .A(_0359_),
    .Y(_0197_)
  );
  NOR _1068_ (
    .A(_0090_),
    .B(_0197_),
    .Y(_0500_)
  );
  NOT _1069_ (
    .A(_0360_),
    .Y(_0198_)
  );
  NOR _1070_ (
    .A(_0090_),
    .B(_0198_),
    .Y(_0501_)
  );
  NOT _1071_ (
    .A(_0361_),
    .Y(_0199_)
  );
  NOR _1072_ (
    .A(_0090_),
    .B(_0199_),
    .Y(_0502_)
  );
  NOT _1073_ (
    .A(_0362_),
    .Y(_0200_)
  );
  NOR _1074_ (
    .A(_0090_),
    .B(_0200_),
    .Y(_0503_)
  );
  NOT _1075_ (
    .A(_0363_),
    .Y(_0201_)
  );
  NOR _1076_ (
    .A(_0090_),
    .B(_0201_),
    .Y(_0504_)
  );
  NOT _1077_ (
    .A(_0364_),
    .Y(_0202_)
  );
  NOR _1078_ (
    .A(_0090_),
    .B(_0202_),
    .Y(_0505_)
  );
  NOT _1079_ (
    .A(_0365_),
    .Y(_0203_)
  );
  NOR _1080_ (
    .A(_0090_),
    .B(_0203_),
    .Y(_0506_)
  );
  NOT _1081_ (
    .A(_0366_),
    .Y(_0204_)
  );
  NOR _1082_ (
    .A(_0090_),
    .B(_0204_),
    .Y(_0507_)
  );
  NOT _1083_ (
    .A(_0367_),
    .Y(_0205_)
  );
  NOR _1084_ (
    .A(_0090_),
    .B(_0205_),
    .Y(_0508_)
  );
  NOT _1085_ (
    .A(_0368_),
    .Y(_0206_)
  );
  NOR _1086_ (
    .A(_0090_),
    .B(_0206_),
    .Y(_0509_)
  );
  NOT _1087_ (
    .A(_0369_),
    .Y(_0207_)
  );
  NOR _1088_ (
    .A(_0090_),
    .B(_0207_),
    .Y(_0510_)
  );
  NOT _1089_ (
    .A(_0370_),
    .Y(_0208_)
  );
  NOR _1090_ (
    .A(_0090_),
    .B(_0208_),
    .Y(_0511_)
  );
  NOT _1091_ (
    .A(_0371_),
    .Y(_0209_)
  );
  NOR _1092_ (
    .A(_0090_),
    .B(_0209_),
    .Y(_0512_)
  );
  NOT _1093_ (
    .A(_0372_),
    .Y(_0210_)
  );
  NOR _1094_ (
    .A(_0090_),
    .B(_0210_),
    .Y(_0513_)
  );
  NOT _1095_ (
    .A(_0373_),
    .Y(_0211_)
  );
  NOR _1096_ (
    .A(_0090_),
    .B(_0211_),
    .Y(_0514_)
  );
  NOT _1097_ (
    .A(_0374_),
    .Y(_0212_)
  );
  NOR _1098_ (
    .A(_0090_),
    .B(_0212_),
    .Y(_0515_)
  );
  NOT _1099_ (
    .A(_0375_),
    .Y(_0213_)
  );
  NOR _1100_ (
    .A(_0090_),
    .B(_0213_),
    .Y(_0516_)
  );
  NOT _1101_ (
    .A(_0376_),
    .Y(_0215_)
  );
  NOR _1102_ (
    .A(_0090_),
    .B(_0215_),
    .Y(_0517_)
  );
  NOT _1103_ (
    .A(_0377_),
    .Y(_0216_)
  );
  NOR _1104_ (
    .A(_0090_),
    .B(_0216_),
    .Y(_0518_)
  );
  NOT _1105_ (
    .A(_0378_),
    .Y(_0217_)
  );
  NOR _1106_ (
    .A(_0090_),
    .B(_0217_),
    .Y(_0519_)
  );
  NOT _1107_ (
    .A(_0379_),
    .Y(_0218_)
  );
  NOR _1108_ (
    .A(_0090_),
    .B(_0218_),
    .Y(_0520_)
  );
  NOT _1109_ (
    .A(_0380_),
    .Y(_0219_)
  );
  NOR _1110_ (
    .A(_0090_),
    .B(_0219_),
    .Y(_0521_)
  );
  NOT _1111_ (
    .A(_0381_),
    .Y(_0220_)
  );
  NOR _1112_ (
    .A(_0090_),
    .B(_0220_),
    .Y(_0522_)
  );
  NOT _1113_ (
    .A(_0382_),
    .Y(_0221_)
  );
  NOR _1114_ (
    .A(_0090_),
    .B(_0221_),
    .Y(_0523_)
  );
  NOT _1115_ (
    .A(_0383_),
    .Y(_0222_)
  );
  NOR _1116_ (
    .A(_0090_),
    .B(_0222_),
    .Y(_0524_)
  );
  NOT _1117_ (
    .A(_0384_),
    .Y(_0223_)
  );
  NOR _1118_ (
    .A(_0090_),
    .B(_0223_),
    .Y(_0525_)
  );
  NOT _1119_ (
    .A(_0385_),
    .Y(_0224_)
  );
  NOR _1120_ (
    .A(_0090_),
    .B(_0224_),
    .Y(_0526_)
  );
  NOT _1121_ (
    .A(_0386_),
    .Y(_0225_)
  );
  NOR _1122_ (
    .A(_0090_),
    .B(_0225_),
    .Y(_0527_)
  );
  NOT _1123_ (
    .A(_0387_),
    .Y(_0226_)
  );
  NOR _1124_ (
    .A(_0090_),
    .B(_0226_),
    .Y(_0528_)
  );
  NOT _1125_ (
    .A(_0388_),
    .Y(_0227_)
  );
  NOR _1126_ (
    .A(_0090_),
    .B(_0227_),
    .Y(_0529_)
  );
  NOT _1127_ (
    .A(_0389_),
    .Y(_0228_)
  );
  NOR _1128_ (
    .A(_0090_),
    .B(_0228_),
    .Y(_0530_)
  );
  NOT _1129_ (
    .A(_0390_),
    .Y(_0229_)
  );
  NOR _1130_ (
    .A(_0090_),
    .B(_0229_),
    .Y(_0531_)
  );
  NOT _1131_ (
    .A(_0090_),
    .Y(_0532_)
  );
  NOR _1132_ (
    .A(_0054_),
    .B(_0034_),
    .Y(_0533_)
  );
  NOT _1133_ (
    .A(_0045_),
    .Y(_0230_)
  );
  NAND _1134_ (
    .A(_0074_),
    .B(_0055_),
    .Y(_0231_)
  );
  NAND _1135_ (
    .A(_0231_),
    .B(_0230_),
    .Y(_0232_)
  );
  NOR _1136_ (
    .A(_0035_),
    .B(_0034_),
    .Y(_0233_)
  );
  NOR _1137_ (
    .A(_0074_),
    .B(_0391_),
    .Y(_0234_)
  );
  NOR _1138_ (
    .A(_0234_),
    .B(_0080_),
    .Y(_0235_)
  );
  NOR _1139_ (
    .A(_0235_),
    .B(_0233_),
    .Y(_0236_)
  );
  NAND _1140_ (
    .A(_0030_),
    .B(_0034_),
    .Y(_0237_)
  );
  NAND _1141_ (
    .A(_0237_),
    .B(_0236_),
    .Y(_0238_)
  );
  NOR _1142_ (
    .A(_0238_),
    .B(_0232_),
    .Y(_0534_)
  );
  NOT _1143_ (
    .A(_0233_),
    .Y(_0239_)
  );
  NAND _1144_ (
    .A(_0076_),
    .B(_0038_),
    .Y(_0240_)
  );
  NAND _1145_ (
    .A(_0240_),
    .B(_0037_),
    .Y(_0241_)
  );
  NAND _1146_ (
    .A(_0241_),
    .B(_0239_),
    .Y(_0242_)
  );
  NOR _1147_ (
    .A(_0063_),
    .B(_0045_),
    .Y(_0243_)
  );
  NOR _1148_ (
    .A(_0036_),
    .B(_0084_),
    .Y(_0244_)
  );
  NOR _1149_ (
    .A(_0244_),
    .B(_0243_),
    .Y(_0245_)
  );
  NOR _1150_ (
    .A(_0245_),
    .B(_0242_),
    .Y(_0535_)
  );
  NAND _1151_ (
    .A(_0230_),
    .B(_0072_),
    .Y(_0246_)
  );
  NOR _1152_ (
    .A(_0076_),
    .B(_0086_),
    .Y(_0247_)
  );
  NOR _1153_ (
    .A(_0247_),
    .B(_0065_),
    .Y(_0248_)
  );
  NAND _1154_ (
    .A(_0248_),
    .B(_0236_),
    .Y(_0249_)
  );
  NOR _1155_ (
    .A(_0249_),
    .B(_0246_),
    .Y(_0536_)
  );
  NOT _1156_ (
    .A(_0063_),
    .Y(_0250_)
  );
  NAND _1157_ (
    .A(_0074_),
    .B(_0045_),
    .Y(_0251_)
  );
  NAND _1158_ (
    .A(_0251_),
    .B(_0250_),
    .Y(_0252_)
  );
  NOR _1159_ (
    .A(_0252_),
    .B(_0242_),
    .Y(_0537_)
  );
  NOT _1160_ (
    .A(_0243_),
    .Y(_0253_)
  );
  NAND _1161_ (
    .A(_0241_),
    .B(_0048_),
    .Y(_0254_)
  );
  NOR _1162_ (
    .A(_0254_),
    .B(_0253_),
    .Y(_0538_)
  );
  NOR _1163_ (
    .A(_0249_),
    .B(_0232_),
    .Y(_0539_)
  );
  BUF _1164_ (
    .A(_0393_),
    .Y(_0395_)
  );
  \$_DLATCH_P_  _1165_ (
    .D(_0001_),
    .E(_0543_),
    .Q(enable_pts)
  );
  \$_DLATCH_P_  _1166_ (
    .D(_0010_),
    .E(_0544_),
    .Q(reset_pts)
  );
  \$_DLATCH_P_  _1167_ (
    .D(_0009_),
    .E(_0545_),
    .Q(enable_stp)
  );
  \$_DLATCH_P_  _1168_ (
    .D(_0004_),
    .E(_0546_),
    .Q(strobe_out)
  );
  \$_DLATCH_P_  _1169_ (
    .D(_0000_),
    .E(_0547_),
    .Q(ack_out)
  );
  \$_DLATCH_P_  _1170_ (
    .D(_0002_),
    .E(_0548_),
    .Q(load_send)
  );
  \$_DLATCH_P_  _1171_ (
    .D(_0003_[0]),
    .E(_0546_),
    .Q(response[0])
  );
  \$_DLATCH_P_  _1172_ (
    .D(_0003_[1]),
    .E(_0546_),
    .Q(response[1])
  );
  \$_DLATCH_P_  _1173_ (
    .D(_0003_[2]),
    .E(_0546_),
    .Q(response[2])
  );
  \$_DLATCH_P_  _1174_ (
    .D(_0003_[3]),
    .E(_0546_),
    .Q(response[3])
  );
  \$_DLATCH_P_  _1175_ (
    .D(_0003_[4]),
    .E(_0546_),
    .Q(response[4])
  );
  \$_DLATCH_P_  _1176_ (
    .D(_0003_[5]),
    .E(_0546_),
    .Q(response[5])
  );
  \$_DLATCH_P_  _1177_ (
    .D(_0003_[6]),
    .E(_0546_),
    .Q(response[6])
  );
  \$_DLATCH_P_  _1178_ (
    .D(_0003_[7]),
    .E(_0546_),
    .Q(response[7])
  );
  \$_DLATCH_P_  _1179_ (
    .D(_0003_[8]),
    .E(_0546_),
    .Q(response[8])
  );
  \$_DLATCH_P_  _1180_ (
    .D(_0003_[9]),
    .E(_0546_),
    .Q(response[9])
  );
  \$_DLATCH_P_  _1181_ (
    .D(_0003_[10]),
    .E(_0546_),
    .Q(response[10])
  );
  \$_DLATCH_P_  _1182_ (
    .D(_0003_[11]),
    .E(_0546_),
    .Q(response[11])
  );
  \$_DLATCH_P_  _1183_ (
    .D(_0003_[12]),
    .E(_0546_),
    .Q(response[12])
  );
  \$_DLATCH_P_  _1184_ (
    .D(_0003_[13]),
    .E(_0546_),
    .Q(response[13])
  );
  \$_DLATCH_P_  _1185_ (
    .D(_0003_[14]),
    .E(_0546_),
    .Q(response[14])
  );
  \$_DLATCH_P_  _1186_ (
    .D(_0003_[15]),
    .E(_0546_),
    .Q(response[15])
  );
  \$_DLATCH_P_  _1187_ (
    .D(_0003_[16]),
    .E(_0546_),
    .Q(response[16])
  );
  \$_DLATCH_P_  _1188_ (
    .D(_0003_[17]),
    .E(_0546_),
    .Q(response[17])
  );
  \$_DLATCH_P_  _1189_ (
    .D(_0003_[18]),
    .E(_0546_),
    .Q(response[18])
  );
  \$_DLATCH_P_  _1190_ (
    .D(_0003_[19]),
    .E(_0546_),
    .Q(response[19])
  );
  \$_DLATCH_P_  _1191_ (
    .D(_0003_[20]),
    .E(_0546_),
    .Q(response[20])
  );
  \$_DLATCH_P_  _1192_ (
    .D(_0003_[21]),
    .E(_0546_),
    .Q(response[21])
  );
  \$_DLATCH_P_  _1193_ (
    .D(_0003_[22]),
    .E(_0546_),
    .Q(response[22])
  );
  \$_DLATCH_P_  _1194_ (
    .D(_0003_[23]),
    .E(_0546_),
    .Q(response[23])
  );
  \$_DLATCH_P_  _1195_ (
    .D(_0003_[24]),
    .E(_0546_),
    .Q(response[24])
  );
  \$_DLATCH_P_  _1196_ (
    .D(_0003_[25]),
    .E(_0546_),
    .Q(response[25])
  );
  \$_DLATCH_P_  _1197_ (
    .D(_0003_[26]),
    .E(_0546_),
    .Q(response[26])
  );
  \$_DLATCH_P_  _1198_ (
    .D(_0003_[27]),
    .E(_0546_),
    .Q(response[27])
  );
  \$_DLATCH_P_  _1199_ (
    .D(_0003_[28]),
    .E(_0546_),
    .Q(response[28])
  );
  \$_DLATCH_P_  _1200_ (
    .D(_0003_[29]),
    .E(_0546_),
    .Q(response[29])
  );
  \$_DLATCH_P_  _1201_ (
    .D(_0003_[30]),
    .E(_0546_),
    .Q(response[30])
  );
  \$_DLATCH_P_  _1202_ (
    .D(_0003_[31]),
    .E(_0546_),
    .Q(response[31])
  );
  \$_DLATCH_P_  _1203_ (
    .D(_0003_[32]),
    .E(_0546_),
    .Q(response[32])
  );
  \$_DLATCH_P_  _1204_ (
    .D(_0003_[33]),
    .E(_0546_),
    .Q(response[33])
  );
  \$_DLATCH_P_  _1205_ (
    .D(_0003_[34]),
    .E(_0546_),
    .Q(response[34])
  );
  \$_DLATCH_P_  _1206_ (
    .D(_0003_[35]),
    .E(_0546_),
    .Q(response[35])
  );
  \$_DLATCH_P_  _1207_ (
    .D(_0003_[36]),
    .E(_0546_),
    .Q(response[36])
  );
  \$_DLATCH_P_  _1208_ (
    .D(_0003_[37]),
    .E(_0546_),
    .Q(response[37])
  );
  \$_DLATCH_P_  _1209_ (
    .D(_0003_[38]),
    .E(_0546_),
    .Q(response[38])
  );
  \$_DLATCH_P_  _1210_ (
    .D(_0003_[39]),
    .E(_0546_),
    .Q(response[39])
  );
  \$_DLATCH_P_  _1211_ (
    .D(_0003_[40]),
    .E(_0546_),
    .Q(response[40])
  );
  \$_DLATCH_P_  _1212_ (
    .D(_0003_[41]),
    .E(_0546_),
    .Q(response[41])
  );
  \$_DLATCH_P_  _1213_ (
    .D(_0003_[42]),
    .E(_0546_),
    .Q(response[42])
  );
  \$_DLATCH_P_  _1214_ (
    .D(_0003_[43]),
    .E(_0546_),
    .Q(response[43])
  );
  \$_DLATCH_P_  _1215_ (
    .D(_0003_[44]),
    .E(_0546_),
    .Q(response[44])
  );
  \$_DLATCH_P_  _1216_ (
    .D(_0003_[45]),
    .E(_0546_),
    .Q(response[45])
  );
  \$_DLATCH_P_  _1217_ (
    .D(_0003_[46]),
    .E(_0546_),
    .Q(response[46])
  );
  \$_DLATCH_P_  _1218_ (
    .D(_0003_[47]),
    .E(_0546_),
    .Q(response[47])
  );
  \$_DLATCH_P_  _1219_ (
    .D(_0003_[48]),
    .E(_0546_),
    .Q(response[48])
  );
  \$_DLATCH_P_  _1220_ (
    .D(_0003_[49]),
    .E(_0546_),
    .Q(response[49])
  );
  \$_DLATCH_P_  _1221_ (
    .D(_0003_[50]),
    .E(_0546_),
    .Q(response[50])
  );
  \$_DLATCH_P_  _1222_ (
    .D(_0003_[51]),
    .E(_0546_),
    .Q(response[51])
  );
  \$_DLATCH_P_  _1223_ (
    .D(_0003_[52]),
    .E(_0546_),
    .Q(response[52])
  );
  \$_DLATCH_P_  _1224_ (
    .D(_0003_[53]),
    .E(_0546_),
    .Q(response[53])
  );
  \$_DLATCH_P_  _1225_ (
    .D(_0003_[54]),
    .E(_0546_),
    .Q(response[54])
  );
  \$_DLATCH_P_  _1226_ (
    .D(_0003_[55]),
    .E(_0546_),
    .Q(response[55])
  );
  \$_DLATCH_P_  _1227_ (
    .D(_0003_[56]),
    .E(_0546_),
    .Q(response[56])
  );
  \$_DLATCH_P_  _1228_ (
    .D(_0003_[57]),
    .E(_0546_),
    .Q(response[57])
  );
  \$_DLATCH_P_  _1229_ (
    .D(_0003_[58]),
    .E(_0546_),
    .Q(response[58])
  );
  \$_DLATCH_P_  _1230_ (
    .D(_0003_[59]),
    .E(_0546_),
    .Q(response[59])
  );
  \$_DLATCH_P_  _1231_ (
    .D(_0003_[60]),
    .E(_0546_),
    .Q(response[60])
  );
  \$_DLATCH_P_  _1232_ (
    .D(_0003_[61]),
    .E(_0546_),
    .Q(response[61])
  );
  \$_DLATCH_P_  _1233_ (
    .D(_0003_[62]),
    .E(_0546_),
    .Q(response[62])
  );
  \$_DLATCH_P_  _1234_ (
    .D(_0003_[63]),
    .E(_0546_),
    .Q(response[63])
  );
  \$_DLATCH_P_  _1235_ (
    .D(_0003_[64]),
    .E(_0546_),
    .Q(response[64])
  );
  \$_DLATCH_P_  _1236_ (
    .D(_0003_[65]),
    .E(_0546_),
    .Q(response[65])
  );
  \$_DLATCH_P_  _1237_ (
    .D(_0003_[66]),
    .E(_0546_),
    .Q(response[66])
  );
  \$_DLATCH_P_  _1238_ (
    .D(_0003_[67]),
    .E(_0546_),
    .Q(response[67])
  );
  \$_DLATCH_P_  _1239_ (
    .D(_0003_[68]),
    .E(_0546_),
    .Q(response[68])
  );
  \$_DLATCH_P_  _1240_ (
    .D(_0003_[69]),
    .E(_0546_),
    .Q(response[69])
  );
  \$_DLATCH_P_  _1241_ (
    .D(_0003_[70]),
    .E(_0546_),
    .Q(response[70])
  );
  \$_DLATCH_P_  _1242_ (
    .D(_0003_[71]),
    .E(_0546_),
    .Q(response[71])
  );
  \$_DLATCH_P_  _1243_ (
    .D(_0003_[72]),
    .E(_0546_),
    .Q(response[72])
  );
  \$_DLATCH_P_  _1244_ (
    .D(_0003_[73]),
    .E(_0546_),
    .Q(response[73])
  );
  \$_DLATCH_P_  _1245_ (
    .D(_0003_[74]),
    .E(_0546_),
    .Q(response[74])
  );
  \$_DLATCH_P_  _1246_ (
    .D(_0003_[75]),
    .E(_0546_),
    .Q(response[75])
  );
  \$_DLATCH_P_  _1247_ (
    .D(_0003_[76]),
    .E(_0546_),
    .Q(response[76])
  );
  \$_DLATCH_P_  _1248_ (
    .D(_0003_[77]),
    .E(_0546_),
    .Q(response[77])
  );
  \$_DLATCH_P_  _1249_ (
    .D(_0003_[78]),
    .E(_0546_),
    .Q(response[78])
  );
  \$_DLATCH_P_  _1250_ (
    .D(_0003_[79]),
    .E(_0546_),
    .Q(response[79])
  );
  \$_DLATCH_P_  _1251_ (
    .D(_0003_[80]),
    .E(_0546_),
    .Q(response[80])
  );
  \$_DLATCH_P_  _1252_ (
    .D(_0003_[81]),
    .E(_0546_),
    .Q(response[81])
  );
  \$_DLATCH_P_  _1253_ (
    .D(_0003_[82]),
    .E(_0546_),
    .Q(response[82])
  );
  \$_DLATCH_P_  _1254_ (
    .D(_0003_[83]),
    .E(_0546_),
    .Q(response[83])
  );
  \$_DLATCH_P_  _1255_ (
    .D(_0003_[84]),
    .E(_0546_),
    .Q(response[84])
  );
  \$_DLATCH_P_  _1256_ (
    .D(_0003_[85]),
    .E(_0546_),
    .Q(response[85])
  );
  \$_DLATCH_P_  _1257_ (
    .D(_0003_[86]),
    .E(_0546_),
    .Q(response[86])
  );
  \$_DLATCH_P_  _1258_ (
    .D(_0003_[87]),
    .E(_0546_),
    .Q(response[87])
  );
  \$_DLATCH_P_  _1259_ (
    .D(_0003_[88]),
    .E(_0546_),
    .Q(response[88])
  );
  \$_DLATCH_P_  _1260_ (
    .D(_0003_[89]),
    .E(_0546_),
    .Q(response[89])
  );
  \$_DLATCH_P_  _1261_ (
    .D(_0003_[90]),
    .E(_0546_),
    .Q(response[90])
  );
  \$_DLATCH_P_  _1262_ (
    .D(_0003_[91]),
    .E(_0546_),
    .Q(response[91])
  );
  \$_DLATCH_P_  _1263_ (
    .D(_0003_[92]),
    .E(_0546_),
    .Q(response[92])
  );
  \$_DLATCH_P_  _1264_ (
    .D(_0003_[93]),
    .E(_0546_),
    .Q(response[93])
  );
  \$_DLATCH_P_  _1265_ (
    .D(_0003_[94]),
    .E(_0546_),
    .Q(response[94])
  );
  \$_DLATCH_P_  _1266_ (
    .D(_0003_[95]),
    .E(_0546_),
    .Q(response[95])
  );
  \$_DLATCH_P_  _1267_ (
    .D(_0003_[96]),
    .E(_0546_),
    .Q(response[96])
  );
  \$_DLATCH_P_  _1268_ (
    .D(_0003_[97]),
    .E(_0546_),
    .Q(response[97])
  );
  \$_DLATCH_P_  _1269_ (
    .D(_0003_[98]),
    .E(_0546_),
    .Q(response[98])
  );
  \$_DLATCH_P_  _1270_ (
    .D(_0003_[99]),
    .E(_0546_),
    .Q(response[99])
  );
  \$_DLATCH_P_  _1271_ (
    .D(_0003_[100]),
    .E(_0546_),
    .Q(response[100])
  );
  \$_DLATCH_P_  _1272_ (
    .D(_0003_[101]),
    .E(_0546_),
    .Q(response[101])
  );
  \$_DLATCH_P_  _1273_ (
    .D(_0003_[102]),
    .E(_0546_),
    .Q(response[102])
  );
  \$_DLATCH_P_  _1274_ (
    .D(_0003_[103]),
    .E(_0546_),
    .Q(response[103])
  );
  \$_DLATCH_P_  _1275_ (
    .D(_0003_[104]),
    .E(_0546_),
    .Q(response[104])
  );
  \$_DLATCH_P_  _1276_ (
    .D(_0003_[105]),
    .E(_0546_),
    .Q(response[105])
  );
  \$_DLATCH_P_  _1277_ (
    .D(_0003_[106]),
    .E(_0546_),
    .Q(response[106])
  );
  \$_DLATCH_P_  _1278_ (
    .D(_0003_[107]),
    .E(_0546_),
    .Q(response[107])
  );
  \$_DLATCH_P_  _1279_ (
    .D(_0003_[108]),
    .E(_0546_),
    .Q(response[108])
  );
  \$_DLATCH_P_  _1280_ (
    .D(_0003_[109]),
    .E(_0546_),
    .Q(response[109])
  );
  \$_DLATCH_P_  _1281_ (
    .D(_0003_[110]),
    .E(_0546_),
    .Q(response[110])
  );
  \$_DLATCH_P_  _1282_ (
    .D(_0003_[111]),
    .E(_0546_),
    .Q(response[111])
  );
  \$_DLATCH_P_  _1283_ (
    .D(_0003_[112]),
    .E(_0546_),
    .Q(response[112])
  );
  \$_DLATCH_P_  _1284_ (
    .D(_0003_[113]),
    .E(_0546_),
    .Q(response[113])
  );
  \$_DLATCH_P_  _1285_ (
    .D(_0003_[114]),
    .E(_0546_),
    .Q(response[114])
  );
  \$_DLATCH_P_  _1286_ (
    .D(_0003_[115]),
    .E(_0546_),
    .Q(response[115])
  );
  \$_DLATCH_P_  _1287_ (
    .D(_0003_[116]),
    .E(_0546_),
    .Q(response[116])
  );
  \$_DLATCH_P_  _1288_ (
    .D(_0003_[117]),
    .E(_0546_),
    .Q(response[117])
  );
  \$_DLATCH_P_  _1289_ (
    .D(_0003_[118]),
    .E(_0546_),
    .Q(response[118])
  );
  \$_DLATCH_P_  _1290_ (
    .D(_0003_[119]),
    .E(_0546_),
    .Q(response[119])
  );
  \$_DLATCH_P_  _1291_ (
    .D(_0003_[120]),
    .E(_0546_),
    .Q(response[120])
  );
  \$_DLATCH_P_  _1292_ (
    .D(_0003_[121]),
    .E(_0546_),
    .Q(response[121])
  );
  \$_DLATCH_P_  _1293_ (
    .D(_0003_[122]),
    .E(_0546_),
    .Q(response[122])
  );
  \$_DLATCH_P_  _1294_ (
    .D(_0003_[123]),
    .E(_0546_),
    .Q(response[123])
  );
  \$_DLATCH_P_  _1295_ (
    .D(_0003_[124]),
    .E(_0546_),
    .Q(response[124])
  );
  \$_DLATCH_P_  _1296_ (
    .D(_0003_[125]),
    .E(_0546_),
    .Q(response[125])
  );
  \$_DLATCH_P_  _1297_ (
    .D(_0003_[126]),
    .E(_0546_),
    .Q(response[126])
  );
  \$_DLATCH_P_  _1298_ (
    .D(_0003_[127]),
    .E(_0546_),
    .Q(response[127])
  );
  \$_DLATCH_P_  _1299_ (
    .D(_0003_[128]),
    .E(_0546_),
    .Q(response[128])
  );
  \$_DLATCH_P_  _1300_ (
    .D(_0003_[129]),
    .E(_0546_),
    .Q(response[129])
  );
  \$_DLATCH_P_  _1301_ (
    .D(_0003_[130]),
    .E(_0546_),
    .Q(response[130])
  );
  \$_DLATCH_P_  _1302_ (
    .D(_0003_[131]),
    .E(_0546_),
    .Q(response[131])
  );
  \$_DLATCH_P_  _1303_ (
    .D(_0003_[132]),
    .E(_0546_),
    .Q(response[132])
  );
  \$_DLATCH_P_  _1304_ (
    .D(_0003_[133]),
    .E(_0546_),
    .Q(response[133])
  );
  \$_DLATCH_P_  _1305_ (
    .D(_0003_[134]),
    .E(_0546_),
    .Q(response[134])
  );
  \$_DLATCH_P_  _1306_ (
    .D(_0003_[135]),
    .E(_0546_),
    .Q(response[135])
  );
  assign reset_stp = reset_pts;
  assign _0540_ = estado[2];
  assign _0541_ = estado[0];
  assign _0542_ = estado[1];
  assign estado[0] = _0028_;
  assign estado[1] = _0214_;
  assign estado[2] = _0032_;
  assign _0033_ = idle_in;
  assign _0084_ = reset_host;
  assign _0108_ = strobe_in;
  assign _0112_ = transmission_complete;
  assign _0119_ = reception_complete;
  assign _0255_ = pad_response[0];
  assign _0256_ = pad_response[1];
  assign _0257_ = pad_response[2];
  assign _0258_ = pad_response[3];
  assign _0259_ = pad_response[4];
  assign _0260_ = pad_response[5];
  assign _0261_ = pad_response[6];
  assign _0262_ = pad_response[7];
  assign _0263_ = pad_response[8];
  assign _0264_ = pad_response[9];
  assign _0265_ = pad_response[10];
  assign _0266_ = pad_response[11];
  assign _0267_ = pad_response[12];
  assign _0268_ = pad_response[13];
  assign _0269_ = pad_response[14];
  assign _0270_ = pad_response[15];
  assign _0271_ = pad_response[16];
  assign _0272_ = pad_response[17];
  assign _0273_ = pad_response[18];
  assign _0274_ = pad_response[19];
  assign _0275_ = pad_response[20];
  assign _0276_ = pad_response[21];
  assign _0277_ = pad_response[22];
  assign _0278_ = pad_response[23];
  assign _0279_ = pad_response[24];
  assign _0280_ = pad_response[25];
  assign _0281_ = pad_response[26];
  assign _0282_ = pad_response[27];
  assign _0283_ = pad_response[28];
  assign _0284_ = pad_response[29];
  assign _0285_ = pad_response[30];
  assign _0286_ = pad_response[31];
  assign _0287_ = pad_response[32];
  assign _0288_ = pad_response[33];
  assign _0289_ = pad_response[34];
  assign _0290_ = pad_response[35];
  assign _0291_ = pad_response[36];
  assign _0292_ = pad_response[37];
  assign _0293_ = pad_response[38];
  assign _0294_ = pad_response[39];
  assign _0295_ = pad_response[40];
  assign _0296_ = pad_response[41];
  assign _0297_ = pad_response[42];
  assign _0298_ = pad_response[43];
  assign _0299_ = pad_response[44];
  assign _0300_ = pad_response[45];
  assign _0301_ = pad_response[46];
  assign _0302_ = pad_response[47];
  assign _0303_ = pad_response[48];
  assign _0304_ = pad_response[49];
  assign _0305_ = pad_response[50];
  assign _0306_ = pad_response[51];
  assign _0307_ = pad_response[52];
  assign _0308_ = pad_response[53];
  assign _0309_ = pad_response[54];
  assign _0310_ = pad_response[55];
  assign _0311_ = pad_response[56];
  assign _0312_ = pad_response[57];
  assign _0313_ = pad_response[58];
  assign _0314_ = pad_response[59];
  assign _0315_ = pad_response[60];
  assign _0316_ = pad_response[61];
  assign _0317_ = pad_response[62];
  assign _0318_ = pad_response[63];
  assign _0319_ = pad_response[64];
  assign _0320_ = pad_response[65];
  assign _0321_ = pad_response[66];
  assign _0322_ = pad_response[67];
  assign _0323_ = pad_response[68];
  assign _0324_ = pad_response[69];
  assign _0325_ = pad_response[70];
  assign _0326_ = pad_response[71];
  assign _0327_ = pad_response[72];
  assign _0328_ = pad_response[73];
  assign _0329_ = pad_response[74];
  assign _0330_ = pad_response[75];
  assign _0331_ = pad_response[76];
  assign _0332_ = pad_response[77];
  assign _0333_ = pad_response[78];
  assign _0334_ = pad_response[79];
  assign _0335_ = pad_response[80];
  assign _0336_ = pad_response[81];
  assign _0337_ = pad_response[82];
  assign _0338_ = pad_response[83];
  assign _0339_ = pad_response[84];
  assign _0340_ = pad_response[85];
  assign _0341_ = pad_response[86];
  assign _0342_ = pad_response[87];
  assign _0343_ = pad_response[88];
  assign _0344_ = pad_response[89];
  assign _0345_ = pad_response[90];
  assign _0346_ = pad_response[91];
  assign _0347_ = pad_response[92];
  assign _0348_ = pad_response[93];
  assign _0349_ = pad_response[94];
  assign _0350_ = pad_response[95];
  assign _0351_ = pad_response[96];
  assign _0352_ = pad_response[97];
  assign _0353_ = pad_response[98];
  assign _0354_ = pad_response[99];
  assign _0355_ = pad_response[100];
  assign _0356_ = pad_response[101];
  assign _0357_ = pad_response[102];
  assign _0358_ = pad_response[103];
  assign _0359_ = pad_response[104];
  assign _0360_ = pad_response[105];
  assign _0361_ = pad_response[106];
  assign _0362_ = pad_response[107];
  assign _0363_ = pad_response[108];
  assign _0364_ = pad_response[109];
  assign _0365_ = pad_response[110];
  assign _0366_ = pad_response[111];
  assign _0367_ = pad_response[112];
  assign _0368_ = pad_response[113];
  assign _0369_ = pad_response[114];
  assign _0370_ = pad_response[115];
  assign _0371_ = pad_response[116];
  assign _0372_ = pad_response[117];
  assign _0373_ = pad_response[118];
  assign _0374_ = pad_response[119];
  assign _0375_ = pad_response[120];
  assign _0376_ = pad_response[121];
  assign _0377_ = pad_response[122];
  assign _0378_ = pad_response[123];
  assign _0379_ = pad_response[124];
  assign _0380_ = pad_response[125];
  assign _0381_ = pad_response[126];
  assign _0382_ = pad_response[127];
  assign _0383_ = pad_response[128];
  assign _0384_ = pad_response[129];
  assign _0385_ = pad_response[130];
  assign _0386_ = pad_response[131];
  assign _0387_ = pad_response[132];
  assign _0388_ = pad_response[133];
  assign _0389_ = pad_response[134];
  assign _0390_ = pad_response[135];
  assign _0391_ = ack_in;
  assign _0010_ = _0392_;
  assign _0001_ = _0393_;
  assign _0009_ = _0394_;
  assign _0002_ = _0395_;
  assign _0003_[0] = _0396_;
  assign _0003_[1] = _0397_;
  assign _0003_[2] = _0398_;
  assign _0003_[3] = _0399_;
  assign _0003_[4] = _0400_;
  assign _0003_[5] = _0401_;
  assign _0003_[6] = _0402_;
  assign _0003_[7] = _0403_;
  assign _0003_[8] = _0404_;
  assign _0003_[9] = _0405_;
  assign _0003_[10] = _0406_;
  assign _0003_[11] = _0407_;
  assign _0003_[12] = _0408_;
  assign _0003_[13] = _0409_;
  assign _0003_[14] = _0410_;
  assign _0003_[15] = _0411_;
  assign _0003_[16] = _0412_;
  assign _0003_[17] = _0413_;
  assign _0003_[18] = _0414_;
  assign _0003_[19] = _0415_;
  assign _0003_[20] = _0416_;
  assign _0003_[21] = _0417_;
  assign _0003_[22] = _0418_;
  assign _0003_[23] = _0419_;
  assign _0003_[24] = _0420_;
  assign _0003_[25] = _0421_;
  assign _0003_[26] = _0422_;
  assign _0003_[27] = _0423_;
  assign _0003_[28] = _0424_;
  assign _0003_[29] = _0425_;
  assign _0003_[30] = _0426_;
  assign _0003_[31] = _0427_;
  assign _0003_[32] = _0428_;
  assign _0003_[33] = _0429_;
  assign _0003_[34] = _0430_;
  assign _0003_[35] = _0431_;
  assign _0003_[36] = _0432_;
  assign _0003_[37] = _0433_;
  assign _0003_[38] = _0434_;
  assign _0003_[39] = _0435_;
  assign _0003_[40] = _0436_;
  assign _0003_[41] = _0437_;
  assign _0003_[42] = _0438_;
  assign _0003_[43] = _0439_;
  assign _0003_[44] = _0440_;
  assign _0003_[45] = _0441_;
  assign _0003_[46] = _0442_;
  assign _0003_[47] = _0443_;
  assign _0003_[48] = _0444_;
  assign _0003_[49] = _0445_;
  assign _0003_[50] = _0446_;
  assign _0003_[51] = _0447_;
  assign _0003_[52] = _0448_;
  assign _0003_[53] = _0449_;
  assign _0003_[54] = _0450_;
  assign _0003_[55] = _0451_;
  assign _0003_[56] = _0452_;
  assign _0003_[57] = _0453_;
  assign _0003_[58] = _0454_;
  assign _0003_[59] = _0455_;
  assign _0003_[60] = _0456_;
  assign _0003_[61] = _0457_;
  assign _0003_[62] = _0458_;
  assign _0003_[63] = _0459_;
  assign _0003_[64] = _0460_;
  assign _0003_[65] = _0461_;
  assign _0003_[66] = _0462_;
  assign _0003_[67] = _0463_;
  assign _0003_[68] = _0464_;
  assign _0003_[69] = _0465_;
  assign _0003_[70] = _0466_;
  assign _0003_[71] = _0467_;
  assign _0003_[72] = _0468_;
  assign _0003_[73] = _0469_;
  assign _0003_[74] = _0470_;
  assign _0003_[75] = _0471_;
  assign _0003_[76] = _0472_;
  assign _0003_[77] = _0473_;
  assign _0003_[78] = _0474_;
  assign _0003_[79] = _0475_;
  assign _0003_[80] = _0476_;
  assign _0003_[81] = _0477_;
  assign _0003_[82] = _0478_;
  assign _0003_[83] = _0479_;
  assign _0003_[84] = _0480_;
  assign _0003_[85] = _0481_;
  assign _0003_[86] = _0482_;
  assign _0003_[87] = _0483_;
  assign _0003_[88] = _0484_;
  assign _0003_[89] = _0485_;
  assign _0003_[90] = _0486_;
  assign _0003_[91] = _0487_;
  assign _0003_[92] = _0488_;
  assign _0003_[93] = _0489_;
  assign _0003_[94] = _0490_;
  assign _0003_[95] = _0491_;
  assign _0003_[96] = _0492_;
  assign _0003_[97] = _0493_;
  assign _0003_[98] = _0494_;
  assign _0003_[99] = _0495_;
  assign _0003_[100] = _0496_;
  assign _0003_[101] = _0497_;
  assign _0003_[102] = _0498_;
  assign _0003_[103] = _0499_;
  assign _0003_[104] = _0500_;
  assign _0003_[105] = _0501_;
  assign _0003_[106] = _0502_;
  assign _0003_[107] = _0503_;
  assign _0003_[108] = _0504_;
  assign _0003_[109] = _0505_;
  assign _0003_[110] = _0506_;
  assign _0003_[111] = _0507_;
  assign _0003_[112] = _0508_;
  assign _0003_[113] = _0509_;
  assign _0003_[114] = _0510_;
  assign _0003_[115] = _0511_;
  assign _0003_[116] = _0512_;
  assign _0003_[117] = _0513_;
  assign _0003_[118] = _0514_;
  assign _0003_[119] = _0515_;
  assign _0003_[120] = _0516_;
  assign _0003_[121] = _0517_;
  assign _0003_[122] = _0518_;
  assign _0003_[123] = _0519_;
  assign _0003_[124] = _0520_;
  assign _0003_[125] = _0521_;
  assign _0003_[126] = _0522_;
  assign _0003_[127] = _0523_;
  assign _0003_[128] = _0524_;
  assign _0003_[129] = _0525_;
  assign _0003_[130] = _0526_;
  assign _0003_[131] = _0527_;
  assign _0003_[132] = _0528_;
  assign _0003_[133] = _0529_;
  assign _0003_[134] = _0530_;
  assign _0003_[135] = _0531_;
  assign _0004_ = _0532_;
  assign _0000_ = _0533_;
  assign _0543_ = _0534_;
  assign _0544_ = _0535_;
  assign _0545_ = _0536_;
  assign _0546_ = _0537_;
  assign _0547_ = _0538_;
  assign _0548_ = _0539_;
  assign _0029_ = _0540_;
  assign _0030_ = _0541_;
  assign _0031_ = _0542_;
endmodule

module parallel_to_serial(enable_pts, reset_pts, clk_SD, signal_in, signal_out, parallel_complete);
  wire [8:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire [31:0] _254_;
  wire [3:0] _255_;
  wire [1:0] _256_;
  wire _257_;
  wire [8:0] _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire [8:0] _262_;
  wire [8:0] _263_;
  wire _264_;
  wire [31:0] _265_;
  wire [31:0] _266_;
  wire [167:0] _267_;
  wire [167:0] _268_;
  wire [167:0] _269_;
  wire [167:0] _270_;
  wire [167:0] _271_;
  wire [167:0] _272_;
  wire [167:0] _273_;
  wire [167:0] _274_;
  wire [167:0] _275_;
  wire [167:0] _276_;
  wire [167:0] _277_;
  wire [167:0] _278_;
  wire [167:0] _279_;
  wire [31:0] _280_;
  wire [31:0] _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire [31:0] _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  input clk_SD;
  wire [8:0] contador;
  input enable_pts;
  output parallel_complete;
  input reset_pts;
  input [39:0] signal_in;
  output signal_out;
  NOT _297_ (
    .A(_084_),
    .Y(_205_)
  );
  NOR _298_ (
    .A(_095_),
    .B(_205_),
    .Y(_206_)
  );
  NOR _299_ (
    .A(_190_),
    .B(_189_),
    .Y(_208_)
  );
  NAND _300_ (
    .A(_208_),
    .B(_192_),
    .Y(_209_)
  );
  NOT _301_ (
    .A(_191_),
    .Y(_210_)
  );
  NOR _302_ (
    .A(_210_),
    .B(_188_),
    .Y(_212_)
  );
  NOT _303_ (
    .A(_212_),
    .Y(_214_)
  );
  NOR _304_ (
    .A(_200_),
    .B(_005_),
    .Y(_215_)
  );
  NOR _305_ (
    .A(_045_),
    .B(_211_),
    .Y(_217_)
  );
  NAND _306_ (
    .A(_217_),
    .B(_215_),
    .Y(_218_)
  );
  NOR _307_ (
    .A(_218_),
    .B(_214_),
    .Y(_220_)
  );
  NOT _308_ (
    .A(_220_),
    .Y(_221_)
  );
  NOR _309_ (
    .A(_221_),
    .B(_209_),
    .Y(_223_)
  );
  NAND _310_ (
    .A(_223_),
    .B(_095_),
    .Y(_224_)
  );
  NOT _311_ (
    .A(_224_),
    .Y(_226_)
  );
  NOR _312_ (
    .A(_226_),
    .B(_206_),
    .Y(_227_)
  );
  NOR _313_ (
    .A(_227_),
    .B(_126_),
    .Y(_137_)
  );
  NOR _314_ (
    .A(_226_),
    .B(_126_),
    .Y(_229_)
  );
  NOT _315_ (
    .A(_229_),
    .Y(_231_)
  );
  NOT _316_ (
    .A(_095_),
    .Y(_232_)
  );
  NOT _317_ (
    .A(_189_),
    .Y(_234_)
  );
  NAND _318_ (
    .A(_234_),
    .B(_232_),
    .Y(_235_)
  );
  NAND _319_ (
    .A(_189_),
    .B(_095_),
    .Y(_237_)
  );
  NAND _320_ (
    .A(_237_),
    .B(_235_),
    .Y(_238_)
  );
  NOR _321_ (
    .A(_238_),
    .B(_231_),
    .Y(_193_)
  );
  NOT _322_ (
    .A(_190_),
    .Y(_240_)
  );
  NOR _323_ (
    .A(_237_),
    .B(_240_),
    .Y(_242_)
  );
  NOT _324_ (
    .A(_126_),
    .Y(_243_)
  );
  NAND _325_ (
    .A(_237_),
    .B(_240_),
    .Y(_245_)
  );
  NAND _326_ (
    .A(_245_),
    .B(_243_),
    .Y(_246_)
  );
  NOR _327_ (
    .A(_246_),
    .B(_242_),
    .Y(_194_)
  );
  NOR _328_ (
    .A(_242_),
    .B(_005_),
    .Y(_248_)
  );
  NAND _329_ (
    .A(_190_),
    .B(_189_),
    .Y(_250_)
  );
  NAND _330_ (
    .A(_095_),
    .B(_005_),
    .Y(_251_)
  );
  NOR _331_ (
    .A(_251_),
    .B(_250_),
    .Y(_253_)
  );
  NOT _332_ (
    .A(_253_),
    .Y(_006_)
  );
  NAND _333_ (
    .A(_006_),
    .B(_243_),
    .Y(_008_)
  );
  NOR _334_ (
    .A(_008_),
    .B(_248_),
    .Y(_195_)
  );
  NAND _335_ (
    .A(_006_),
    .B(_210_),
    .Y(_010_)
  );
  NOR _336_ (
    .A(_006_),
    .B(_210_),
    .Y(_011_)
  );
  NOT _337_ (
    .A(_011_),
    .Y(_013_)
  );
  NAND _338_ (
    .A(_013_),
    .B(_010_),
    .Y(_014_)
  );
  NOR _339_ (
    .A(_014_),
    .B(_231_),
    .Y(_196_)
  );
  NOR _340_ (
    .A(_011_),
    .B(_188_),
    .Y(_016_)
  );
  NOT _341_ (
    .A(_188_),
    .Y(_018_)
  );
  NOR _342_ (
    .A(_210_),
    .B(_018_),
    .Y(_019_)
  );
  NAND _343_ (
    .A(_019_),
    .B(_253_),
    .Y(_021_)
  );
  NAND _344_ (
    .A(_021_),
    .B(_243_),
    .Y(_022_)
  );
  NOR _345_ (
    .A(_022_),
    .B(_016_),
    .Y(_197_)
  );
  NOT _346_ (
    .A(_192_),
    .Y(_024_)
  );
  NAND _347_ (
    .A(_021_),
    .B(_024_),
    .Y(_026_)
  );
  NOR _348_ (
    .A(_021_),
    .B(_024_),
    .Y(_027_)
  );
  NOT _349_ (
    .A(_027_),
    .Y(_029_)
  );
  NAND _350_ (
    .A(_029_),
    .B(_026_),
    .Y(_030_)
  );
  NOR _351_ (
    .A(_030_),
    .B(_231_),
    .Y(_198_)
  );
  NAND _352_ (
    .A(_027_),
    .B(_200_),
    .Y(_032_)
  );
  NOT _353_ (
    .A(_200_),
    .Y(_034_)
  );
  NAND _354_ (
    .A(_029_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _355_ (
    .A(_035_),
    .B(_032_),
    .Y(_037_)
  );
  NOR _356_ (
    .A(_037_),
    .B(_126_),
    .Y(_199_)
  );
  NOT _357_ (
    .A(_211_),
    .Y(_039_)
  );
  NOR _358_ (
    .A(_032_),
    .B(_039_),
    .Y(_040_)
  );
  NAND _359_ (
    .A(_032_),
    .B(_039_),
    .Y(_042_)
  );
  NAND _360_ (
    .A(_042_),
    .B(_243_),
    .Y(_043_)
  );
  NOR _361_ (
    .A(_043_),
    .B(_040_),
    .Y(_201_)
  );
  NOT _362_ (
    .A(_045_),
    .Y(_046_)
  );
  NOR _363_ (
    .A(_040_),
    .B(_046_),
    .Y(_048_)
  );
  NOT _364_ (
    .A(_040_),
    .Y(_049_)
  );
  NOR _365_ (
    .A(_049_),
    .B(_045_),
    .Y(_051_)
  );
  NOR _366_ (
    .A(_051_),
    .B(_048_),
    .Y(_052_)
  );
  NOR _367_ (
    .A(_052_),
    .B(_126_),
    .Y(_202_)
  );
  NOR _368_ (
    .A(_191_),
    .B(_188_),
    .Y(_054_)
  );
  NOR _369_ (
    .A(_054_),
    .B(_024_),
    .Y(_056_)
  );
  NAND _370_ (
    .A(_054_),
    .B(_024_),
    .Y(_057_)
  );
  NOT _371_ (
    .A(_057_),
    .Y(_059_)
  );
  NOR _372_ (
    .A(_059_),
    .B(_056_),
    .Y(_060_)
  );
  NAND _373_ (
    .A(_054_),
    .B(_213_),
    .Y(_062_)
  );
  NOR _374_ (
    .A(_191_),
    .B(_018_),
    .Y(_063_)
  );
  NAND _375_ (
    .A(_063_),
    .B(_009_),
    .Y(_065_)
  );
  NAND _376_ (
    .A(_065_),
    .B(_062_),
    .Y(_066_)
  );
  NAND _377_ (
    .A(_212_),
    .B(_031_),
    .Y(_068_)
  );
  NAND _378_ (
    .A(_019_),
    .B(_236_),
    .Y(_069_)
  );
  NAND _379_ (
    .A(_069_),
    .B(_068_),
    .Y(_071_)
  );
  NOR _380_ (
    .A(_071_),
    .B(_066_),
    .Y(_072_)
  );
  NAND _381_ (
    .A(_072_),
    .B(_060_),
    .Y(_073_)
  );
  NOT _382_ (
    .A(_005_),
    .Y(_074_)
  );
  NOR _383_ (
    .A(_060_),
    .B(_053_),
    .Y(_075_)
  );
  NOR _384_ (
    .A(_075_),
    .B(_074_),
    .Y(_076_)
  );
  NAND _385_ (
    .A(_076_),
    .B(_073_),
    .Y(_077_)
  );
  NOT _386_ (
    .A(_056_),
    .Y(_078_)
  );
  NAND _387_ (
    .A(_057_),
    .B(_078_),
    .Y(_079_)
  );
  NAND _388_ (
    .A(_019_),
    .B(_247_),
    .Y(_080_)
  );
  NAND _389_ (
    .A(_063_),
    .B(_020_),
    .Y(_081_)
  );
  NAND _390_ (
    .A(_081_),
    .B(_080_),
    .Y(_082_)
  );
  NAND _391_ (
    .A(_212_),
    .B(_041_),
    .Y(_083_)
  );
  NAND _392_ (
    .A(_054_),
    .B(_225_),
    .Y(_085_)
  );
  NAND _393_ (
    .A(_085_),
    .B(_083_),
    .Y(_086_)
  );
  NOR _394_ (
    .A(_086_),
    .B(_082_),
    .Y(_087_)
  );
  NOR _395_ (
    .A(_087_),
    .B(_079_),
    .Y(_088_)
  );
  NOT _396_ (
    .A(_064_),
    .Y(_089_)
  );
  NOR _397_ (
    .A(_060_),
    .B(_089_),
    .Y(_090_)
  );
  NOR _398_ (
    .A(_090_),
    .B(_088_),
    .Y(_091_)
  );
  NOR _399_ (
    .A(_091_),
    .B(_005_),
    .Y(_092_)
  );
  NOR _400_ (
    .A(_092_),
    .B(_240_),
    .Y(_093_)
  );
  NAND _401_ (
    .A(_093_),
    .B(_077_),
    .Y(_094_)
  );
  NAND _402_ (
    .A(_039_),
    .B(_034_),
    .Y(_096_)
  );
  NOR _403_ (
    .A(_056_),
    .B(_096_),
    .Y(_097_)
  );
  NAND _404_ (
    .A(_097_),
    .B(_094_),
    .Y(_098_)
  );
  NAND _405_ (
    .A(_019_),
    .B(_241_),
    .Y(_099_)
  );
  NAND _406_ (
    .A(_054_),
    .B(_219_),
    .Y(_100_)
  );
  NAND _407_ (
    .A(_100_),
    .B(_099_),
    .Y(_101_)
  );
  NAND _408_ (
    .A(_212_),
    .B(_036_),
    .Y(_102_)
  );
  NAND _409_ (
    .A(_063_),
    .B(_015_),
    .Y(_103_)
  );
  NAND _410_ (
    .A(_103_),
    .B(_102_),
    .Y(_104_)
  );
  NOR _411_ (
    .A(_104_),
    .B(_101_),
    .Y(_105_)
  );
  NAND _412_ (
    .A(_105_),
    .B(_060_),
    .Y(_106_)
  );
  NOR _413_ (
    .A(_060_),
    .B(_058_),
    .Y(_107_)
  );
  NOR _414_ (
    .A(_107_),
    .B(_074_),
    .Y(_108_)
  );
  NAND _415_ (
    .A(_108_),
    .B(_106_),
    .Y(_109_)
  );
  NAND _416_ (
    .A(_019_),
    .B(_252_),
    .Y(_110_)
  );
  NAND _417_ (
    .A(_054_),
    .B(_230_),
    .Y(_111_)
  );
  NAND _418_ (
    .A(_111_),
    .B(_110_),
    .Y(_112_)
  );
  NAND _419_ (
    .A(_212_),
    .B(_047_),
    .Y(_113_)
  );
  NAND _420_ (
    .A(_063_),
    .B(_025_),
    .Y(_114_)
  );
  NAND _421_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _422_ (
    .A(_115_),
    .B(_112_),
    .Y(_116_)
  );
  NAND _423_ (
    .A(_116_),
    .B(_060_),
    .Y(_117_)
  );
  NOT _424_ (
    .A(_070_),
    .Y(_118_)
  );
  NAND _425_ (
    .A(_079_),
    .B(_118_),
    .Y(_119_)
  );
  NAND _426_ (
    .A(_119_),
    .B(_117_),
    .Y(_120_)
  );
  NOR _427_ (
    .A(_120_),
    .B(_005_),
    .Y(_121_)
  );
  NOR _428_ (
    .A(_121_),
    .B(_190_),
    .Y(_122_)
  );
  NAND _429_ (
    .A(_122_),
    .B(_109_),
    .Y(_123_)
  );
  NAND _430_ (
    .A(_123_),
    .B(_234_),
    .Y(_124_)
  );
  NOR _431_ (
    .A(_124_),
    .B(_098_),
    .Y(_125_)
  );
  NAND _432_ (
    .A(_212_),
    .B(_038_),
    .Y(_127_)
  );
  NAND _433_ (
    .A(_063_),
    .B(_017_),
    .Y(_128_)
  );
  NAND _434_ (
    .A(_054_),
    .B(_222_),
    .Y(_129_)
  );
  NAND _435_ (
    .A(_129_),
    .B(_128_),
    .Y(_130_)
  );
  NAND _436_ (
    .A(_019_),
    .B(_244_),
    .Y(_131_)
  );
  NAND _437_ (
    .A(_131_),
    .B(_074_),
    .Y(_132_)
  );
  NOR _438_ (
    .A(_132_),
    .B(_130_),
    .Y(_133_)
  );
  NAND _439_ (
    .A(_133_),
    .B(_127_),
    .Y(_134_)
  );
  NAND _440_ (
    .A(_063_),
    .B(_007_),
    .Y(_135_)
  );
  NAND _441_ (
    .A(_135_),
    .B(_005_),
    .Y(_136_)
  );
  NAND _442_ (
    .A(_019_),
    .B(_233_),
    .Y(_138_)
  );
  NOT _443_ (
    .A(_028_),
    .Y(_139_)
  );
  NOR _444_ (
    .A(_214_),
    .B(_139_),
    .Y(_140_)
  );
  NOT _445_ (
    .A(_207_),
    .Y(_141_)
  );
  NOT _446_ (
    .A(_054_),
    .Y(_142_)
  );
  NOR _447_ (
    .A(_142_),
    .B(_141_),
    .Y(_143_)
  );
  NOR _448_ (
    .A(_143_),
    .B(_140_),
    .Y(_144_)
  );
  NAND _449_ (
    .A(_144_),
    .B(_138_),
    .Y(_145_)
  );
  NOR _450_ (
    .A(_145_),
    .B(_136_),
    .Y(_146_)
  );
  NOR _451_ (
    .A(_146_),
    .B(_240_),
    .Y(_147_)
  );
  NAND _452_ (
    .A(_147_),
    .B(_134_),
    .Y(_148_)
  );
  NAND _453_ (
    .A(_063_),
    .B(_012_),
    .Y(_149_)
  );
  NAND _454_ (
    .A(_054_),
    .B(_216_),
    .Y(_150_)
  );
  NAND _455_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NAND _456_ (
    .A(_019_),
    .B(_239_),
    .Y(_152_)
  );
  NAND _457_ (
    .A(_212_),
    .B(_033_),
    .Y(_153_)
  );
  NAND _458_ (
    .A(_153_),
    .B(_152_),
    .Y(_154_)
  );
  NOR _459_ (
    .A(_154_),
    .B(_151_),
    .Y(_155_)
  );
  NOR _460_ (
    .A(_155_),
    .B(_074_),
    .Y(_156_)
  );
  NAND _461_ (
    .A(_054_),
    .B(_228_),
    .Y(_157_)
  );
  NAND _462_ (
    .A(_019_),
    .B(_249_),
    .Y(_158_)
  );
  NAND _463_ (
    .A(_158_),
    .B(_157_),
    .Y(_159_)
  );
  NAND _464_ (
    .A(_212_),
    .B(_044_),
    .Y(_160_)
  );
  NAND _465_ (
    .A(_063_),
    .B(_023_),
    .Y(_161_)
  );
  NAND _466_ (
    .A(_161_),
    .B(_160_),
    .Y(_162_)
  );
  NOR _467_ (
    .A(_162_),
    .B(_159_),
    .Y(_163_)
  );
  NOR _468_ (
    .A(_163_),
    .B(_005_),
    .Y(_164_)
  );
  NOR _469_ (
    .A(_164_),
    .B(_156_),
    .Y(_165_)
  );
  NOR _470_ (
    .A(_165_),
    .B(_190_),
    .Y(_166_)
  );
  NOR _471_ (
    .A(_166_),
    .B(_079_),
    .Y(_167_)
  );
  NAND _472_ (
    .A(_167_),
    .B(_148_),
    .Y(_168_)
  );
  NOT _473_ (
    .A(_067_),
    .Y(_169_)
  );
  NOR _474_ (
    .A(_169_),
    .B(_005_),
    .Y(_170_)
  );
  NOT _475_ (
    .A(_055_),
    .Y(_171_)
  );
  NOR _476_ (
    .A(_171_),
    .B(_074_),
    .Y(_172_)
  );
  NOR _477_ (
    .A(_172_),
    .B(_170_),
    .Y(_173_)
  );
  NOR _478_ (
    .A(_173_),
    .B(_190_),
    .Y(_174_)
  );
  NAND _479_ (
    .A(_061_),
    .B(_074_),
    .Y(_175_)
  );
  NAND _480_ (
    .A(_050_),
    .B(_005_),
    .Y(_176_)
  );
  NAND _481_ (
    .A(_176_),
    .B(_175_),
    .Y(_177_)
  );
  NAND _482_ (
    .A(_177_),
    .B(_190_),
    .Y(_178_)
  );
  NAND _483_ (
    .A(_178_),
    .B(_059_),
    .Y(_179_)
  );
  NOR _484_ (
    .A(_179_),
    .B(_174_),
    .Y(_180_)
  );
  NAND _485_ (
    .A(_097_),
    .B(_189_),
    .Y(_181_)
  );
  NOR _486_ (
    .A(_181_),
    .B(_180_),
    .Y(_182_)
  );
  NAND _487_ (
    .A(_182_),
    .B(_168_),
    .Y(_183_)
  );
  NAND _488_ (
    .A(_223_),
    .B(_204_),
    .Y(_184_)
  );
  NAND _489_ (
    .A(_184_),
    .B(_183_),
    .Y(_185_)
  );
  NOR _490_ (
    .A(_185_),
    .B(_125_),
    .Y(_186_)
  );
  NAND _491_ (
    .A(_243_),
    .B(_095_),
    .Y(_187_)
  );
  NOR _492_ (
    .A(_187_),
    .B(_186_),
    .Y(_203_)
  );
  DFF _493_ (
    .C(clk_SD),
    .D(_002_),
    .Q(signal_out)
  );
  DFF _494_ (
    .C(clk_SD),
    .D(_001_),
    .Q(parallel_complete)
  );
  DFF _495_ (
    .C(clk_SD),
    .D(_000_[0]),
    .Q(contador[0])
  );
  DFF _496_ (
    .C(clk_SD),
    .D(_000_[1]),
    .Q(contador[1])
  );
  DFF _497_ (
    .C(clk_SD),
    .D(_000_[2]),
    .Q(contador[2])
  );
  DFF _498_ (
    .C(clk_SD),
    .D(_000_[3]),
    .Q(contador[3])
  );
  DFF _499_ (
    .C(clk_SD),
    .D(_000_[4]),
    .Q(contador[4])
  );
  DFF _500_ (
    .C(clk_SD),
    .D(_000_[5]),
    .Q(contador[5])
  );
  DFF _501_ (
    .C(clk_SD),
    .D(_000_[6]),
    .Q(contador[6])
  );
  DFF _502_ (
    .C(clk_SD),
    .D(_000_[7]),
    .Q(contador[7])
  );
  DFF _503_ (
    .C(clk_SD),
    .D(_000_[8]),
    .Q(contador[8])
  );
  assign _005_ = contador[2];
  assign _188_ = contador[4];
  assign _200_ = contador[6];
  assign _211_ = contador[7];
  assign _045_ = contador[8];
  assign _084_ = parallel_complete;
  assign _095_ = enable_pts;
  assign _126_ = reset_pts;
  assign _001_ = _137_;
  assign _189_ = contador[0];
  assign _190_ = contador[1];
  assign _191_ = contador[3];
  assign _192_ = contador[5];
  assign _000_[0] = _193_;
  assign _000_[1] = _194_;
  assign _000_[2] = _195_;
  assign _000_[3] = _196_;
  assign _000_[4] = _197_;
  assign _000_[5] = _198_;
  assign _000_[6] = _199_;
  assign _000_[7] = _201_;
  assign _000_[8] = _202_;
  assign _002_ = _203_;
  assign _204_ = signal_out;
  assign _207_ = signal_in[0];
  assign _213_ = signal_in[1];
  assign _216_ = signal_in[2];
  assign _219_ = signal_in[3];
  assign _222_ = signal_in[4];
  assign _225_ = signal_in[5];
  assign _228_ = signal_in[6];
  assign _230_ = signal_in[7];
  assign _233_ = signal_in[8];
  assign _236_ = signal_in[9];
  assign _239_ = signal_in[10];
  assign _241_ = signal_in[11];
  assign _244_ = signal_in[12];
  assign _247_ = signal_in[13];
  assign _249_ = signal_in[14];
  assign _252_ = signal_in[15];
  assign _007_ = signal_in[16];
  assign _009_ = signal_in[17];
  assign _012_ = signal_in[18];
  assign _015_ = signal_in[19];
  assign _017_ = signal_in[20];
  assign _020_ = signal_in[21];
  assign _023_ = signal_in[22];
  assign _025_ = signal_in[23];
  assign _028_ = signal_in[24];
  assign _031_ = signal_in[25];
  assign _033_ = signal_in[26];
  assign _036_ = signal_in[27];
  assign _038_ = signal_in[28];
  assign _041_ = signal_in[29];
  assign _044_ = signal_in[30];
  assign _047_ = signal_in[31];
  assign _050_ = signal_in[32];
  assign _053_ = signal_in[33];
  assign _055_ = signal_in[34];
  assign _058_ = signal_in[35];
  assign _061_ = signal_in[36];
  assign _064_ = signal_in[37];
  assign _067_ = signal_in[38];
  assign _070_ = signal_in[39];
endmodule

module serial_to_parallel(command, signal_in, enable_stp, reset_stp, clk_SD, signal_out, serial_complete);
  wire [8:0] _0000_;
  wire _0001_;
  wire [135:0] _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire [31:0] _0497_;
  wire [3:0] _0498_;
  wire [1:0] _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire [8:0] _0636_;
  wire [8:0] _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire [31:0] _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  input clk_SD;
  input [39:0] command;
  wire [8:0] contador;
  input enable_stp;
  input reset_stp;
  output serial_complete;
  input signal_in;
  output [135:0] signal_out;
  NOT _0673_ (
    .A(_0054_),
    .Y(_0147_)
  );
  NOT _0674_ (
    .A(_0076_),
    .Y(_0148_)
  );
  NAND _0675_ (
    .A(_0148_),
    .B(_0061_),
    .Y(_0150_)
  );
  NOR _0676_ (
    .A(_0150_),
    .B(_0147_),
    .Y(_0083_)
  );
  NOT _0677_ (
    .A(_0105_),
    .Y(_0152_)
  );
  NOR _0678_ (
    .A(_0150_),
    .B(_0152_),
    .Y(_0120_)
  );
  NOT _0679_ (
    .A(_0091_),
    .Y(_0157_)
  );
  NOR _0680_ (
    .A(_0150_),
    .B(_0157_),
    .Y(_0127_)
  );
  NOT _0681_ (
    .A(_0203_),
    .Y(_0159_)
  );
  NOR _0682_ (
    .A(_0150_),
    .B(_0159_),
    .Y(_0190_)
  );
  NOT _0683_ (
    .A(_0154_),
    .Y(_0161_)
  );
  NOR _0684_ (
    .A(_0150_),
    .B(_0161_),
    .Y(_0216_)
  );
  NOT _0685_ (
    .A(_0253_),
    .Y(_0164_)
  );
  NOR _0686_ (
    .A(_0150_),
    .B(_0164_),
    .Y(_0240_)
  );
  NOT _0687_ (
    .A(_0291_),
    .Y(_0166_)
  );
  NOR _0688_ (
    .A(_0150_),
    .B(_0166_),
    .Y(_0278_)
  );
  NOT _0689_ (
    .A(_0135_),
    .Y(_0168_)
  );
  NOR _0690_ (
    .A(_0150_),
    .B(_0168_),
    .Y(_0303_)
  );
  NOT _0691_ (
    .A(_0314_),
    .Y(_0171_)
  );
  NOR _0692_ (
    .A(_0150_),
    .B(_0171_),
    .Y(_0327_)
  );
  NOT _0693_ (
    .A(_0355_),
    .Y(_0173_)
  );
  NOR _0694_ (
    .A(_0150_),
    .B(_0173_),
    .Y(_0349_)
  );
  NOT _0695_ (
    .A(_0361_),
    .Y(_0175_)
  );
  NOR _0696_ (
    .A(_0150_),
    .B(_0175_),
    .Y(_0383_)
  );
  NOT _0697_ (
    .A(_0372_),
    .Y(_0178_)
  );
  NOR _0698_ (
    .A(_0150_),
    .B(_0178_),
    .Y(_0389_)
  );
  NOT _0699_ (
    .A(_0437_),
    .Y(_0180_)
  );
  NOR _0700_ (
    .A(_0150_),
    .B(_0180_),
    .Y(_0400_)
  );
  NOT _0701_ (
    .A(_0406_),
    .Y(_0182_)
  );
  NOR _0702_ (
    .A(_0150_),
    .B(_0182_),
    .Y(_0426_)
  );
  NOT _0703_ (
    .A(_0464_),
    .Y(_0185_)
  );
  NOR _0704_ (
    .A(_0150_),
    .B(_0185_),
    .Y(_0454_)
  );
  NOT _0705_ (
    .A(_0474_),
    .Y(_0187_)
  );
  NOR _0706_ (
    .A(_0150_),
    .B(_0187_),
    .Y(_0473_)
  );
  NOT _0707_ (
    .A(_0478_),
    .Y(_0189_)
  );
  NOR _0708_ (
    .A(_0150_),
    .B(_0189_),
    .Y(_0477_)
  );
  NOT _0709_ (
    .A(_0475_),
    .Y(_0193_)
  );
  NOR _0710_ (
    .A(_0150_),
    .B(_0193_),
    .Y(_0479_)
  );
  NOT _0711_ (
    .A(_0481_),
    .Y(_0195_)
  );
  NOR _0712_ (
    .A(_0150_),
    .B(_0195_),
    .Y(_0480_)
  );
  NOT _0713_ (
    .A(_0483_),
    .Y(_0197_)
  );
  NOR _0714_ (
    .A(_0150_),
    .B(_0197_),
    .Y(_0482_)
  );
  NOT _0715_ (
    .A(_0484_),
    .Y(_0200_)
  );
  NOR _0716_ (
    .A(_0150_),
    .B(_0200_),
    .Y(_0485_)
  );
  NOT _0717_ (
    .A(_0487_),
    .Y(_0202_)
  );
  NOR _0718_ (
    .A(_0150_),
    .B(_0202_),
    .Y(_0486_)
  );
  NOT _0719_ (
    .A(_0489_),
    .Y(_0205_)
  );
  NOR _0720_ (
    .A(_0150_),
    .B(_0205_),
    .Y(_0488_)
  );
  NOT _0721_ (
    .A(_0491_),
    .Y(_0208_)
  );
  NOR _0722_ (
    .A(_0150_),
    .B(_0208_),
    .Y(_0490_)
  );
  NOT _0723_ (
    .A(_0493_),
    .Y(_0210_)
  );
  NOR _0724_ (
    .A(_0150_),
    .B(_0210_),
    .Y(_0492_)
  );
  NOT _0725_ (
    .A(_0495_),
    .Y(_0212_)
  );
  NOR _0726_ (
    .A(_0150_),
    .B(_0212_),
    .Y(_0494_)
  );
  NOT _0727_ (
    .A(_0008_),
    .Y(_0215_)
  );
  NOR _0728_ (
    .A(_0150_),
    .B(_0215_),
    .Y(_0496_)
  );
  NOT _0729_ (
    .A(_0009_),
    .Y(_0218_)
  );
  NOR _0730_ (
    .A(_0150_),
    .B(_0218_),
    .Y(_0005_)
  );
  NOT _0731_ (
    .A(_0014_),
    .Y(_0220_)
  );
  NOR _0732_ (
    .A(_0150_),
    .B(_0220_),
    .Y(_0007_)
  );
  NOT _0733_ (
    .A(_0011_),
    .Y(_0223_)
  );
  NOR _0734_ (
    .A(_0150_),
    .B(_0223_),
    .Y(_0010_)
  );
  NOT _0735_ (
    .A(_0013_),
    .Y(_0225_)
  );
  NOR _0736_ (
    .A(_0150_),
    .B(_0225_),
    .Y(_0012_)
  );
  NOT _0737_ (
    .A(_0006_),
    .Y(_0227_)
  );
  NOR _0738_ (
    .A(_0150_),
    .B(_0227_),
    .Y(_0015_)
  );
  NOT _0739_ (
    .A(_0019_),
    .Y(_0230_)
  );
  NOR _0740_ (
    .A(_0150_),
    .B(_0230_),
    .Y(_0016_)
  );
  NOT _0741_ (
    .A(_0018_),
    .Y(_0232_)
  );
  NOR _0742_ (
    .A(_0150_),
    .B(_0232_),
    .Y(_0017_)
  );
  NOT _0743_ (
    .A(_0027_),
    .Y(_0234_)
  );
  NOR _0744_ (
    .A(_0150_),
    .B(_0234_),
    .Y(_0021_)
  );
  NOT _0745_ (
    .A(_0023_),
    .Y(_0237_)
  );
  NOR _0746_ (
    .A(_0150_),
    .B(_0237_),
    .Y(_0022_)
  );
  NOT _0747_ (
    .A(_0026_),
    .Y(_0239_)
  );
  NOR _0748_ (
    .A(_0150_),
    .B(_0239_),
    .Y(_0024_)
  );
  NOT _0749_ (
    .A(_0028_),
    .Y(_0242_)
  );
  NOR _0750_ (
    .A(_0150_),
    .B(_0242_),
    .Y(_0029_)
  );
  NOT _0751_ (
    .A(_0020_),
    .Y(_0245_)
  );
  NOR _0752_ (
    .A(_0150_),
    .B(_0245_),
    .Y(_0030_)
  );
  NOT _0753_ (
    .A(_0031_),
    .Y(_0247_)
  );
  NOR _0754_ (
    .A(_0150_),
    .B(_0247_),
    .Y(_0032_)
  );
  NOT _0755_ (
    .A(_0033_),
    .Y(_0249_)
  );
  NOR _0756_ (
    .A(_0150_),
    .B(_0249_),
    .Y(_0034_)
  );
  NOT _0757_ (
    .A(_0035_),
    .Y(_0252_)
  );
  NOR _0758_ (
    .A(_0150_),
    .B(_0252_),
    .Y(_0036_)
  );
  NOT _0759_ (
    .A(_0037_),
    .Y(_0255_)
  );
  NOR _0760_ (
    .A(_0150_),
    .B(_0255_),
    .Y(_0038_)
  );
  NOT _0761_ (
    .A(_0039_),
    .Y(_0257_)
  );
  NOR _0762_ (
    .A(_0150_),
    .B(_0257_),
    .Y(_0040_)
  );
  NOT _0763_ (
    .A(_0041_),
    .Y(_0260_)
  );
  NOR _0764_ (
    .A(_0150_),
    .B(_0260_),
    .Y(_0042_)
  );
  NOT _0765_ (
    .A(_0043_),
    .Y(_0262_)
  );
  NOR _0766_ (
    .A(_0150_),
    .B(_0262_),
    .Y(_0044_)
  );
  NOT _0767_ (
    .A(_0045_),
    .Y(_0264_)
  );
  NOR _0768_ (
    .A(_0150_),
    .B(_0264_),
    .Y(_0046_)
  );
  NOT _0769_ (
    .A(_0047_),
    .Y(_0267_)
  );
  NOR _0770_ (
    .A(_0150_),
    .B(_0267_),
    .Y(_0048_)
  );
  NOT _0771_ (
    .A(_0049_),
    .Y(_0269_)
  );
  NOR _0772_ (
    .A(_0150_),
    .B(_0269_),
    .Y(_0050_)
  );
  NOT _0773_ (
    .A(_0051_),
    .Y(_0271_)
  );
  NOR _0774_ (
    .A(_0150_),
    .B(_0271_),
    .Y(_0052_)
  );
  NOT _0775_ (
    .A(_0053_),
    .Y(_0274_)
  );
  NOR _0776_ (
    .A(_0150_),
    .B(_0274_),
    .Y(_0055_)
  );
  NOT _0777_ (
    .A(_0056_),
    .Y(_0276_)
  );
  NOR _0778_ (
    .A(_0150_),
    .B(_0276_),
    .Y(_0057_)
  );
  NOT _0779_ (
    .A(_0058_),
    .Y(_0280_)
  );
  NOR _0780_ (
    .A(_0150_),
    .B(_0280_),
    .Y(_0059_)
  );
  NOT _0781_ (
    .A(_0060_),
    .Y(_0283_)
  );
  NOR _0782_ (
    .A(_0150_),
    .B(_0283_),
    .Y(_0062_)
  );
  NOT _0783_ (
    .A(_0063_),
    .Y(_0285_)
  );
  NOR _0784_ (
    .A(_0150_),
    .B(_0285_),
    .Y(_0064_)
  );
  NOT _0785_ (
    .A(_0065_),
    .Y(_0287_)
  );
  NOR _0786_ (
    .A(_0150_),
    .B(_0287_),
    .Y(_0066_)
  );
  NOT _0787_ (
    .A(_0067_),
    .Y(_0290_)
  );
  NOR _0788_ (
    .A(_0150_),
    .B(_0290_),
    .Y(_0068_)
  );
  NOT _0789_ (
    .A(_0069_),
    .Y(_0293_)
  );
  NOR _0790_ (
    .A(_0150_),
    .B(_0293_),
    .Y(_0070_)
  );
  NOT _0791_ (
    .A(_0071_),
    .Y(_0295_)
  );
  NOR _0792_ (
    .A(_0150_),
    .B(_0295_),
    .Y(_0072_)
  );
  NOT _0793_ (
    .A(_0073_),
    .Y(_0298_)
  );
  NOR _0794_ (
    .A(_0150_),
    .B(_0298_),
    .Y(_0074_)
  );
  NOT _0795_ (
    .A(_0075_),
    .Y(_0300_)
  );
  NOR _0796_ (
    .A(_0150_),
    .B(_0300_),
    .Y(_0077_)
  );
  NOT _0797_ (
    .A(_0078_),
    .Y(_0302_)
  );
  NOR _0798_ (
    .A(_0150_),
    .B(_0302_),
    .Y(_0079_)
  );
  NOT _0799_ (
    .A(_0080_),
    .Y(_0306_)
  );
  NOR _0800_ (
    .A(_0150_),
    .B(_0306_),
    .Y(_0081_)
  );
  NOT _0801_ (
    .A(_0082_),
    .Y(_0308_)
  );
  NOR _0802_ (
    .A(_0150_),
    .B(_0308_),
    .Y(_0084_)
  );
  NOT _0803_ (
    .A(_0085_),
    .Y(_0310_)
  );
  NOR _0804_ (
    .A(_0150_),
    .B(_0310_),
    .Y(_0086_)
  );
  NOT _0805_ (
    .A(_0087_),
    .Y(_0312_)
  );
  NOR _0806_ (
    .A(_0150_),
    .B(_0312_),
    .Y(_0088_)
  );
  NOT _0807_ (
    .A(_0089_),
    .Y(_0313_)
  );
  NOR _0808_ (
    .A(_0150_),
    .B(_0313_),
    .Y(_0090_)
  );
  NOT _0809_ (
    .A(_0092_),
    .Y(_0315_)
  );
  NOR _0810_ (
    .A(_0150_),
    .B(_0315_),
    .Y(_0093_)
  );
  NOT _0811_ (
    .A(_0094_),
    .Y(_0316_)
  );
  NOR _0812_ (
    .A(_0150_),
    .B(_0316_),
    .Y(_0095_)
  );
  NOT _0813_ (
    .A(_0096_),
    .Y(_0317_)
  );
  NOR _0814_ (
    .A(_0150_),
    .B(_0317_),
    .Y(_0097_)
  );
  NOT _0815_ (
    .A(_0098_),
    .Y(_0318_)
  );
  NOR _0816_ (
    .A(_0150_),
    .B(_0318_),
    .Y(_0099_)
  );
  NOT _0817_ (
    .A(_0100_),
    .Y(_0319_)
  );
  NOR _0818_ (
    .A(_0150_),
    .B(_0319_),
    .Y(_0101_)
  );
  NOT _0819_ (
    .A(_0102_),
    .Y(_0320_)
  );
  NOR _0820_ (
    .A(_0150_),
    .B(_0320_),
    .Y(_0103_)
  );
  NOT _0821_ (
    .A(_0104_),
    .Y(_0321_)
  );
  NOR _0822_ (
    .A(_0150_),
    .B(_0321_),
    .Y(_0106_)
  );
  NOT _0823_ (
    .A(_0107_),
    .Y(_0323_)
  );
  NOR _0824_ (
    .A(_0150_),
    .B(_0323_),
    .Y(_0108_)
  );
  NOT _0825_ (
    .A(_0109_),
    .Y(_0325_)
  );
  NOR _0826_ (
    .A(_0150_),
    .B(_0325_),
    .Y(_0110_)
  );
  NOT _0827_ (
    .A(_0111_),
    .Y(_0326_)
  );
  NOR _0828_ (
    .A(_0150_),
    .B(_0326_),
    .Y(_0112_)
  );
  NOT _0829_ (
    .A(_0113_),
    .Y(_0328_)
  );
  NOR _0830_ (
    .A(_0150_),
    .B(_0328_),
    .Y(_0114_)
  );
  NOT _0831_ (
    .A(_0115_),
    .Y(_0329_)
  );
  NOR _0832_ (
    .A(_0150_),
    .B(_0329_),
    .Y(_0116_)
  );
  NOT _0833_ (
    .A(_0117_),
    .Y(_0330_)
  );
  NOR _0834_ (
    .A(_0150_),
    .B(_0330_),
    .Y(_0118_)
  );
  NOT _0835_ (
    .A(_0119_),
    .Y(_0333_)
  );
  NOR _0836_ (
    .A(_0150_),
    .B(_0333_),
    .Y(_0121_)
  );
  NOT _0837_ (
    .A(_0122_),
    .Y(_0336_)
  );
  NOR _0838_ (
    .A(_0150_),
    .B(_0336_),
    .Y(_0123_)
  );
  NOT _0839_ (
    .A(_0124_),
    .Y(_0339_)
  );
  NOR _0840_ (
    .A(_0150_),
    .B(_0339_),
    .Y(_0125_)
  );
  NOT _0841_ (
    .A(_0126_),
    .Y(_0342_)
  );
  NOR _0842_ (
    .A(_0150_),
    .B(_0342_),
    .Y(_0128_)
  );
  NOT _0843_ (
    .A(_0129_),
    .Y(_0345_)
  );
  NOR _0844_ (
    .A(_0150_),
    .B(_0345_),
    .Y(_0130_)
  );
  NOT _0845_ (
    .A(_0131_),
    .Y(_0347_)
  );
  NOR _0846_ (
    .A(_0150_),
    .B(_0347_),
    .Y(_0132_)
  );
  NOT _0847_ (
    .A(_0133_),
    .Y(_0348_)
  );
  NOR _0848_ (
    .A(_0150_),
    .B(_0348_),
    .Y(_0134_)
  );
  NOT _0849_ (
    .A(_0136_),
    .Y(_0350_)
  );
  NOR _0850_ (
    .A(_0150_),
    .B(_0350_),
    .Y(_0137_)
  );
  NOT _0851_ (
    .A(_0138_),
    .Y(_0351_)
  );
  NOR _0852_ (
    .A(_0150_),
    .B(_0351_),
    .Y(_0139_)
  );
  NOT _0853_ (
    .A(_0140_),
    .Y(_0352_)
  );
  NOR _0854_ (
    .A(_0150_),
    .B(_0352_),
    .Y(_0141_)
  );
  NOT _0855_ (
    .A(_0142_),
    .Y(_0353_)
  );
  NOR _0856_ (
    .A(_0150_),
    .B(_0353_),
    .Y(_0143_)
  );
  NOT _0857_ (
    .A(_0144_),
    .Y(_0354_)
  );
  NOR _0858_ (
    .A(_0150_),
    .B(_0354_),
    .Y(_0145_)
  );
  NOT _0859_ (
    .A(_0146_),
    .Y(_0356_)
  );
  NOR _0860_ (
    .A(_0150_),
    .B(_0356_),
    .Y(_0149_)
  );
  NOT _0861_ (
    .A(_0151_),
    .Y(_0357_)
  );
  NOR _0862_ (
    .A(_0150_),
    .B(_0357_),
    .Y(_0155_)
  );
  NOT _0863_ (
    .A(_0156_),
    .Y(_0358_)
  );
  NOR _0864_ (
    .A(_0150_),
    .B(_0358_),
    .Y(_0158_)
  );
  NOT _0865_ (
    .A(_0160_),
    .Y(_0359_)
  );
  NOR _0866_ (
    .A(_0150_),
    .B(_0359_),
    .Y(_0162_)
  );
  NOT _0867_ (
    .A(_0163_),
    .Y(_0360_)
  );
  NOR _0868_ (
    .A(_0150_),
    .B(_0360_),
    .Y(_0165_)
  );
  NOT _0869_ (
    .A(_0167_),
    .Y(_0362_)
  );
  NOR _0870_ (
    .A(_0150_),
    .B(_0362_),
    .Y(_0169_)
  );
  NOT _0871_ (
    .A(_0170_),
    .Y(_0363_)
  );
  NOR _0872_ (
    .A(_0150_),
    .B(_0363_),
    .Y(_0172_)
  );
  NOT _0873_ (
    .A(_0174_),
    .Y(_0364_)
  );
  NOR _0874_ (
    .A(_0150_),
    .B(_0364_),
    .Y(_0176_)
  );
  NOT _0875_ (
    .A(_0177_),
    .Y(_0365_)
  );
  NOR _0876_ (
    .A(_0150_),
    .B(_0365_),
    .Y(_0179_)
  );
  NOT _0877_ (
    .A(_0181_),
    .Y(_0366_)
  );
  NOR _0878_ (
    .A(_0150_),
    .B(_0366_),
    .Y(_0183_)
  );
  NOT _0879_ (
    .A(_0184_),
    .Y(_0367_)
  );
  NOR _0880_ (
    .A(_0150_),
    .B(_0367_),
    .Y(_0186_)
  );
  NOT _0881_ (
    .A(_0188_),
    .Y(_0368_)
  );
  NOR _0882_ (
    .A(_0150_),
    .B(_0368_),
    .Y(_0191_)
  );
  NOT _0883_ (
    .A(_0192_),
    .Y(_0369_)
  );
  NOR _0884_ (
    .A(_0150_),
    .B(_0369_),
    .Y(_0194_)
  );
  NOT _0885_ (
    .A(_0196_),
    .Y(_0370_)
  );
  NOR _0886_ (
    .A(_0150_),
    .B(_0370_),
    .Y(_0198_)
  );
  NOT _0887_ (
    .A(_0199_),
    .Y(_0371_)
  );
  NOR _0888_ (
    .A(_0150_),
    .B(_0371_),
    .Y(_0201_)
  );
  NOT _0889_ (
    .A(_0204_),
    .Y(_0373_)
  );
  NOR _0890_ (
    .A(_0150_),
    .B(_0373_),
    .Y(_0206_)
  );
  NOT _0891_ (
    .A(_0207_),
    .Y(_0374_)
  );
  NOR _0892_ (
    .A(_0150_),
    .B(_0374_),
    .Y(_0209_)
  );
  NOT _0893_ (
    .A(_0211_),
    .Y(_0375_)
  );
  NOR _0894_ (
    .A(_0150_),
    .B(_0375_),
    .Y(_0213_)
  );
  NOT _0895_ (
    .A(_0214_),
    .Y(_0376_)
  );
  NOR _0896_ (
    .A(_0150_),
    .B(_0376_),
    .Y(_0217_)
  );
  NOT _0897_ (
    .A(_0219_),
    .Y(_0377_)
  );
  NOR _0898_ (
    .A(_0150_),
    .B(_0377_),
    .Y(_0221_)
  );
  NOT _0899_ (
    .A(_0222_),
    .Y(_0378_)
  );
  NOR _0900_ (
    .A(_0150_),
    .B(_0378_),
    .Y(_0224_)
  );
  NOT _0901_ (
    .A(_0226_),
    .Y(_0379_)
  );
  NOR _0902_ (
    .A(_0150_),
    .B(_0379_),
    .Y(_0228_)
  );
  NOT _0903_ (
    .A(_0229_),
    .Y(_0380_)
  );
  NOR _0904_ (
    .A(_0150_),
    .B(_0380_),
    .Y(_0231_)
  );
  NOT _0905_ (
    .A(_0233_),
    .Y(_0381_)
  );
  NOR _0906_ (
    .A(_0150_),
    .B(_0381_),
    .Y(_0235_)
  );
  NOT _0907_ (
    .A(_0236_),
    .Y(_0382_)
  );
  NOR _0908_ (
    .A(_0150_),
    .B(_0382_),
    .Y(_0238_)
  );
  NOT _0909_ (
    .A(_0241_),
    .Y(_0384_)
  );
  NOR _0910_ (
    .A(_0150_),
    .B(_0384_),
    .Y(_0243_)
  );
  NOT _0911_ (
    .A(_0244_),
    .Y(_0385_)
  );
  NOR _0912_ (
    .A(_0150_),
    .B(_0385_),
    .Y(_0246_)
  );
  NOT _0913_ (
    .A(_0248_),
    .Y(_0386_)
  );
  NOR _0914_ (
    .A(_0150_),
    .B(_0386_),
    .Y(_0250_)
  );
  NOT _0915_ (
    .A(_0251_),
    .Y(_0387_)
  );
  NOR _0916_ (
    .A(_0150_),
    .B(_0387_),
    .Y(_0254_)
  );
  NOT _0917_ (
    .A(_0256_),
    .Y(_0388_)
  );
  NOR _0918_ (
    .A(_0150_),
    .B(_0388_),
    .Y(_0258_)
  );
  NOT _0919_ (
    .A(_0259_),
    .Y(_0390_)
  );
  NOR _0920_ (
    .A(_0150_),
    .B(_0390_),
    .Y(_0261_)
  );
  NOT _0921_ (
    .A(_0263_),
    .Y(_0391_)
  );
  NOR _0922_ (
    .A(_0150_),
    .B(_0391_),
    .Y(_0265_)
  );
  NOT _0923_ (
    .A(_0266_),
    .Y(_0392_)
  );
  NOR _0924_ (
    .A(_0150_),
    .B(_0392_),
    .Y(_0268_)
  );
  NOT _0925_ (
    .A(_0270_),
    .Y(_0393_)
  );
  NOR _0926_ (
    .A(_0150_),
    .B(_0393_),
    .Y(_0272_)
  );
  NOT _0927_ (
    .A(_0273_),
    .Y(_0394_)
  );
  NOR _0928_ (
    .A(_0150_),
    .B(_0394_),
    .Y(_0275_)
  );
  NOT _0929_ (
    .A(_0279_),
    .Y(_0395_)
  );
  NOR _0930_ (
    .A(_0150_),
    .B(_0395_),
    .Y(_0281_)
  );
  NOT _0931_ (
    .A(_0282_),
    .Y(_0396_)
  );
  NOR _0932_ (
    .A(_0150_),
    .B(_0396_),
    .Y(_0284_)
  );
  NOT _0933_ (
    .A(_0286_),
    .Y(_0397_)
  );
  NOR _0934_ (
    .A(_0150_),
    .B(_0397_),
    .Y(_0288_)
  );
  NOT _0935_ (
    .A(_0289_),
    .Y(_0398_)
  );
  NOR _0936_ (
    .A(_0150_),
    .B(_0398_),
    .Y(_0292_)
  );
  NOT _0937_ (
    .A(_0294_),
    .Y(_0399_)
  );
  NOR _0938_ (
    .A(_0150_),
    .B(_0399_),
    .Y(_0296_)
  );
  NOT _0939_ (
    .A(_0297_),
    .Y(_0401_)
  );
  NOR _0940_ (
    .A(_0150_),
    .B(_0401_),
    .Y(_0299_)
  );
  NOT _0941_ (
    .A(_0301_),
    .Y(_0402_)
  );
  NOR _0942_ (
    .A(_0150_),
    .B(_0402_),
    .Y(_0304_)
  );
  NOT _0943_ (
    .A(_0305_),
    .Y(_0403_)
  );
  NOR _0944_ (
    .A(_0150_),
    .B(_0403_),
    .Y(_0307_)
  );
  NOT _0945_ (
    .A(_0309_),
    .Y(_0404_)
  );
  NOR _0946_ (
    .A(_0150_),
    .B(_0404_),
    .Y(_0311_)
  );
  NOR _0947_ (
    .A(_0324_),
    .B(_0322_),
    .Y(_0405_)
  );
  NOT _0948_ (
    .A(_0061_),
    .Y(_0407_)
  );
  NOR _0949_ (
    .A(_0407_),
    .B(_0025_),
    .Y(_0408_)
  );
  NAND _0950_ (
    .A(_0408_),
    .B(_0405_),
    .Y(_0409_)
  );
  NOT _0951_ (
    .A(_0153_),
    .Y(_0410_)
  );
  NOT _0952_ (
    .A(_0277_),
    .Y(_0411_)
  );
  NAND _0953_ (
    .A(_0411_),
    .B(_0410_),
    .Y(_0412_)
  );
  NOT _0954_ (
    .A(_0436_),
    .Y(_0413_)
  );
  NOT _0955_ (
    .A(_0476_),
    .Y(_0414_)
  );
  NAND _0956_ (
    .A(_0414_),
    .B(_0413_),
    .Y(_0415_)
  );
  NOR _0957_ (
    .A(_0415_),
    .B(_0412_),
    .Y(_0416_)
  );
  NOR _0958_ (
    .A(_0004_),
    .B(_0003_),
    .Y(_0417_)
  );
  NAND _0959_ (
    .A(_0417_),
    .B(_0416_),
    .Y(_0418_)
  );
  NOR _0960_ (
    .A(_0418_),
    .B(_0409_),
    .Y(_0419_)
  );
  NOT _0961_ (
    .A(_0322_),
    .Y(_0420_)
  );
  NAND _0962_ (
    .A(_0420_),
    .B(_0407_),
    .Y(_0421_)
  );
  NOR _0963_ (
    .A(_0420_),
    .B(_0407_),
    .Y(_0422_)
  );
  NOR _0964_ (
    .A(_0422_),
    .B(_0076_),
    .Y(_0423_)
  );
  NAND _0965_ (
    .A(_0423_),
    .B(_0421_),
    .Y(_0424_)
  );
  NOR _0966_ (
    .A(_0424_),
    .B(_0419_),
    .Y(_0331_)
  );
  NAND _0967_ (
    .A(_0324_),
    .B(_0322_),
    .Y(_0425_)
  );
  NOR _0968_ (
    .A(_0425_),
    .B(_0407_),
    .Y(_0427_)
  );
  NOT _0969_ (
    .A(_0324_),
    .Y(_0428_)
  );
  NOT _0970_ (
    .A(_0422_),
    .Y(_0429_)
  );
  NAND _0971_ (
    .A(_0429_),
    .B(_0428_),
    .Y(_0430_)
  );
  NAND _0972_ (
    .A(_0430_),
    .B(_0148_),
    .Y(_0431_)
  );
  NOR _0973_ (
    .A(_0431_),
    .B(_0427_),
    .Y(_0332_)
  );
  NOT _0974_ (
    .A(_0003_),
    .Y(_0432_)
  );
  NOT _0975_ (
    .A(_0427_),
    .Y(_0433_)
  );
  NOR _0976_ (
    .A(_0433_),
    .B(_0432_),
    .Y(_0434_)
  );
  NAND _0977_ (
    .A(_0433_),
    .B(_0432_),
    .Y(_0435_)
  );
  NAND _0978_ (
    .A(_0435_),
    .B(_0148_),
    .Y(_0438_)
  );
  NOR _0979_ (
    .A(_0438_),
    .B(_0434_),
    .Y(_0334_)
  );
  NOR _0980_ (
    .A(_0434_),
    .B(_0004_),
    .Y(_0439_)
  );
  NOT _0981_ (
    .A(_0004_),
    .Y(_0440_)
  );
  NOR _0982_ (
    .A(_0440_),
    .B(_0432_),
    .Y(_0441_)
  );
  NAND _0983_ (
    .A(_0441_),
    .B(_0427_),
    .Y(_0442_)
  );
  NAND _0984_ (
    .A(_0442_),
    .B(_0148_),
    .Y(_0443_)
  );
  NOR _0985_ (
    .A(_0443_),
    .B(_0439_),
    .Y(_0335_)
  );
  NAND _0986_ (
    .A(_0442_),
    .B(_0410_),
    .Y(_0444_)
  );
  NAND _0987_ (
    .A(_0004_),
    .B(_0003_),
    .Y(_0445_)
  );
  NOR _0988_ (
    .A(_0445_),
    .B(_0410_),
    .Y(_0446_)
  );
  NAND _0989_ (
    .A(_0446_),
    .B(_0427_),
    .Y(_0447_)
  );
  NAND _0990_ (
    .A(_0447_),
    .B(_0444_),
    .Y(_0448_)
  );
  NOR _0991_ (
    .A(_0448_),
    .B(_0076_),
    .Y(_0337_)
  );
  NOR _0992_ (
    .A(_0442_),
    .B(_0410_),
    .Y(_0449_)
  );
  NOR _0993_ (
    .A(_0449_),
    .B(_0277_),
    .Y(_0450_)
  );
  NAND _0994_ (
    .A(_0449_),
    .B(_0277_),
    .Y(_0451_)
  );
  NAND _0995_ (
    .A(_0451_),
    .B(_0148_),
    .Y(_0452_)
  );
  NOR _0996_ (
    .A(_0452_),
    .B(_0450_),
    .Y(_0338_)
  );
  NOR _0997_ (
    .A(_0425_),
    .B(_0411_),
    .Y(_0453_)
  );
  NAND _0998_ (
    .A(_0453_),
    .B(_0446_),
    .Y(_0455_)
  );
  NOR _0999_ (
    .A(_0407_),
    .B(_0413_),
    .Y(_0456_)
  );
  NOT _1000_ (
    .A(_0456_),
    .Y(_0457_)
  );
  NOR _1001_ (
    .A(_0457_),
    .B(_0455_),
    .Y(_0458_)
  );
  NAND _1002_ (
    .A(_0451_),
    .B(_0413_),
    .Y(_0459_)
  );
  NAND _1003_ (
    .A(_0459_),
    .B(_0148_),
    .Y(_0460_)
  );
  NOR _1004_ (
    .A(_0460_),
    .B(_0458_),
    .Y(_0340_)
  );
  NOR _1005_ (
    .A(_0458_),
    .B(_0476_),
    .Y(_0461_)
  );
  NAND _1006_ (
    .A(_0456_),
    .B(_0476_),
    .Y(_0462_)
  );
  NOR _1007_ (
    .A(_0462_),
    .B(_0455_),
    .Y(_0463_)
  );
  NOT _1008_ (
    .A(_0463_),
    .Y(_0465_)
  );
  NAND _1009_ (
    .A(_0465_),
    .B(_0148_),
    .Y(_0466_)
  );
  NOR _1010_ (
    .A(_0466_),
    .B(_0461_),
    .Y(_0341_)
  );
  NOR _1011_ (
    .A(_0463_),
    .B(_0025_),
    .Y(_0467_)
  );
  NAND _1012_ (
    .A(_0463_),
    .B(_0025_),
    .Y(_0468_)
  );
  NAND _1013_ (
    .A(_0468_),
    .B(_0148_),
    .Y(_0469_)
  );
  NOR _1014_ (
    .A(_0469_),
    .B(_0467_),
    .Y(_0343_)
  );
  NOT _1015_ (
    .A(_0344_),
    .Y(_0470_)
  );
  NOR _1016_ (
    .A(_0470_),
    .B(_0061_),
    .Y(_0471_)
  );
  NOR _1017_ (
    .A(_0471_),
    .B(_0419_),
    .Y(_0472_)
  );
  NOR _1018_ (
    .A(_0472_),
    .B(_0076_),
    .Y(_0346_)
  );
  DFF _1019_ (
    .C(clk_SD),
    .D(_0640_),
    .Q(signal_out[0])
  );
  DFF _1020_ (
    .C(clk_SD),
    .D(_0002_[1]),
    .Q(signal_out[1])
  );
  DFF _1021_ (
    .C(clk_SD),
    .D(_0643_),
    .Q(signal_out[2])
  );
  DFF _1022_ (
    .C(clk_SD),
    .D(_0002_[3]),
    .Q(signal_out[3])
  );
  DFF _1023_ (
    .C(clk_SD),
    .D(_0002_[4]),
    .Q(signal_out[4])
  );
  DFF _1024_ (
    .C(clk_SD),
    .D(_0647_),
    .Q(signal_out[5])
  );
  DFF _1025_ (
    .C(clk_SD),
    .D(_0649_),
    .Q(signal_out[6])
  );
  DFF _1026_ (
    .C(clk_SD),
    .D(_0651_),
    .Q(signal_out[7])
  );
  DFF _1027_ (
    .C(clk_SD),
    .D(_0653_),
    .Q(signal_out[8])
  );
  DFF _1028_ (
    .C(clk_SD),
    .D(_0655_),
    .Q(signal_out[9])
  );
  DFF _1029_ (
    .C(clk_SD),
    .D(_0657_),
    .Q(signal_out[10])
  );
  DFF _1030_ (
    .C(clk_SD),
    .D(_0659_),
    .Q(signal_out[11])
  );
  DFF _1031_ (
    .C(clk_SD),
    .D(_0661_),
    .Q(signal_out[12])
  );
  DFF _1032_ (
    .C(clk_SD),
    .D(_0663_),
    .Q(signal_out[13])
  );
  DFF _1033_ (
    .C(clk_SD),
    .D(_0665_),
    .Q(signal_out[14])
  );
  DFF _1034_ (
    .C(clk_SD),
    .D(_0667_),
    .Q(signal_out[15])
  );
  DFF _1035_ (
    .C(clk_SD),
    .D(_0503_),
    .Q(signal_out[16])
  );
  DFF _1036_ (
    .C(clk_SD),
    .D(_0505_),
    .Q(signal_out[17])
  );
  DFF _1037_ (
    .C(clk_SD),
    .D(_0002_[18]),
    .Q(signal_out[18])
  );
  DFF _1038_ (
    .C(clk_SD),
    .D(_0002_[19]),
    .Q(signal_out[19])
  );
  DFF _1039_ (
    .C(clk_SD),
    .D(_0002_[20]),
    .Q(signal_out[20])
  );
  DFF _1040_ (
    .C(clk_SD),
    .D(_0002_[21]),
    .Q(signal_out[21])
  );
  DFF _1041_ (
    .C(clk_SD),
    .D(_0002_[22]),
    .Q(signal_out[22])
  );
  DFF _1042_ (
    .C(clk_SD),
    .D(_0513_),
    .Q(signal_out[23])
  );
  DFF _1043_ (
    .C(clk_SD),
    .D(_0002_[24]),
    .Q(signal_out[24])
  );
  DFF _1044_ (
    .C(clk_SD),
    .D(_0002_[25]),
    .Q(signal_out[25])
  );
  DFF _1045_ (
    .C(clk_SD),
    .D(_0002_[26]),
    .Q(signal_out[26])
  );
  DFF _1046_ (
    .C(clk_SD),
    .D(_0002_[27]),
    .Q(signal_out[27])
  );
  DFF _1047_ (
    .C(clk_SD),
    .D(_0002_[28]),
    .Q(signal_out[28])
  );
  DFF _1048_ (
    .C(clk_SD),
    .D(_0520_),
    .Q(signal_out[29])
  );
  DFF _1049_ (
    .C(clk_SD),
    .D(_0522_),
    .Q(signal_out[30])
  );
  DFF _1050_ (
    .C(clk_SD),
    .D(_0524_),
    .Q(signal_out[31])
  );
  DFF _1051_ (
    .C(clk_SD),
    .D(_0526_),
    .Q(signal_out[32])
  );
  DFF _1052_ (
    .C(clk_SD),
    .D(_0528_),
    .Q(signal_out[33])
  );
  DFF _1053_ (
    .C(clk_SD),
    .D(_0530_),
    .Q(signal_out[34])
  );
  DFF _1054_ (
    .C(clk_SD),
    .D(_0532_),
    .Q(signal_out[35])
  );
  DFF _1055_ (
    .C(clk_SD),
    .D(_0534_),
    .Q(signal_out[36])
  );
  DFF _1056_ (
    .C(clk_SD),
    .D(_0536_),
    .Q(signal_out[37])
  );
  DFF _1057_ (
    .C(clk_SD),
    .D(_0538_),
    .Q(signal_out[38])
  );
  DFF _1058_ (
    .C(clk_SD),
    .D(_0002_[39]),
    .Q(signal_out[39])
  );
  DFF _1059_ (
    .C(clk_SD),
    .D(_0002_[40]),
    .Q(signal_out[40])
  );
  DFF _1060_ (
    .C(clk_SD),
    .D(_0002_[41]),
    .Q(signal_out[41])
  );
  DFF _1061_ (
    .C(clk_SD),
    .D(_0002_[42]),
    .Q(signal_out[42])
  );
  DFF _1062_ (
    .C(clk_SD),
    .D(_0002_[43]),
    .Q(signal_out[43])
  );
  DFF _1063_ (
    .C(clk_SD),
    .D(_0002_[44]),
    .Q(signal_out[44])
  );
  DFF _1064_ (
    .C(clk_SD),
    .D(_0002_[45]),
    .Q(signal_out[45])
  );
  DFF _1065_ (
    .C(clk_SD),
    .D(_0002_[46]),
    .Q(signal_out[46])
  );
  DFF _1066_ (
    .C(clk_SD),
    .D(_0002_[47]),
    .Q(signal_out[47])
  );
  DFF _1067_ (
    .C(clk_SD),
    .D(_0002_[48]),
    .Q(signal_out[48])
  );
  DFF _1068_ (
    .C(clk_SD),
    .D(_0002_[49]),
    .Q(signal_out[49])
  );
  DFF _1069_ (
    .C(clk_SD),
    .D(_0002_[50]),
    .Q(signal_out[50])
  );
  DFF _1070_ (
    .C(clk_SD),
    .D(_0002_[51]),
    .Q(signal_out[51])
  );
  DFF _1071_ (
    .C(clk_SD),
    .D(_0002_[52]),
    .Q(signal_out[52])
  );
  DFF _1072_ (
    .C(clk_SD),
    .D(_0002_[53]),
    .Q(signal_out[53])
  );
  DFF _1073_ (
    .C(clk_SD),
    .D(_0002_[54]),
    .Q(signal_out[54])
  );
  DFF _1074_ (
    .C(clk_SD),
    .D(_0002_[55]),
    .Q(signal_out[55])
  );
  DFF _1075_ (
    .C(clk_SD),
    .D(_0002_[56]),
    .Q(signal_out[56])
  );
  DFF _1076_ (
    .C(clk_SD),
    .D(_0002_[57]),
    .Q(signal_out[57])
  );
  DFF _1077_ (
    .C(clk_SD),
    .D(_0002_[58]),
    .Q(signal_out[58])
  );
  DFF _1078_ (
    .C(clk_SD),
    .D(_0002_[59]),
    .Q(signal_out[59])
  );
  DFF _1079_ (
    .C(clk_SD),
    .D(_0002_[60]),
    .Q(signal_out[60])
  );
  DFF _1080_ (
    .C(clk_SD),
    .D(_0002_[61]),
    .Q(signal_out[61])
  );
  DFF _1081_ (
    .C(clk_SD),
    .D(_0002_[62]),
    .Q(signal_out[62])
  );
  DFF _1082_ (
    .C(clk_SD),
    .D(_0002_[63]),
    .Q(signal_out[63])
  );
  DFF _1083_ (
    .C(clk_SD),
    .D(_0002_[64]),
    .Q(signal_out[64])
  );
  DFF _1084_ (
    .C(clk_SD),
    .D(_0002_[65]),
    .Q(signal_out[65])
  );
  DFF _1085_ (
    .C(clk_SD),
    .D(_0002_[66]),
    .Q(signal_out[66])
  );
  DFF _1086_ (
    .C(clk_SD),
    .D(_0002_[67]),
    .Q(signal_out[67])
  );
  DFF _1087_ (
    .C(clk_SD),
    .D(_0002_[68]),
    .Q(signal_out[68])
  );
  DFF _1088_ (
    .C(clk_SD),
    .D(_0002_[69]),
    .Q(signal_out[69])
  );
  DFF _1089_ (
    .C(clk_SD),
    .D(_0002_[70]),
    .Q(signal_out[70])
  );
  DFF _1090_ (
    .C(clk_SD),
    .D(_0002_[71]),
    .Q(signal_out[71])
  );
  DFF _1091_ (
    .C(clk_SD),
    .D(_0002_[72]),
    .Q(signal_out[72])
  );
  DFF _1092_ (
    .C(clk_SD),
    .D(_0002_[73]),
    .Q(signal_out[73])
  );
  DFF _1093_ (
    .C(clk_SD),
    .D(_0002_[74]),
    .Q(signal_out[74])
  );
  DFF _1094_ (
    .C(clk_SD),
    .D(_0002_[75]),
    .Q(signal_out[75])
  );
  DFF _1095_ (
    .C(clk_SD),
    .D(_0002_[76]),
    .Q(signal_out[76])
  );
  DFF _1096_ (
    .C(clk_SD),
    .D(_0002_[77]),
    .Q(signal_out[77])
  );
  DFF _1097_ (
    .C(clk_SD),
    .D(_0002_[78]),
    .Q(signal_out[78])
  );
  DFF _1098_ (
    .C(clk_SD),
    .D(_0002_[79]),
    .Q(signal_out[79])
  );
  DFF _1099_ (
    .C(clk_SD),
    .D(_0002_[80]),
    .Q(signal_out[80])
  );
  DFF _1100_ (
    .C(clk_SD),
    .D(_0002_[81]),
    .Q(signal_out[81])
  );
  DFF _1101_ (
    .C(clk_SD),
    .D(_0002_[82]),
    .Q(signal_out[82])
  );
  DFF _1102_ (
    .C(clk_SD),
    .D(_0002_[83]),
    .Q(signal_out[83])
  );
  DFF _1103_ (
    .C(clk_SD),
    .D(_0002_[84]),
    .Q(signal_out[84])
  );
  DFF _1104_ (
    .C(clk_SD),
    .D(_0002_[85]),
    .Q(signal_out[85])
  );
  DFF _1105_ (
    .C(clk_SD),
    .D(_0002_[86]),
    .Q(signal_out[86])
  );
  DFF _1106_ (
    .C(clk_SD),
    .D(_0002_[87]),
    .Q(signal_out[87])
  );
  DFF _1107_ (
    .C(clk_SD),
    .D(_0002_[88]),
    .Q(signal_out[88])
  );
  DFF _1108_ (
    .C(clk_SD),
    .D(_0002_[89]),
    .Q(signal_out[89])
  );
  DFF _1109_ (
    .C(clk_SD),
    .D(_0002_[90]),
    .Q(signal_out[90])
  );
  DFF _1110_ (
    .C(clk_SD),
    .D(_0002_[91]),
    .Q(signal_out[91])
  );
  DFF _1111_ (
    .C(clk_SD),
    .D(_0002_[92]),
    .Q(signal_out[92])
  );
  DFF _1112_ (
    .C(clk_SD),
    .D(_0002_[93]),
    .Q(signal_out[93])
  );
  DFF _1113_ (
    .C(clk_SD),
    .D(_0002_[94]),
    .Q(signal_out[94])
  );
  DFF _1114_ (
    .C(clk_SD),
    .D(_0002_[95]),
    .Q(signal_out[95])
  );
  DFF _1115_ (
    .C(clk_SD),
    .D(_0002_[96]),
    .Q(signal_out[96])
  );
  DFF _1116_ (
    .C(clk_SD),
    .D(_0002_[97]),
    .Q(signal_out[97])
  );
  DFF _1117_ (
    .C(clk_SD),
    .D(_0002_[98]),
    .Q(signal_out[98])
  );
  DFF _1118_ (
    .C(clk_SD),
    .D(_0002_[99]),
    .Q(signal_out[99])
  );
  DFF _1119_ (
    .C(clk_SD),
    .D(_0002_[100]),
    .Q(signal_out[100])
  );
  DFF _1120_ (
    .C(clk_SD),
    .D(_0002_[101]),
    .Q(signal_out[101])
  );
  DFF _1121_ (
    .C(clk_SD),
    .D(_0002_[102]),
    .Q(signal_out[102])
  );
  DFF _1122_ (
    .C(clk_SD),
    .D(_0002_[103]),
    .Q(signal_out[103])
  );
  DFF _1123_ (
    .C(clk_SD),
    .D(_0002_[104]),
    .Q(signal_out[104])
  );
  DFF _1124_ (
    .C(clk_SD),
    .D(_0002_[105]),
    .Q(signal_out[105])
  );
  DFF _1125_ (
    .C(clk_SD),
    .D(_0002_[106]),
    .Q(signal_out[106])
  );
  DFF _1126_ (
    .C(clk_SD),
    .D(_0002_[107]),
    .Q(signal_out[107])
  );
  DFF _1127_ (
    .C(clk_SD),
    .D(_0002_[108]),
    .Q(signal_out[108])
  );
  DFF _1128_ (
    .C(clk_SD),
    .D(_0002_[109]),
    .Q(signal_out[109])
  );
  DFF _1129_ (
    .C(clk_SD),
    .D(_0002_[110]),
    .Q(signal_out[110])
  );
  DFF _1130_ (
    .C(clk_SD),
    .D(_0002_[111]),
    .Q(signal_out[111])
  );
  DFF _1131_ (
    .C(clk_SD),
    .D(_0002_[112]),
    .Q(signal_out[112])
  );
  DFF _1132_ (
    .C(clk_SD),
    .D(_0002_[113]),
    .Q(signal_out[113])
  );
  DFF _1133_ (
    .C(clk_SD),
    .D(_0002_[114]),
    .Q(signal_out[114])
  );
  DFF _1134_ (
    .C(clk_SD),
    .D(_0002_[115]),
    .Q(signal_out[115])
  );
  DFF _1135_ (
    .C(clk_SD),
    .D(_0002_[116]),
    .Q(signal_out[116])
  );
  DFF _1136_ (
    .C(clk_SD),
    .D(_0002_[117]),
    .Q(signal_out[117])
  );
  DFF _1137_ (
    .C(clk_SD),
    .D(_0002_[118]),
    .Q(signal_out[118])
  );
  DFF _1138_ (
    .C(clk_SD),
    .D(_0002_[119]),
    .Q(signal_out[119])
  );
  DFF _1139_ (
    .C(clk_SD),
    .D(_0002_[120]),
    .Q(signal_out[120])
  );
  DFF _1140_ (
    .C(clk_SD),
    .D(_0002_[121]),
    .Q(signal_out[121])
  );
  DFF _1141_ (
    .C(clk_SD),
    .D(_0002_[122]),
    .Q(signal_out[122])
  );
  DFF _1142_ (
    .C(clk_SD),
    .D(_0002_[123]),
    .Q(signal_out[123])
  );
  DFF _1143_ (
    .C(clk_SD),
    .D(_0002_[124]),
    .Q(signal_out[124])
  );
  DFF _1144_ (
    .C(clk_SD),
    .D(_0002_[125]),
    .Q(signal_out[125])
  );
  DFF _1145_ (
    .C(clk_SD),
    .D(_0002_[126]),
    .Q(signal_out[126])
  );
  DFF _1146_ (
    .C(clk_SD),
    .D(_0002_[127]),
    .Q(signal_out[127])
  );
  DFF _1147_ (
    .C(clk_SD),
    .D(_0002_[128]),
    .Q(signal_out[128])
  );
  DFF _1148_ (
    .C(clk_SD),
    .D(_0002_[129]),
    .Q(signal_out[129])
  );
  DFF _1149_ (
    .C(clk_SD),
    .D(_0002_[130]),
    .Q(signal_out[130])
  );
  DFF _1150_ (
    .C(clk_SD),
    .D(_0002_[131]),
    .Q(signal_out[131])
  );
  DFF _1151_ (
    .C(clk_SD),
    .D(_0002_[132]),
    .Q(signal_out[132])
  );
  DFF _1152_ (
    .C(clk_SD),
    .D(_0002_[133]),
    .Q(signal_out[133])
  );
  DFF _1153_ (
    .C(clk_SD),
    .D(_0002_[134]),
    .Q(signal_out[134])
  );
  DFF _1154_ (
    .C(clk_SD),
    .D(_0002_[135]),
    .Q(signal_out[135])
  );
  DFF _1155_ (
    .C(clk_SD),
    .D(_0000_[0]),
    .Q(contador[0])
  );
  DFF _1156_ (
    .C(clk_SD),
    .D(_0000_[1]),
    .Q(contador[1])
  );
  DFF _1157_ (
    .C(clk_SD),
    .D(_0000_[2]),
    .Q(contador[2])
  );
  DFF _1158_ (
    .C(clk_SD),
    .D(_0000_[3]),
    .Q(contador[3])
  );
  DFF _1159_ (
    .C(clk_SD),
    .D(_0000_[4]),
    .Q(contador[4])
  );
  DFF _1160_ (
    .C(clk_SD),
    .D(_0000_[5]),
    .Q(contador[5])
  );
  DFF _1161_ (
    .C(clk_SD),
    .D(_0000_[6]),
    .Q(contador[6])
  );
  DFF _1162_ (
    .C(clk_SD),
    .D(_0000_[7]),
    .Q(contador[7])
  );
  DFF _1163_ (
    .C(clk_SD),
    .D(_0000_[8]),
    .Q(contador[8])
  );
  DFF _1164_ (
    .C(clk_SD),
    .D(_0001_),
    .Q(serial_complete)
  );
  assign _0003_ = contador[2];
  assign _0004_ = contador[3];
  assign _0153_ = contador[4];
  assign _0277_ = contador[5];
  assign _0436_ = contador[6];
  assign _0476_ = contador[7];
  assign _0025_ = contador[8];
  assign _0054_ = signal_out[5];
  assign _0061_ = enable_stp;
  assign _0076_ = reset_stp;
  assign _0647_ = _0083_;
  assign _0091_ = signal_out[23];
  assign _0105_ = signal_out[33];
  assign _0528_ = _0120_;
  assign _0513_ = _0127_;
  assign _0135_ = signal_out[7];
  assign _0154_ = signal_out[37];
  assign _0538_ = _0190_;
  assign _0203_ = signal_out[38];
  assign _0536_ = _0216_;
  assign _0640_ = _0240_;
  assign _0253_ = signal_out[0];
  assign _0649_ = _0278_;
  assign _0291_ = signal_out[6];
  assign _0651_ = _0303_;
  assign _0314_ = signal_out[11];
  assign _0659_ = _0327_;
  assign _0657_ = _0349_;
  assign _0355_ = signal_out[10];
  assign _0361_ = signal_out[34];
  assign _0372_ = signal_out[35];
  assign _0530_ = _0383_;
  assign _0532_ = _0389_;
  assign _0653_ = _0400_;
  assign _0406_ = signal_out[36];
  assign _0534_ = _0426_;
  assign _0437_ = signal_out[8];
  assign _0526_ = _0454_;
  assign _0464_ = signal_out[32];
  assign _0524_ = _0473_;
  assign _0474_ = signal_out[31];
  assign _0475_ = signal_out[17];
  assign _0665_ = _0477_;
  assign _0478_ = signal_out[14];
  assign _0505_ = _0479_;
  assign _0663_ = _0480_;
  assign _0481_ = signal_out[13];
  assign _0667_ = _0482_;
  assign _0483_ = signal_out[15];
  assign _0484_ = signal_out[12];
  assign _0661_ = _0485_;
  assign _0643_ = _0486_;
  assign _0487_ = signal_out[2];
  assign _0522_ = _0488_;
  assign _0489_ = signal_out[30];
  assign _0520_ = _0490_;
  assign _0491_ = signal_out[29];
  assign _0503_ = _0492_;
  assign _0493_ = signal_out[16];
  assign _0655_ = _0494_;
  assign _0495_ = signal_out[9];
  assign _0002_[1] = _0496_;
  assign _0002_[28] = _0005_;
  assign _0006_ = signal_out[3];
  assign _0002_[4] = _0007_;
  assign _0008_ = signal_out[1];
  assign _0009_ = signal_out[28];
  assign _0002_[27] = _0010_;
  assign _0011_ = signal_out[27];
  assign _0002_[26] = _0012_;
  assign _0013_ = signal_out[26];
  assign _0014_ = signal_out[4];
  assign _0002_[3] = _0015_;
  assign _0002_[22] = _0016_;
  assign _0002_[21] = _0017_;
  assign _0018_ = signal_out[21];
  assign _0019_ = signal_out[22];
  assign _0020_ = signal_out[19];
  assign _0002_[18] = _0021_;
  assign _0002_[25] = _0022_;
  assign _0023_ = signal_out[25];
  assign _0002_[24] = _0024_;
  assign _0026_ = signal_out[24];
  assign _0027_ = signal_out[18];
  assign _0028_ = signal_out[20];
  assign _0002_[20] = _0029_;
  assign _0002_[19] = _0030_;
  assign _0031_ = signal_out[39];
  assign _0002_[39] = _0032_;
  assign _0033_ = signal_out[40];
  assign _0002_[40] = _0034_;
  assign _0035_ = signal_out[41];
  assign _0002_[41] = _0036_;
  assign _0037_ = signal_out[42];
  assign _0002_[42] = _0038_;
  assign _0039_ = signal_out[43];
  assign _0002_[43] = _0040_;
  assign _0041_ = signal_out[44];
  assign _0002_[44] = _0042_;
  assign _0043_ = signal_out[45];
  assign _0002_[45] = _0044_;
  assign _0045_ = signal_out[46];
  assign _0002_[46] = _0046_;
  assign _0047_ = signal_out[47];
  assign _0002_[47] = _0048_;
  assign _0049_ = signal_out[48];
  assign _0002_[48] = _0050_;
  assign _0051_ = signal_out[49];
  assign _0002_[49] = _0052_;
  assign _0053_ = signal_out[50];
  assign _0002_[50] = _0055_;
  assign _0056_ = signal_out[51];
  assign _0002_[51] = _0057_;
  assign _0058_ = signal_out[52];
  assign _0002_[52] = _0059_;
  assign _0060_ = signal_out[53];
  assign _0002_[53] = _0062_;
  assign _0063_ = signal_out[54];
  assign _0002_[54] = _0064_;
  assign _0065_ = signal_out[55];
  assign _0002_[55] = _0066_;
  assign _0067_ = signal_out[56];
  assign _0002_[56] = _0068_;
  assign _0069_ = signal_out[57];
  assign _0002_[57] = _0070_;
  assign _0071_ = signal_out[58];
  assign _0002_[58] = _0072_;
  assign _0073_ = signal_out[59];
  assign _0002_[59] = _0074_;
  assign _0075_ = signal_out[60];
  assign _0002_[60] = _0077_;
  assign _0078_ = signal_out[61];
  assign _0002_[61] = _0079_;
  assign _0080_ = signal_out[62];
  assign _0002_[62] = _0081_;
  assign _0082_ = signal_out[63];
  assign _0002_[63] = _0084_;
  assign _0085_ = signal_out[64];
  assign _0002_[64] = _0086_;
  assign _0087_ = signal_out[65];
  assign _0002_[65] = _0088_;
  assign _0089_ = signal_out[66];
  assign _0002_[66] = _0090_;
  assign _0092_ = signal_out[67];
  assign _0002_[67] = _0093_;
  assign _0094_ = signal_out[68];
  assign _0002_[68] = _0095_;
  assign _0096_ = signal_out[69];
  assign _0002_[69] = _0097_;
  assign _0098_ = signal_out[70];
  assign _0002_[70] = _0099_;
  assign _0100_ = signal_out[71];
  assign _0002_[71] = _0101_;
  assign _0102_ = signal_out[72];
  assign _0002_[72] = _0103_;
  assign _0104_ = signal_out[73];
  assign _0002_[73] = _0106_;
  assign _0107_ = signal_out[74];
  assign _0002_[74] = _0108_;
  assign _0109_ = signal_out[75];
  assign _0002_[75] = _0110_;
  assign _0111_ = signal_out[76];
  assign _0002_[76] = _0112_;
  assign _0113_ = signal_out[77];
  assign _0002_[77] = _0114_;
  assign _0115_ = signal_out[78];
  assign _0002_[78] = _0116_;
  assign _0117_ = signal_out[79];
  assign _0002_[79] = _0118_;
  assign _0119_ = signal_out[80];
  assign _0002_[80] = _0121_;
  assign _0122_ = signal_out[81];
  assign _0002_[81] = _0123_;
  assign _0124_ = signal_out[82];
  assign _0002_[82] = _0125_;
  assign _0126_ = signal_out[83];
  assign _0002_[83] = _0128_;
  assign _0129_ = signal_out[84];
  assign _0002_[84] = _0130_;
  assign _0131_ = signal_out[85];
  assign _0002_[85] = _0132_;
  assign _0133_ = signal_out[86];
  assign _0002_[86] = _0134_;
  assign _0136_ = signal_out[87];
  assign _0002_[87] = _0137_;
  assign _0138_ = signal_out[88];
  assign _0002_[88] = _0139_;
  assign _0140_ = signal_out[89];
  assign _0002_[89] = _0141_;
  assign _0142_ = signal_out[90];
  assign _0002_[90] = _0143_;
  assign _0144_ = signal_out[91];
  assign _0002_[91] = _0145_;
  assign _0146_ = signal_out[92];
  assign _0002_[92] = _0149_;
  assign _0151_ = signal_out[93];
  assign _0002_[93] = _0155_;
  assign _0156_ = signal_out[94];
  assign _0002_[94] = _0158_;
  assign _0160_ = signal_out[95];
  assign _0002_[95] = _0162_;
  assign _0163_ = signal_out[96];
  assign _0002_[96] = _0165_;
  assign _0167_ = signal_out[97];
  assign _0002_[97] = _0169_;
  assign _0170_ = signal_out[98];
  assign _0002_[98] = _0172_;
  assign _0174_ = signal_out[99];
  assign _0002_[99] = _0176_;
  assign _0177_ = signal_out[100];
  assign _0002_[100] = _0179_;
  assign _0181_ = signal_out[101];
  assign _0002_[101] = _0183_;
  assign _0184_ = signal_out[102];
  assign _0002_[102] = _0186_;
  assign _0188_ = signal_out[103];
  assign _0002_[103] = _0191_;
  assign _0192_ = signal_out[104];
  assign _0002_[104] = _0194_;
  assign _0196_ = signal_out[105];
  assign _0002_[105] = _0198_;
  assign _0199_ = signal_out[106];
  assign _0002_[106] = _0201_;
  assign _0204_ = signal_out[107];
  assign _0002_[107] = _0206_;
  assign _0207_ = signal_out[108];
  assign _0002_[108] = _0209_;
  assign _0211_ = signal_out[109];
  assign _0002_[109] = _0213_;
  assign _0214_ = signal_out[110];
  assign _0002_[110] = _0217_;
  assign _0219_ = signal_out[111];
  assign _0002_[111] = _0221_;
  assign _0222_ = signal_out[112];
  assign _0002_[112] = _0224_;
  assign _0226_ = signal_out[113];
  assign _0002_[113] = _0228_;
  assign _0229_ = signal_out[114];
  assign _0002_[114] = _0231_;
  assign _0233_ = signal_out[115];
  assign _0002_[115] = _0235_;
  assign _0236_ = signal_out[116];
  assign _0002_[116] = _0238_;
  assign _0241_ = signal_out[117];
  assign _0002_[117] = _0243_;
  assign _0244_ = signal_out[118];
  assign _0002_[118] = _0246_;
  assign _0248_ = signal_out[119];
  assign _0002_[119] = _0250_;
  assign _0251_ = signal_out[120];
  assign _0002_[120] = _0254_;
  assign _0256_ = signal_out[121];
  assign _0002_[121] = _0258_;
  assign _0259_ = signal_out[122];
  assign _0002_[122] = _0261_;
  assign _0263_ = signal_out[123];
  assign _0002_[123] = _0265_;
  assign _0266_ = signal_out[124];
  assign _0002_[124] = _0268_;
  assign _0270_ = signal_out[125];
  assign _0002_[125] = _0272_;
  assign _0273_ = signal_out[126];
  assign _0002_[126] = _0275_;
  assign _0279_ = signal_out[127];
  assign _0002_[127] = _0281_;
  assign _0282_ = signal_out[128];
  assign _0002_[128] = _0284_;
  assign _0286_ = signal_out[129];
  assign _0002_[129] = _0288_;
  assign _0289_ = signal_out[130];
  assign _0002_[130] = _0292_;
  assign _0294_ = signal_out[131];
  assign _0002_[131] = _0296_;
  assign _0297_ = signal_out[132];
  assign _0002_[132] = _0299_;
  assign _0301_ = signal_out[133];
  assign _0002_[133] = _0304_;
  assign _0305_ = signal_out[134];
  assign _0002_[134] = _0307_;
  assign _0309_ = signal_out[135];
  assign _0002_[135] = _0311_;
  assign _0322_ = contador[0];
  assign _0324_ = contador[1];
  assign _0000_[0] = _0331_;
  assign _0000_[1] = _0332_;
  assign _0000_[2] = _0334_;
  assign _0000_[3] = _0335_;
  assign _0000_[4] = _0337_;
  assign _0000_[5] = _0338_;
  assign _0000_[6] = _0340_;
  assign _0000_[7] = _0341_;
  assign _0000_[8] = _0343_;
  assign _0344_ = serial_complete;
  assign _0001_ = _0346_;
endmodule
