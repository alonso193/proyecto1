/* Generated by Yosys 0.5+ (git sha1 ba4cce9, gcc 4.8.4-2ubuntu1~14.04 -O2 -fstack-protector -fPIC -Os) */

module \$paramod\SERIAL_TO_PARALLEL\SIZE=32 (serial_in, enable_stp, SD_CLK, RESET_L, reception_complete, parallel_out);
  wire [8:0] _000_;
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  input RESET_L;
  input SD_CLK;
  wire [8:0] contador;
  input enable_stp;
  output [31:0] parallel_out;
  output reception_complete;
  input serial_in;
  NOT _238_ (
    .A(RESET_L),
    .Y(_003_)
  );
  NOT _239_ (
    .A(enable_stp),
    .Y(_004_)
  );
  NAND _240_ (
    .A(_004_),
    .B(reception_complete),
    .Y(_005_)
  );
  NOR _241_ (
    .A(contador[8]),
    .B(contador[7]),
    .Y(_006_)
  );
  NAND _242_ (
    .A(_006_),
    .B(contador[5]),
    .Y(_007_)
  );
  NOR _243_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_008_)
  );
  NOT _244_ (
    .A(contador[2]),
    .Y(_009_)
  );
  NOT _245_ (
    .A(contador[3]),
    .Y(_010_)
  );
  NAND _246_ (
    .A(_010_),
    .B(_009_),
    .Y(_011_)
  );
  NOT _247_ (
    .A(contador[4]),
    .Y(_012_)
  );
  NOT _248_ (
    .A(contador[6]),
    .Y(_013_)
  );
  NAND _249_ (
    .A(_013_),
    .B(_012_),
    .Y(_014_)
  );
  NOR _250_ (
    .A(_014_),
    .B(_011_),
    .Y(_015_)
  );
  NAND _251_ (
    .A(_015_),
    .B(_008_),
    .Y(_016_)
  );
  NOR _252_ (
    .A(_016_),
    .B(_007_),
    .Y(_017_)
  );
  NAND _253_ (
    .A(_017_),
    .B(enable_stp),
    .Y(_018_)
  );
  NAND _254_ (
    .A(_018_),
    .B(_005_),
    .Y(_002_)
  );
  NOT _255_ (
    .A(parallel_out[1]),
    .Y(_019_)
  );
  NOR _256_ (
    .A(_017_),
    .B(_019_),
    .Y(_020_)
  );
  NOT _257_ (
    .A(parallel_out[0]),
    .Y(_022_)
  );
  NOT _258_ (
    .A(_007_),
    .Y(_024_)
  );
  NOT _259_ (
    .A(_008_),
    .Y(_026_)
  );
  NOR _260_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_028_)
  );
  NOR _261_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_030_)
  );
  NAND _262_ (
    .A(_030_),
    .B(_028_),
    .Y(_032_)
  );
  NOR _263_ (
    .A(_032_),
    .B(_026_),
    .Y(_034_)
  );
  NAND _264_ (
    .A(_034_),
    .B(_024_),
    .Y(_036_)
  );
  NOR _265_ (
    .A(_036_),
    .B(_022_),
    .Y(_038_)
  );
  NOR _266_ (
    .A(_038_),
    .B(_020_),
    .Y(_040_)
  );
  NOR _267_ (
    .A(_040_),
    .B(_004_),
    .Y(_001_[0])
  );
  NOT _268_ (
    .A(parallel_out[2]),
    .Y(_043_)
  );
  NOR _269_ (
    .A(_017_),
    .B(_043_),
    .Y(_045_)
  );
  NOR _270_ (
    .A(_036_),
    .B(_019_),
    .Y(_047_)
  );
  NOR _271_ (
    .A(_047_),
    .B(_045_),
    .Y(_049_)
  );
  NOR _272_ (
    .A(_049_),
    .B(_004_),
    .Y(_001_[1])
  );
  NOT _273_ (
    .A(parallel_out[3]),
    .Y(_052_)
  );
  NOR _274_ (
    .A(_017_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _275_ (
    .A(_036_),
    .B(_043_),
    .Y(_056_)
  );
  NOR _276_ (
    .A(_056_),
    .B(_054_),
    .Y(_058_)
  );
  NOR _277_ (
    .A(_058_),
    .B(_004_),
    .Y(_001_[2])
  );
  NOT _278_ (
    .A(parallel_out[4]),
    .Y(_061_)
  );
  NOR _279_ (
    .A(_017_),
    .B(_061_),
    .Y(_063_)
  );
  NOR _280_ (
    .A(_036_),
    .B(_052_),
    .Y(_065_)
  );
  NOR _281_ (
    .A(_065_),
    .B(_063_),
    .Y(_067_)
  );
  NOR _282_ (
    .A(_067_),
    .B(_004_),
    .Y(_001_[3])
  );
  NOT _283_ (
    .A(parallel_out[5]),
    .Y(_070_)
  );
  NOR _284_ (
    .A(_017_),
    .B(_070_),
    .Y(_072_)
  );
  NOR _285_ (
    .A(_036_),
    .B(_061_),
    .Y(_074_)
  );
  NOR _286_ (
    .A(_074_),
    .B(_072_),
    .Y(_076_)
  );
  NOR _287_ (
    .A(_076_),
    .B(_004_),
    .Y(_001_[4])
  );
  NOT _288_ (
    .A(parallel_out[6]),
    .Y(_079_)
  );
  NOR _289_ (
    .A(_017_),
    .B(_079_),
    .Y(_081_)
  );
  NOR _290_ (
    .A(_036_),
    .B(_070_),
    .Y(_083_)
  );
  NOR _291_ (
    .A(_083_),
    .B(_081_),
    .Y(_085_)
  );
  NOR _292_ (
    .A(_085_),
    .B(_004_),
    .Y(_001_[5])
  );
  NOT _293_ (
    .A(parallel_out[7]),
    .Y(_088_)
  );
  NOR _294_ (
    .A(_017_),
    .B(_088_),
    .Y(_090_)
  );
  NOR _295_ (
    .A(_036_),
    .B(_079_),
    .Y(_092_)
  );
  NOR _296_ (
    .A(_092_),
    .B(_090_),
    .Y(_094_)
  );
  NOR _297_ (
    .A(_094_),
    .B(_004_),
    .Y(_001_[6])
  );
  NOT _298_ (
    .A(parallel_out[8]),
    .Y(_096_)
  );
  NOR _299_ (
    .A(_017_),
    .B(_096_),
    .Y(_097_)
  );
  NOR _300_ (
    .A(_036_),
    .B(_088_),
    .Y(_098_)
  );
  NOR _301_ (
    .A(_098_),
    .B(_097_),
    .Y(_099_)
  );
  NOR _302_ (
    .A(_099_),
    .B(_004_),
    .Y(_001_[7])
  );
  NOT _303_ (
    .A(parallel_out[9]),
    .Y(_100_)
  );
  NOR _304_ (
    .A(_017_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _305_ (
    .A(_036_),
    .B(_096_),
    .Y(_102_)
  );
  NOR _306_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR _307_ (
    .A(_103_),
    .B(_004_),
    .Y(_001_[8])
  );
  NOT _308_ (
    .A(parallel_out[10]),
    .Y(_104_)
  );
  NOR _309_ (
    .A(_017_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _310_ (
    .A(_036_),
    .B(_100_),
    .Y(_106_)
  );
  NOR _311_ (
    .A(_106_),
    .B(_105_),
    .Y(_107_)
  );
  NOR _312_ (
    .A(_107_),
    .B(_004_),
    .Y(_001_[9])
  );
  NOT _313_ (
    .A(parallel_out[11]),
    .Y(_108_)
  );
  NOR _314_ (
    .A(_017_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _315_ (
    .A(_036_),
    .B(_104_),
    .Y(_110_)
  );
  NOR _316_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _317_ (
    .A(_111_),
    .B(_004_),
    .Y(_001_[10])
  );
  NOT _318_ (
    .A(parallel_out[12]),
    .Y(_112_)
  );
  NOR _319_ (
    .A(_017_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _320_ (
    .A(_036_),
    .B(_108_),
    .Y(_114_)
  );
  NOR _321_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _322_ (
    .A(_115_),
    .B(_004_),
    .Y(_001_[11])
  );
  NOT _323_ (
    .A(parallel_out[13]),
    .Y(_116_)
  );
  NOR _324_ (
    .A(_017_),
    .B(_116_),
    .Y(_117_)
  );
  NOR _325_ (
    .A(_036_),
    .B(_112_),
    .Y(_118_)
  );
  NOR _326_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NOR _327_ (
    .A(_119_),
    .B(_004_),
    .Y(_001_[12])
  );
  NOT _328_ (
    .A(parallel_out[14]),
    .Y(_120_)
  );
  NOR _329_ (
    .A(_017_),
    .B(_120_),
    .Y(_121_)
  );
  NOR _330_ (
    .A(_036_),
    .B(_116_),
    .Y(_122_)
  );
  NOR _331_ (
    .A(_122_),
    .B(_121_),
    .Y(_123_)
  );
  NOR _332_ (
    .A(_123_),
    .B(_004_),
    .Y(_001_[13])
  );
  NOT _333_ (
    .A(parallel_out[15]),
    .Y(_124_)
  );
  NOR _334_ (
    .A(_017_),
    .B(_124_),
    .Y(_125_)
  );
  NOR _335_ (
    .A(_036_),
    .B(_120_),
    .Y(_126_)
  );
  NOR _336_ (
    .A(_126_),
    .B(_125_),
    .Y(_127_)
  );
  NOR _337_ (
    .A(_127_),
    .B(_004_),
    .Y(_001_[14])
  );
  NOT _338_ (
    .A(parallel_out[16]),
    .Y(_128_)
  );
  NOR _339_ (
    .A(_017_),
    .B(_128_),
    .Y(_129_)
  );
  NOR _340_ (
    .A(_036_),
    .B(_124_),
    .Y(_130_)
  );
  NOR _341_ (
    .A(_130_),
    .B(_129_),
    .Y(_131_)
  );
  NOR _342_ (
    .A(_131_),
    .B(_004_),
    .Y(_001_[15])
  );
  NOT _343_ (
    .A(parallel_out[17]),
    .Y(_132_)
  );
  NOR _344_ (
    .A(_017_),
    .B(_132_),
    .Y(_133_)
  );
  NOR _345_ (
    .A(_036_),
    .B(_128_),
    .Y(_134_)
  );
  NOR _346_ (
    .A(_134_),
    .B(_133_),
    .Y(_135_)
  );
  NOR _347_ (
    .A(_135_),
    .B(_004_),
    .Y(_001_[16])
  );
  NOT _348_ (
    .A(parallel_out[18]),
    .Y(_136_)
  );
  NOR _349_ (
    .A(_017_),
    .B(_136_),
    .Y(_137_)
  );
  NOR _350_ (
    .A(_036_),
    .B(_132_),
    .Y(_138_)
  );
  NOR _351_ (
    .A(_138_),
    .B(_137_),
    .Y(_139_)
  );
  NOR _352_ (
    .A(_139_),
    .B(_004_),
    .Y(_001_[17])
  );
  NOT _353_ (
    .A(parallel_out[19]),
    .Y(_140_)
  );
  NOR _354_ (
    .A(_017_),
    .B(_140_),
    .Y(_141_)
  );
  NOR _355_ (
    .A(_036_),
    .B(_136_),
    .Y(_142_)
  );
  NOR _356_ (
    .A(_142_),
    .B(_141_),
    .Y(_143_)
  );
  NOR _357_ (
    .A(_143_),
    .B(_004_),
    .Y(_001_[18])
  );
  NOT _358_ (
    .A(parallel_out[20]),
    .Y(_144_)
  );
  NOR _359_ (
    .A(_017_),
    .B(_144_),
    .Y(_145_)
  );
  NOR _360_ (
    .A(_036_),
    .B(_140_),
    .Y(_146_)
  );
  NOR _361_ (
    .A(_146_),
    .B(_145_),
    .Y(_147_)
  );
  NOR _362_ (
    .A(_147_),
    .B(_004_),
    .Y(_001_[19])
  );
  NOT _363_ (
    .A(parallel_out[21]),
    .Y(_148_)
  );
  NOR _364_ (
    .A(_017_),
    .B(_148_),
    .Y(_149_)
  );
  NOR _365_ (
    .A(_036_),
    .B(_144_),
    .Y(_150_)
  );
  NOR _366_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NOR _367_ (
    .A(_151_),
    .B(_004_),
    .Y(_001_[20])
  );
  NOT _368_ (
    .A(parallel_out[22]),
    .Y(_152_)
  );
  NOR _369_ (
    .A(_017_),
    .B(_152_),
    .Y(_153_)
  );
  NOR _370_ (
    .A(_036_),
    .B(_148_),
    .Y(_154_)
  );
  NOR _371_ (
    .A(_154_),
    .B(_153_),
    .Y(_155_)
  );
  NOR _372_ (
    .A(_155_),
    .B(_004_),
    .Y(_001_[21])
  );
  NOT _373_ (
    .A(parallel_out[23]),
    .Y(_156_)
  );
  NOR _374_ (
    .A(_017_),
    .B(_156_),
    .Y(_157_)
  );
  NOR _375_ (
    .A(_036_),
    .B(_152_),
    .Y(_158_)
  );
  NOR _376_ (
    .A(_158_),
    .B(_157_),
    .Y(_159_)
  );
  NOR _377_ (
    .A(_159_),
    .B(_004_),
    .Y(_001_[22])
  );
  NOT _378_ (
    .A(parallel_out[24]),
    .Y(_160_)
  );
  NOR _379_ (
    .A(_017_),
    .B(_160_),
    .Y(_161_)
  );
  NOR _380_ (
    .A(_036_),
    .B(_156_),
    .Y(_162_)
  );
  NOR _381_ (
    .A(_162_),
    .B(_161_),
    .Y(_163_)
  );
  NOR _382_ (
    .A(_163_),
    .B(_004_),
    .Y(_001_[23])
  );
  NOT _383_ (
    .A(parallel_out[25]),
    .Y(_164_)
  );
  NOR _384_ (
    .A(_017_),
    .B(_164_),
    .Y(_165_)
  );
  NOR _385_ (
    .A(_036_),
    .B(_160_),
    .Y(_166_)
  );
  NOR _386_ (
    .A(_166_),
    .B(_165_),
    .Y(_167_)
  );
  NOR _387_ (
    .A(_167_),
    .B(_004_),
    .Y(_001_[24])
  );
  NOT _388_ (
    .A(parallel_out[26]),
    .Y(_168_)
  );
  NOR _389_ (
    .A(_017_),
    .B(_168_),
    .Y(_169_)
  );
  NOR _390_ (
    .A(_036_),
    .B(_164_),
    .Y(_170_)
  );
  NOR _391_ (
    .A(_170_),
    .B(_169_),
    .Y(_171_)
  );
  NOR _392_ (
    .A(_171_),
    .B(_004_),
    .Y(_001_[25])
  );
  NOT _393_ (
    .A(parallel_out[27]),
    .Y(_172_)
  );
  NOR _394_ (
    .A(_017_),
    .B(_172_),
    .Y(_173_)
  );
  NOR _395_ (
    .A(_036_),
    .B(_168_),
    .Y(_174_)
  );
  NOR _396_ (
    .A(_174_),
    .B(_173_),
    .Y(_175_)
  );
  NOR _397_ (
    .A(_175_),
    .B(_004_),
    .Y(_001_[26])
  );
  NOT _398_ (
    .A(parallel_out[28]),
    .Y(_176_)
  );
  NOR _399_ (
    .A(_017_),
    .B(_176_),
    .Y(_177_)
  );
  NOR _400_ (
    .A(_036_),
    .B(_172_),
    .Y(_178_)
  );
  NOR _401_ (
    .A(_178_),
    .B(_177_),
    .Y(_179_)
  );
  NOR _402_ (
    .A(_179_),
    .B(_004_),
    .Y(_001_[27])
  );
  NOT _403_ (
    .A(parallel_out[29]),
    .Y(_180_)
  );
  NOR _404_ (
    .A(_017_),
    .B(_180_),
    .Y(_181_)
  );
  NOR _405_ (
    .A(_036_),
    .B(_176_),
    .Y(_182_)
  );
  NOR _406_ (
    .A(_182_),
    .B(_181_),
    .Y(_183_)
  );
  NOR _407_ (
    .A(_183_),
    .B(_004_),
    .Y(_001_[28])
  );
  NOT _408_ (
    .A(parallel_out[30]),
    .Y(_184_)
  );
  NOR _409_ (
    .A(_017_),
    .B(_184_),
    .Y(_185_)
  );
  NOR _410_ (
    .A(_036_),
    .B(_180_),
    .Y(_186_)
  );
  NOR _411_ (
    .A(_186_),
    .B(_185_),
    .Y(_187_)
  );
  NOR _412_ (
    .A(_187_),
    .B(_004_),
    .Y(_001_[29])
  );
  NOT _413_ (
    .A(parallel_out[31]),
    .Y(_188_)
  );
  NOR _414_ (
    .A(_017_),
    .B(_188_),
    .Y(_189_)
  );
  NOR _415_ (
    .A(_036_),
    .B(_184_),
    .Y(_190_)
  );
  NOR _416_ (
    .A(_190_),
    .B(_189_),
    .Y(_191_)
  );
  NOR _417_ (
    .A(_191_),
    .B(_004_),
    .Y(_001_[30])
  );
  NOT _418_ (
    .A(serial_in),
    .Y(_192_)
  );
  NOR _419_ (
    .A(_017_),
    .B(_192_),
    .Y(_193_)
  );
  NOR _420_ (
    .A(_036_),
    .B(_188_),
    .Y(_194_)
  );
  NOR _421_ (
    .A(_194_),
    .B(_193_),
    .Y(_195_)
  );
  NOR _422_ (
    .A(_195_),
    .B(_004_),
    .Y(_001_[31])
  );
  NAND _423_ (
    .A(contador[0]),
    .B(_004_),
    .Y(_196_)
  );
  NOR _424_ (
    .A(_017_),
    .B(contador[0]),
    .Y(_197_)
  );
  NAND _425_ (
    .A(_197_),
    .B(enable_stp),
    .Y(_198_)
  );
  NAND _426_ (
    .A(_198_),
    .B(_196_),
    .Y(_000_[0])
  );
  NOT _427_ (
    .A(contador[0]),
    .Y(_199_)
  );
  NOT _428_ (
    .A(contador[1]),
    .Y(_200_)
  );
  NOR _429_ (
    .A(_200_),
    .B(_199_),
    .Y(_201_)
  );
  NOR _430_ (
    .A(_201_),
    .B(_008_),
    .Y(_202_)
  );
  NOR _431_ (
    .A(_202_),
    .B(_004_),
    .Y(_203_)
  );
  NOR _432_ (
    .A(contador[1]),
    .B(enable_stp),
    .Y(_204_)
  );
  NOR _433_ (
    .A(_204_),
    .B(_203_),
    .Y(_000_[1])
  );
  NAND _434_ (
    .A(_201_),
    .B(enable_stp),
    .Y(_205_)
  );
  NOR _435_ (
    .A(_205_),
    .B(_009_),
    .Y(_206_)
  );
  NAND _436_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_207_)
  );
  NOR _437_ (
    .A(_207_),
    .B(_004_),
    .Y(_208_)
  );
  NOR _438_ (
    .A(_208_),
    .B(contador[2]),
    .Y(_209_)
  );
  NOR _439_ (
    .A(_209_),
    .B(_206_),
    .Y(_000_[2])
  );
  NOR _440_ (
    .A(_206_),
    .B(contador[3]),
    .Y(_210_)
  );
  NAND _441_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_211_)
  );
  NOR _442_ (
    .A(_211_),
    .B(_205_),
    .Y(_212_)
  );
  NOR _443_ (
    .A(_212_),
    .B(_210_),
    .Y(_000_[3])
  );
  NOR _444_ (
    .A(_212_),
    .B(contador[4]),
    .Y(_213_)
  );
  NOT _445_ (
    .A(_211_),
    .Y(_214_)
  );
  NAND _446_ (
    .A(_214_),
    .B(_208_),
    .Y(_215_)
  );
  NOR _447_ (
    .A(_215_),
    .B(_012_),
    .Y(_216_)
  );
  NOR _448_ (
    .A(_216_),
    .B(_213_),
    .Y(_000_[4])
  );
  NOR _449_ (
    .A(_216_),
    .B(contador[5]),
    .Y(_217_)
  );
  NAND _450_ (
    .A(_216_),
    .B(contador[5]),
    .Y(_218_)
  );
  NAND _451_ (
    .A(_218_),
    .B(_018_),
    .Y(_219_)
  );
  NOR _452_ (
    .A(_219_),
    .B(_217_),
    .Y(_000_[5])
  );
  NAND _453_ (
    .A(_218_),
    .B(contador[6]),
    .Y(_220_)
  );
  NOT _454_ (
    .A(contador[5]),
    .Y(_221_)
  );
  NAND _455_ (
    .A(_212_),
    .B(contador[4]),
    .Y(_222_)
  );
  NOR _456_ (
    .A(_222_),
    .B(_221_),
    .Y(_223_)
  );
  NAND _457_ (
    .A(_223_),
    .B(_013_),
    .Y(_224_)
  );
  NAND _458_ (
    .A(_224_),
    .B(_220_),
    .Y(_000_[6])
  );
  NOT _459_ (
    .A(contador[7]),
    .Y(_225_)
  );
  NOR _460_ (
    .A(_211_),
    .B(_207_),
    .Y(_226_)
  );
  NAND _461_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_227_)
  );
  NAND _462_ (
    .A(contador[5]),
    .B(enable_stp),
    .Y(_228_)
  );
  NOR _463_ (
    .A(_228_),
    .B(_227_),
    .Y(_229_)
  );
  NAND _464_ (
    .A(_229_),
    .B(_226_),
    .Y(_230_)
  );
  NOR _465_ (
    .A(_230_),
    .B(_225_),
    .Y(_231_)
  );
  NOT _466_ (
    .A(_230_),
    .Y(_232_)
  );
  NOR _467_ (
    .A(_232_),
    .B(contador[7]),
    .Y(_233_)
  );
  NOR _468_ (
    .A(_233_),
    .B(_231_),
    .Y(_000_[7])
  );
  NOR _469_ (
    .A(_231_),
    .B(contador[8]),
    .Y(_234_)
  );
  NOT _470_ (
    .A(contador[8]),
    .Y(_235_)
  );
  NOT _471_ (
    .A(_231_),
    .Y(_236_)
  );
  NOR _472_ (
    .A(_236_),
    .B(_235_),
    .Y(_237_)
  );
  NOR _473_ (
    .A(_237_),
    .B(_234_),
    .Y(_000_[8])
  );
  BUF _474_ (
    .A(_003_),
    .Y(_021_)
  );
  BUF _475_ (
    .A(_003_),
    .Y(_023_)
  );
  BUF _476_ (
    .A(_003_),
    .Y(_025_)
  );
  BUF _477_ (
    .A(_003_),
    .Y(_027_)
  );
  BUF _478_ (
    .A(_003_),
    .Y(_029_)
  );
  BUF _479_ (
    .A(_003_),
    .Y(_031_)
  );
  BUF _480_ (
    .A(_003_),
    .Y(_033_)
  );
  BUF _481_ (
    .A(_003_),
    .Y(_035_)
  );
  BUF _482_ (
    .A(_003_),
    .Y(_037_)
  );
  BUF _483_ (
    .A(_003_),
    .Y(_039_)
  );
  BUF _484_ (
    .A(_003_),
    .Y(_041_)
  );
  BUF _485_ (
    .A(_003_),
    .Y(_042_)
  );
  BUF _486_ (
    .A(_003_),
    .Y(_044_)
  );
  BUF _487_ (
    .A(_003_),
    .Y(_046_)
  );
  BUF _488_ (
    .A(_003_),
    .Y(_048_)
  );
  BUF _489_ (
    .A(_003_),
    .Y(_050_)
  );
  BUF _490_ (
    .A(_003_),
    .Y(_051_)
  );
  BUF _491_ (
    .A(_003_),
    .Y(_053_)
  );
  BUF _492_ (
    .A(_003_),
    .Y(_055_)
  );
  BUF _493_ (
    .A(_003_),
    .Y(_057_)
  );
  BUF _494_ (
    .A(_003_),
    .Y(_059_)
  );
  BUF _495_ (
    .A(_003_),
    .Y(_060_)
  );
  BUF _496_ (
    .A(_003_),
    .Y(_062_)
  );
  BUF _497_ (
    .A(_003_),
    .Y(_064_)
  );
  BUF _498_ (
    .A(_003_),
    .Y(_066_)
  );
  BUF _499_ (
    .A(_003_),
    .Y(_068_)
  );
  BUF _500_ (
    .A(_003_),
    .Y(_069_)
  );
  BUF _501_ (
    .A(_003_),
    .Y(_071_)
  );
  BUF _502_ (
    .A(_003_),
    .Y(_073_)
  );
  BUF _503_ (
    .A(_003_),
    .Y(_075_)
  );
  BUF _504_ (
    .A(_003_),
    .Y(_077_)
  );
  BUF _505_ (
    .A(_003_),
    .Y(_078_)
  );
  BUF _506_ (
    .A(_003_),
    .Y(_080_)
  );
  BUF _507_ (
    .A(_003_),
    .Y(_082_)
  );
  BUF _508_ (
    .A(_003_),
    .Y(_084_)
  );
  BUF _509_ (
    .A(_003_),
    .Y(_086_)
  );
  BUF _510_ (
    .A(_003_),
    .Y(_087_)
  );
  BUF _511_ (
    .A(_003_),
    .Y(_089_)
  );
  BUF _512_ (
    .A(_003_),
    .Y(_091_)
  );
  BUF _513_ (
    .A(_003_),
    .Y(_093_)
  );
  BUF _514_ (
    .A(_003_),
    .Y(_095_)
  );
  DFFSR _515_ (
    .C(SD_CLK),
    .D(_002_),
    .Q(reception_complete),
    .R(_021_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(SD_CLK),
    .D(_001_[0]),
    .Q(parallel_out[0]),
    .R(_023_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(SD_CLK),
    .D(_001_[1]),
    .Q(parallel_out[1]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(SD_CLK),
    .D(_001_[2]),
    .Q(parallel_out[2]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(SD_CLK),
    .D(_001_[3]),
    .Q(parallel_out[3]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(SD_CLK),
    .D(_001_[4]),
    .Q(parallel_out[4]),
    .R(_031_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(SD_CLK),
    .D(_001_[5]),
    .Q(parallel_out[5]),
    .R(_033_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(SD_CLK),
    .D(_001_[6]),
    .Q(parallel_out[6]),
    .R(_035_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(SD_CLK),
    .D(_001_[7]),
    .Q(parallel_out[7]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(SD_CLK),
    .D(_001_[8]),
    .Q(parallel_out[8]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(SD_CLK),
    .D(_001_[9]),
    .Q(parallel_out[9]),
    .R(_041_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(SD_CLK),
    .D(_001_[10]),
    .Q(parallel_out[10]),
    .R(_042_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(SD_CLK),
    .D(_001_[11]),
    .Q(parallel_out[11]),
    .R(_044_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(SD_CLK),
    .D(_001_[12]),
    .Q(parallel_out[12]),
    .R(_046_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(SD_CLK),
    .D(_001_[13]),
    .Q(parallel_out[13]),
    .R(_048_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(SD_CLK),
    .D(_001_[14]),
    .Q(parallel_out[14]),
    .R(_050_),
    .S(1'b0)
  );
  DFFSR _531_ (
    .C(SD_CLK),
    .D(_001_[15]),
    .Q(parallel_out[15]),
    .R(_051_),
    .S(1'b0)
  );
  DFFSR _532_ (
    .C(SD_CLK),
    .D(_001_[16]),
    .Q(parallel_out[16]),
    .R(_053_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(SD_CLK),
    .D(_001_[17]),
    .Q(parallel_out[17]),
    .R(_055_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(SD_CLK),
    .D(_001_[18]),
    .Q(parallel_out[18]),
    .R(_057_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(SD_CLK),
    .D(_001_[19]),
    .Q(parallel_out[19]),
    .R(_059_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(SD_CLK),
    .D(_001_[20]),
    .Q(parallel_out[20]),
    .R(_060_),
    .S(1'b0)
  );
  DFFSR _537_ (
    .C(SD_CLK),
    .D(_001_[21]),
    .Q(parallel_out[21]),
    .R(_062_),
    .S(1'b0)
  );
  DFFSR _538_ (
    .C(SD_CLK),
    .D(_001_[22]),
    .Q(parallel_out[22]),
    .R(_064_),
    .S(1'b0)
  );
  DFFSR _539_ (
    .C(SD_CLK),
    .D(_001_[23]),
    .Q(parallel_out[23]),
    .R(_066_),
    .S(1'b0)
  );
  DFFSR _540_ (
    .C(SD_CLK),
    .D(_001_[24]),
    .Q(parallel_out[24]),
    .R(_068_),
    .S(1'b0)
  );
  DFFSR _541_ (
    .C(SD_CLK),
    .D(_001_[25]),
    .Q(parallel_out[25]),
    .R(_069_),
    .S(1'b0)
  );
  DFFSR _542_ (
    .C(SD_CLK),
    .D(_001_[26]),
    .Q(parallel_out[26]),
    .R(_071_),
    .S(1'b0)
  );
  DFFSR _543_ (
    .C(SD_CLK),
    .D(_001_[27]),
    .Q(parallel_out[27]),
    .R(_073_),
    .S(1'b0)
  );
  DFFSR _544_ (
    .C(SD_CLK),
    .D(_001_[28]),
    .Q(parallel_out[28]),
    .R(_075_),
    .S(1'b0)
  );
  DFFSR _545_ (
    .C(SD_CLK),
    .D(_001_[29]),
    .Q(parallel_out[29]),
    .R(_077_),
    .S(1'b0)
  );
  DFFSR _546_ (
    .C(SD_CLK),
    .D(_001_[30]),
    .Q(parallel_out[30]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _547_ (
    .C(SD_CLK),
    .D(_001_[31]),
    .Q(parallel_out[31]),
    .R(_080_),
    .S(1'b0)
  );
  DFFSR _548_ (
    .C(SD_CLK),
    .D(_000_[0]),
    .Q(contador[0]),
    .R(_082_),
    .S(1'b0)
  );
  DFFSR _549_ (
    .C(SD_CLK),
    .D(_000_[1]),
    .Q(contador[1]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _550_ (
    .C(SD_CLK),
    .D(_000_[2]),
    .Q(contador[2]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _551_ (
    .C(SD_CLK),
    .D(_000_[3]),
    .Q(contador[3]),
    .R(_087_),
    .S(1'b0)
  );
  DFFSR _552_ (
    .C(SD_CLK),
    .D(_000_[4]),
    .Q(contador[4]),
    .R(_089_),
    .S(1'b0)
  );
  DFFSR _553_ (
    .C(SD_CLK),
    .D(_000_[5]),
    .Q(contador[5]),
    .R(_091_),
    .S(1'b0)
  );
  DFFSR _554_ (
    .C(SD_CLK),
    .D(_000_[6]),
    .Q(contador[6]),
    .R(_093_),
    .S(1'b0)
  );
  DFFSR _555_ (
    .C(SD_CLK),
    .D(_000_[7]),
    .Q(contador[7]),
    .R(_095_),
    .S(1'b0)
  );
  DFFSR _556_ (
    .C(SD_CLK),
    .D(_000_[8]),
    .Q(contador[8]),
    .R(_003_),
    .S(1'b0)
  );
endmodule

module BloqueDATA(CLK, SD_CLK, RESET_L, timeout_Reg_Regs_DATA, writeRead_Regs_DATA, blockCount_Regs_DATA, multipleData_Regs_DATA, timeout_enable_Regs_DATA, FIFO_OK_FIFO_DATA, dataFromFIFO_FIFO_Phy, New_DAT_DMA_DATA, DATA_PIN_IN, writeFIFO_enable_Phy_FIFO, readFIFO_enable_Phy_FIFO, dataReadToFIFO_Phy_FIFO, transfer_complete_DATA_DMA, IO_enable_Phy_SD_CARD, DATA_PIN_OUT, pad_state_Phy_PAD, pad_enable_Phy_PAD);
  input CLK;
  input DATA_PIN_IN;
  output DATA_PIN_OUT;
  input FIFO_OK_FIFO_DATA;
  output IO_enable_Phy_SD_CARD;
  input New_DAT_DMA_DATA;
  input RESET_L;
  input SD_CLK;
  wire ack_IN_Phy_DATA;
  wire ack_OUT_DATA_Phy;
  input [3:0] blockCount_Regs_DATA;
  wire [3:0] blocks_DATA_Phy;
  wire complete_Phy_DATA;
  input [31:0] dataFromFIFO_FIFO_Phy;
  wire [31:0] dataParallel_Phy_PS;
  output [31:0] dataReadToFIFO_Phy_FIFO;
  wire [31:0] data_read_SP_Phy;
  wire enable_pts_Wrapper_Phy_PS;
  wire enable_stp_Wrapper_Phy_SP;
  wire idle_out_DATA_Phy;
  input multipleData_Regs_DATA;
  wire multiple_DATA_Phy;
  output pad_enable_Phy_PAD;
  output pad_state_Phy_PAD;
  output readFIFO_enable_Phy_FIFO;
  wire reception_complete_SP_Phy;
  wire reset_Wrapper_Phy_PS;
  wire serial_Ready_Phy_DATA;
  wire strobe_OUT_DATA_Phy;
  wire timeout_Phy_DATA;
  input [15:0] timeout_Reg_Regs_DATA;
  input timeout_enable_Regs_DATA;
  wire [15:0] timeout_value_DATA_Phy;
  output transfer_complete_DATA_DMA;
  wire transmission_complete_PS_Phy;
  output writeFIFO_enable_Phy_FIFO;
  wire writeReadPhysical_DATA_Phy;
  input writeRead_Regs_DATA;
  DATA_PHYSICAL CapaFisica (
    .IO_enable_Phy_SD_CARD(IO_enable_Phy_SD_CARD),
    .RESET_L(RESET_L),
    .SD_CLK(SD_CLK),
    .ack_IN_DATA_Phy(ack_OUT_DATA_Phy),
    .ack_OUT_Phy_DATA(ack_IN_Phy_DATA),
    .blocks_DATA_Phy(blocks_DATA_Phy),
    .complete_Phy_DATA(complete_Phy_DATA),
    .dataFromFIFO_FIFO_Phy(dataFromFIFO_FIFO_Phy),
    .dataParallel_Phy_PS(dataParallel_Phy_PS),
    .dataReadToFIFO_Phy_FIFO(dataReadToFIFO_Phy_FIFO),
    .data_read_SP_Phy(data_read_SP_Phy),
    .data_timeout_Phy_DATA(timeout_Phy_DATA),
    .enable_pts_Wrapper_Phy_PS(enable_pts_Wrapper_Phy_PS),
    .enable_stp_Wrapper_Phy_SP(enable_stp_Wrapper_Phy_SP),
    .idle_in_DATA_Phy(idle_out_DATA_Phy),
    .multiple_DATA_Phy(multiple_DATA_Phy),
    .pad_enable_Phy_PAD(pad_enable_Phy_PAD),
    .pad_state_Phy_PAD(pad_state_Phy_PAD),
    .readFIFO_enable_Phy_FIFO(readFIFO_enable_Phy_FIFO),
    .reception_complete_SP_Phy(reception_complete_SP_Phy),
    .reset_Wrapper_Phy_PS(reset_Wrapper_Phy_PS),
    .serial_Ready_Phy_DATA(serial_Ready_Phy_DATA),
    .strobe_IN_DATA_Phy(strobe_OUT_DATA_Phy),
    .timeout_Reg_DATA_Phy(timeout_value_DATA_Phy),
    .transmission_complete_PS_Phy(transmission_complete_PS_Phy),
    .writeFIFO_enable_Phy_FIFO(writeFIFO_enable_Phy_FIFO),
    .writeRead_DATA_Phy(writeReadPhysical_DATA_Phy)
  );
  DATA ControlDatos (
    .CLK(CLK),
    .RESET_L(RESET_L),
    .ack_IN_Phy_DATA(ack_IN_Phy_DATA),
    .ack_OUT_DATA_Phy(ack_OUT_DATA_Phy),
    .blockCount_Regs_DATA(blockCount_Regs_DATA),
    .blocks_DATA_Phy(blocks_DATA_Phy),
    .complete_Phy_DATA(complete_Phy_DATA),
    .fifo_OK_FIFO_DATA(FIFO_OK_FIFO_DATA),
    .idle_out_DATA_Phy(idle_out_DATA_Phy),
    .multipleData_Regs_DATA(multipleData_Regs_DATA),
    .multiple_DATA_Phy(multiple_DATA_Phy),
    .new_DAT_DMA_DATA(New_DAT_DMA_DATA),
    .serial_Ready_Phy_DATA(serial_Ready_Phy_DATA),
    .strobe_OUT_DATA_Phy(strobe_OUT_DATA_Phy),
    .timeout_Enable_Regs_DATA(timeout_enable_Regs_DATA),
    .timeout_Phy_DATA(timeout_Phy_DATA),
    .timeout_Reg_Regs_DATA(timeout_Reg_Regs_DATA),
    .timeout_value_DATA_Phy(timeout_value_DATA_Phy),
    .transfer_complete_DATA_DMA(transfer_complete_DATA_DMA),
    .writeReadPhysical_DATA_Phy(writeReadPhysical_DATA_Phy),
    .writeRead_Regs_DATA(writeRead_Regs_DATA)
  );
  PARALLEL_TO_SERIAL convert_paralelo_serial (
    .SD_CLK(SD_CLK),
    .enable_pts(enable_pts_Wrapper_Phy_PS),
    .parallel_complete(transmission_complete_PS_Phy),
    .reset_pts(reset_Wrapper_Phy_PS),
    .signal_in(dataParallel_Phy_PS),
    .signal_out(DATA_PIN_OUT)
  );
  \$paramod\SERIAL_TO_PARALLEL\SIZE=32  convert_serial_paralelo (
    .RESET_L(RESET_L),
    .SD_CLK(SD_CLK),
    .enable_stp(enable_stp_Wrapper_Phy_SP),
    .parallel_out(data_read_SP_Phy),
    .reception_complete(reception_complete_SP_Phy),
    .serial_in(DATA_PIN_IN)
  );
endmodule

module CMD(clk_host, reset_host, new_command, cmd_argument, cmd_index, cmd_complete, cmd_index_error, response, CMD_PIN_OUT, IO_enable_pin, CMD_PIN_IN, clk_SD);
  input CMD_PIN_IN;
  output CMD_PIN_OUT;
  output IO_enable_pin;
  wire ack_control_to_physical;
  wire ack_physic_to_control;
  input clk_SD;
  input clk_host;
  input [31:0] cmd_argument;
  output cmd_complete;
  input [5:0] cmd_index;
  output cmd_index_error;
  wire [39:0] cmd_out_control_to_pts;
  wire end_parallel;
  wire end_serializer;
  wire idle_control_to_physical;
  input new_command;
  wire [135:0] pad_response;
  wire physic_enable_pts;
  wire physic_enable_stp;
  wire physic_reset_pts;
  wire physic_reset_stp;
  input reset_host;
  output [127:0] response;
  wire [135:0] response_to_cmd_in;
  wire strobe_control_to_physical;
  wire strobe_physic_to_control;
  cmd_control cmd_control1 (
    .ack_in(ack_physic_to_control),
    .ack_out(ack_control_to_physical),
    .clk_host(clk_host),
    .cmd_argument(cmd_argument),
    .cmd_complete(cmd_complete),
    .cmd_in(response_to_cmd_in),
    .cmd_index(cmd_index),
    .cmd_index_error(cmd_index_error),
    .cmd_out(cmd_out_control_to_pts),
    .idle_out(idle_control_to_physical),
    .new_command(new_command),
    .reset_host(reset_host),
    .response(response),
    .strobe_in(strobe_physic_to_control),
    .strobe_out(strobe_control_to_physical)
  );
  control_capa_fisica control_capa_fisica1 (
    .ack_in(ack_control_to_physical),
    .ack_out(ack_physic_to_control),
    .clk_SD(clk_SD),
    .enable_pts(physic_enable_pts),
    .enable_stp(physic_enable_stp),
    .idle_in(idle_control_to_physical),
    .load_send(IO_enable_pin),
    .pad_response(pad_response),
    .reception_complete(end_serializer),
    .reset_host(reset_host),
    .reset_pts(physic_reset_pts),
    .reset_stp(physic_reset_stp),
    .response(response_to_cmd_in),
    .strobe_in(strobe_control_to_physical),
    .strobe_out(strobe_physic_to_control),
    .transmission_complete(end_parallel)
  );
  parallel_to_serial parallel_to_serial1 (
    .clk_SD(clk_SD),
    .enable_pts(physic_enable_pts),
    .parallel_complete(end_parallel),
    .reset_pts(physic_reset_pts),
    .signal_in(cmd_out_control_to_pts),
    .signal_out(CMD_PIN_OUT)
  );
  serial_to_parallel serial_to_parallel1 (
    .clk_SD(clk_SD),
    .command(cmd_out_control_to_pts),
    .enable_stp(physic_enable_stp),
    .reset_stp(physic_reset_stp),
    .serial_complete(end_serializer),
    .signal_in(CMD_PIN_IN),
    .signal_out(pad_response)
  );
endmodule

module DATA(CLK, RESET_L, writeRead_Regs_DATA, blockCount_Regs_DATA, multipleData_Regs_DATA, timeout_Enable_Regs_DATA, timeout_Reg_Regs_DATA, new_DAT_DMA_DATA, serial_Ready_Phy_DATA, timeout_Phy_DATA, complete_Phy_DATA, ack_IN_Phy_DATA, fifo_OK_FIFO_DATA, transfer_complete_DATA_DMA, strobe_OUT_DATA_Phy, ack_OUT_DATA_Phy, blocks_DATA_Phy, timeout_value_DATA_Phy, writeReadPhysical_DATA_Phy, multiple_DATA_Phy, idle_out_DATA_Phy);
  wire _0_;
  input CLK;
  input RESET_L;
  wire STATE;
  input ack_IN_Phy_DATA;
  output ack_OUT_DATA_Phy;
  input [3:0] blockCount_Regs_DATA;
  output [3:0] blocks_DATA_Phy;
  input complete_Phy_DATA;
  input fifo_OK_FIFO_DATA;
  output idle_out_DATA_Phy;
  input multipleData_Regs_DATA;
  output multiple_DATA_Phy;
  input new_DAT_DMA_DATA;
  input serial_Ready_Phy_DATA;
  output strobe_OUT_DATA_Phy;
  input timeout_Enable_Regs_DATA;
  input timeout_Phy_DATA;
  input [15:0] timeout_Reg_Regs_DATA;
  output [15:0] timeout_value_DATA_Phy;
  output transfer_complete_DATA_DMA;
  output writeReadPhysical_DATA_Phy;
  input writeRead_Regs_DATA;
  NOT _1_ (
    .A(RESET_L),
    .Y(_0_)
  );
  NOT _2_ (
    .A(STATE),
    .Y(idle_out_DATA_Phy)
  );
  DFF _3_ (
    .C(CLK),
    .D(_0_),
    .Q(STATE)
  );
  \$_DLATCH_P_  _4_ (
    .D(1'b0),
    .E(STATE),
    .Q(timeout_value_DATA_Phy[7])
  );
  assign ack_OUT_DATA_Phy = timeout_value_DATA_Phy[7];
  assign blocks_DATA_Phy = { timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7] };
  assign multiple_DATA_Phy = timeout_value_DATA_Phy[7];
  assign strobe_OUT_DATA_Phy = timeout_value_DATA_Phy[7];
  assign { timeout_value_DATA_Phy[15:8], timeout_value_DATA_Phy[6:0] } = { timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7], timeout_value_DATA_Phy[7] };
  assign transfer_complete_DATA_DMA = timeout_value_DATA_Phy[7];
  assign writeReadPhysical_DATA_Phy = timeout_value_DATA_Phy[7];
endmodule

module DATA_PHYSICAL(SD_CLK, RESET_L, strobe_IN_DATA_Phy, ack_IN_DATA_Phy, timeout_Reg_DATA_Phy, blocks_DATA_Phy, writeRead_DATA_Phy, multiple_DATA_Phy, idle_in_DATA_Phy, transmission_complete_PS_Phy, reception_complete_SP_Phy, data_read_SP_Phy, dataFromFIFO_FIFO_Phy, serial_Ready_Phy_DATA, complete_Phy_DATA, ack_OUT_Phy_DATA, data_timeout_Phy_DATA, reset_Wrapper_Phy_PS, enable_pts_Wrapper_Phy_PS, enable_stp_Wrapper_Phy_SP, dataParallel_Phy_PS, pad_state_Phy_PAD, pad_enable_Phy_PAD, writeFIFO_enable_Phy_FIFO, readFIFO_enable_Phy_FIFO, dataReadToFIFO_Phy_FIFO, IO_enable_Phy_SD_CARD);
  wire _0_;
  wire _1_;
  output IO_enable_Phy_SD_CARD;
  input RESET_L;
  input SD_CLK;
  wire STATE;
  input ack_IN_DATA_Phy;
  output ack_OUT_Phy_DATA;
  input [3:0] blocks_DATA_Phy;
  output complete_Phy_DATA;
  input [31:0] dataFromFIFO_FIFO_Phy;
  output [31:0] dataParallel_Phy_PS;
  output [31:0] dataReadToFIFO_Phy_FIFO;
  input [31:0] data_read_SP_Phy;
  output data_timeout_Phy_DATA;
  output enable_pts_Wrapper_Phy_PS;
  output enable_stp_Wrapper_Phy_SP;
  input idle_in_DATA_Phy;
  input multiple_DATA_Phy;
  output pad_enable_Phy_PAD;
  output pad_state_Phy_PAD;
  output readFIFO_enable_Phy_FIFO;
  input reception_complete_SP_Phy;
  output reset_Wrapper_Phy_PS;
  output serial_Ready_Phy_DATA;
  input strobe_IN_DATA_Phy;
  input [15:0] timeout_Reg_DATA_Phy;
  input transmission_complete_PS_Phy;
  output writeFIFO_enable_Phy_FIFO;
  input writeRead_DATA_Phy;
  NOT _2_ (
    .A(RESET_L),
    .Y(_0_)
  );
  NOT _3_ (
    .A(STATE),
    .Y(serial_Ready_Phy_DATA)
  );
  BUF _4_ (
    .A(STATE),
    .Y(_1_)
  );
  DFF _5_ (
    .C(SD_CLK),
    .D(_0_),
    .Q(STATE)
  );
  \$_DLATCH_P_  _6_ (
    .D(_1_),
    .E(STATE),
    .Q(reset_Wrapper_Phy_PS)
  );
  \$_DLATCH_P_  _7_ (
    .D(1'b0),
    .E(STATE),
    .Q(dataParallel_Phy_PS[24])
  );
  assign IO_enable_Phy_SD_CARD = dataParallel_Phy_PS[24];
  assign ack_OUT_Phy_DATA = dataParallel_Phy_PS[24];
  assign complete_Phy_DATA = dataParallel_Phy_PS[24];
  assign { dataParallel_Phy_PS[31:25], dataParallel_Phy_PS[23:0] } = { dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24] };
  assign dataReadToFIFO_Phy_FIFO = { dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24], dataParallel_Phy_PS[24] };
  assign data_timeout_Phy_DATA = dataParallel_Phy_PS[24];
  assign enable_pts_Wrapper_Phy_PS = dataParallel_Phy_PS[24];
  assign enable_stp_Wrapper_Phy_SP = dataParallel_Phy_PS[24];
  assign pad_enable_Phy_PAD = dataParallel_Phy_PS[24];
  assign pad_state_Phy_PAD = dataParallel_Phy_PS[24];
  assign readFIFO_enable_Phy_FIFO = dataParallel_Phy_PS[24];
  assign writeFIFO_enable_Phy_FIFO = dataParallel_Phy_PS[24];
endmodule

module DMA(clock, reset, req_0, req_1, gnt_0, gnt_1);
  input clock;
  output gnt_0;
  output gnt_1;
  input req_0;
  input req_1;
  input reset;
endmodule

module PARALLEL_TO_SERIAL(enable_pts, reset_pts, SD_CLK, signal_in, signal_out, parallel_complete);
  wire [8:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  input SD_CLK;
  wire [8:0] contador;
  input enable_pts;
  output parallel_complete;
  input reset_pts;
  input [31:0] signal_in;
  output signal_out;
  NOT _166_ (
    .A(reset_pts),
    .Y(_128_)
  );
  NOT _167_ (
    .A(parallel_complete),
    .Y(_129_)
  );
  NOR _168_ (
    .A(enable_pts),
    .B(_129_),
    .Y(_130_)
  );
  NOT _169_ (
    .A(enable_pts),
    .Y(_131_)
  );
  NOR _170_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_132_)
  );
  NOT _171_ (
    .A(_132_),
    .Y(_133_)
  );
  NOR _172_ (
    .A(_133_),
    .B(contador[3]),
    .Y(_134_)
  );
  NOT _173_ (
    .A(contador[7]),
    .Y(_135_)
  );
  NOR _174_ (
    .A(contador[8]),
    .B(contador[4]),
    .Y(_136_)
  );
  NAND _175_ (
    .A(_136_),
    .B(_135_),
    .Y(_137_)
  );
  NOT _176_ (
    .A(contador[2]),
    .Y(_138_)
  );
  NOT _177_ (
    .A(contador[5]),
    .Y(_139_)
  );
  NOR _178_ (
    .A(_139_),
    .B(contador[6]),
    .Y(_140_)
  );
  NAND _179_ (
    .A(_140_),
    .B(_138_),
    .Y(_141_)
  );
  NOR _180_ (
    .A(_141_),
    .B(_137_),
    .Y(_142_)
  );
  NAND _181_ (
    .A(_142_),
    .B(_134_),
    .Y(_143_)
  );
  NOR _182_ (
    .A(_143_),
    .B(_131_),
    .Y(_144_)
  );
  NOR _183_ (
    .A(_144_),
    .B(_130_),
    .Y(_145_)
  );
  NOR _184_ (
    .A(_145_),
    .B(_128_),
    .Y(_001_)
  );
  NOR _185_ (
    .A(_144_),
    .B(_128_),
    .Y(_146_)
  );
  NOT _186_ (
    .A(_146_),
    .Y(_147_)
  );
  NOT _187_ (
    .A(contador[0]),
    .Y(_148_)
  );
  NAND _188_ (
    .A(_148_),
    .B(_131_),
    .Y(_149_)
  );
  NAND _189_ (
    .A(contador[0]),
    .B(enable_pts),
    .Y(_150_)
  );
  NAND _190_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NOR _191_ (
    .A(_151_),
    .B(_147_),
    .Y(_000_[0])
  );
  NOT _192_ (
    .A(contador[1]),
    .Y(_152_)
  );
  NOR _193_ (
    .A(_150_),
    .B(_152_),
    .Y(_153_)
  );
  NAND _194_ (
    .A(_150_),
    .B(_152_),
    .Y(_154_)
  );
  NAND _195_ (
    .A(_154_),
    .B(reset_pts),
    .Y(_155_)
  );
  NOR _196_ (
    .A(_155_),
    .B(_153_),
    .Y(_000_[1])
  );
  NAND _197_ (
    .A(_153_),
    .B(contador[2]),
    .Y(_156_)
  );
  NOT _198_ (
    .A(_156_),
    .Y(_157_)
  );
  NOT _199_ (
    .A(_153_),
    .Y(_158_)
  );
  NAND _200_ (
    .A(_158_),
    .B(_138_),
    .Y(_159_)
  );
  NAND _201_ (
    .A(_159_),
    .B(reset_pts),
    .Y(_160_)
  );
  NOR _202_ (
    .A(_160_),
    .B(_157_),
    .Y(_000_[2])
  );
  NOT _203_ (
    .A(contador[3]),
    .Y(_161_)
  );
  NOR _204_ (
    .A(_156_),
    .B(_161_),
    .Y(_162_)
  );
  NAND _205_ (
    .A(_156_),
    .B(_161_),
    .Y(_163_)
  );
  NAND _206_ (
    .A(_163_),
    .B(reset_pts),
    .Y(_164_)
  );
  NOR _207_ (
    .A(_164_),
    .B(_162_),
    .Y(_000_[3])
  );
  NAND _208_ (
    .A(_162_),
    .B(contador[4]),
    .Y(_165_)
  );
  NOT _209_ (
    .A(_165_),
    .Y(_003_)
  );
  NOT _210_ (
    .A(contador[4]),
    .Y(_004_)
  );
  NOT _211_ (
    .A(_162_),
    .Y(_005_)
  );
  NAND _212_ (
    .A(_005_),
    .B(_004_),
    .Y(_006_)
  );
  NAND _213_ (
    .A(_006_),
    .B(reset_pts),
    .Y(_007_)
  );
  NOR _214_ (
    .A(_007_),
    .B(_003_),
    .Y(_000_[4])
  );
  NOR _215_ (
    .A(_003_),
    .B(contador[5]),
    .Y(_008_)
  );
  NOR _216_ (
    .A(_165_),
    .B(_139_),
    .Y(_009_)
  );
  NOT _217_ (
    .A(_009_),
    .Y(_010_)
  );
  NAND _218_ (
    .A(_010_),
    .B(_146_),
    .Y(_011_)
  );
  NOR _219_ (
    .A(_011_),
    .B(_008_),
    .Y(_000_[5])
  );
  NOR _220_ (
    .A(_009_),
    .B(contador[6]),
    .Y(_012_)
  );
  NAND _221_ (
    .A(_009_),
    .B(contador[6]),
    .Y(_013_)
  );
  NAND _222_ (
    .A(_013_),
    .B(reset_pts),
    .Y(_014_)
  );
  NOR _223_ (
    .A(_014_),
    .B(_012_),
    .Y(_000_[6])
  );
  NOR _224_ (
    .A(_013_),
    .B(_135_),
    .Y(_015_)
  );
  NAND _225_ (
    .A(_013_),
    .B(_135_),
    .Y(_016_)
  );
  NAND _226_ (
    .A(_016_),
    .B(reset_pts),
    .Y(_017_)
  );
  NOR _227_ (
    .A(_017_),
    .B(_015_),
    .Y(_000_[7])
  );
  NOT _228_ (
    .A(contador[8]),
    .Y(_018_)
  );
  NOR _229_ (
    .A(_015_),
    .B(_018_),
    .Y(_019_)
  );
  NOT _230_ (
    .A(_015_),
    .Y(_020_)
  );
  NOR _231_ (
    .A(_020_),
    .B(contador[8]),
    .Y(_021_)
  );
  NOR _232_ (
    .A(_021_),
    .B(_019_),
    .Y(_022_)
  );
  NOR _233_ (
    .A(_022_),
    .B(_128_),
    .Y(_000_[8])
  );
  NOT _234_ (
    .A(signal_out),
    .Y(_023_)
  );
  NOR _235_ (
    .A(_143_),
    .B(_023_),
    .Y(_024_)
  );
  NOR _236_ (
    .A(signal_in[0]),
    .B(_004_),
    .Y(_025_)
  );
  NOR _237_ (
    .A(signal_in[16]),
    .B(contador[4]),
    .Y(_026_)
  );
  NOR _238_ (
    .A(_026_),
    .B(_025_),
    .Y(_027_)
  );
  NOR _239_ (
    .A(_027_),
    .B(_161_),
    .Y(_028_)
  );
  NOR _240_ (
    .A(signal_in[24]),
    .B(contador[4]),
    .Y(_029_)
  );
  NOR _241_ (
    .A(signal_in[8]),
    .B(_004_),
    .Y(_030_)
  );
  NOR _242_ (
    .A(_030_),
    .B(_029_),
    .Y(_031_)
  );
  NOR _243_ (
    .A(_031_),
    .B(contador[3]),
    .Y(_032_)
  );
  NOR _244_ (
    .A(_032_),
    .B(_028_),
    .Y(_033_)
  );
  NOR _245_ (
    .A(_033_),
    .B(_152_),
    .Y(_034_)
  );
  NAND _246_ (
    .A(signal_in[26]),
    .B(_004_),
    .Y(_035_)
  );
  NAND _247_ (
    .A(signal_in[10]),
    .B(contador[4]),
    .Y(_036_)
  );
  NAND _248_ (
    .A(_036_),
    .B(_035_),
    .Y(_037_)
  );
  NOR _249_ (
    .A(_037_),
    .B(contador[3]),
    .Y(_038_)
  );
  NOT _250_ (
    .A(signal_in[2]),
    .Y(_039_)
  );
  NOR _251_ (
    .A(_039_),
    .B(_004_),
    .Y(_040_)
  );
  NAND _252_ (
    .A(signal_in[18]),
    .B(_004_),
    .Y(_041_)
  );
  NAND _253_ (
    .A(_041_),
    .B(contador[3]),
    .Y(_042_)
  );
  NOR _254_ (
    .A(_042_),
    .B(_040_),
    .Y(_043_)
  );
  NOR _255_ (
    .A(_043_),
    .B(_038_),
    .Y(_044_)
  );
  NOR _256_ (
    .A(_044_),
    .B(contador[1]),
    .Y(_045_)
  );
  NOR _257_ (
    .A(_045_),
    .B(_034_),
    .Y(_046_)
  );
  NOR _258_ (
    .A(_046_),
    .B(_138_),
    .Y(_047_)
  );
  NOR _259_ (
    .A(signal_in[4]),
    .B(_004_),
    .Y(_048_)
  );
  NOR _260_ (
    .A(signal_in[20]),
    .B(contador[4]),
    .Y(_049_)
  );
  NOR _261_ (
    .A(_049_),
    .B(_048_),
    .Y(_050_)
  );
  NOR _262_ (
    .A(_050_),
    .B(_161_),
    .Y(_051_)
  );
  NOR _263_ (
    .A(signal_in[28]),
    .B(contador[4]),
    .Y(_052_)
  );
  NOR _264_ (
    .A(signal_in[12]),
    .B(_004_),
    .Y(_053_)
  );
  NOR _265_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _266_ (
    .A(_054_),
    .B(contador[3]),
    .Y(_055_)
  );
  NOR _267_ (
    .A(_055_),
    .B(_051_),
    .Y(_056_)
  );
  NOR _268_ (
    .A(_056_),
    .B(_152_),
    .Y(_057_)
  );
  NAND _269_ (
    .A(signal_in[30]),
    .B(_004_),
    .Y(_058_)
  );
  NAND _270_ (
    .A(signal_in[14]),
    .B(contador[4]),
    .Y(_059_)
  );
  NAND _271_ (
    .A(_059_),
    .B(_058_),
    .Y(_060_)
  );
  NOR _272_ (
    .A(_060_),
    .B(contador[3]),
    .Y(_061_)
  );
  NOT _273_ (
    .A(signal_in[6]),
    .Y(_062_)
  );
  NOR _274_ (
    .A(_062_),
    .B(_004_),
    .Y(_063_)
  );
  NAND _275_ (
    .A(signal_in[22]),
    .B(_004_),
    .Y(_064_)
  );
  NAND _276_ (
    .A(_064_),
    .B(contador[3]),
    .Y(_065_)
  );
  NOR _277_ (
    .A(_065_),
    .B(_063_),
    .Y(_066_)
  );
  NOR _278_ (
    .A(_066_),
    .B(_061_),
    .Y(_067_)
  );
  NOR _279_ (
    .A(_067_),
    .B(contador[1]),
    .Y(_068_)
  );
  NOR _280_ (
    .A(_068_),
    .B(_057_),
    .Y(_069_)
  );
  NOR _281_ (
    .A(_069_),
    .B(contador[2]),
    .Y(_070_)
  );
  NOR _282_ (
    .A(_070_),
    .B(_047_),
    .Y(_071_)
  );
  NOR _283_ (
    .A(_071_),
    .B(_148_),
    .Y(_072_)
  );
  NAND _284_ (
    .A(signal_in[25]),
    .B(_004_),
    .Y(_073_)
  );
  NOT _285_ (
    .A(signal_in[9]),
    .Y(_074_)
  );
  NOR _286_ (
    .A(_074_),
    .B(_004_),
    .Y(_075_)
  );
  NOR _287_ (
    .A(_075_),
    .B(contador[3]),
    .Y(_076_)
  );
  NAND _288_ (
    .A(_076_),
    .B(_073_),
    .Y(_077_)
  );
  NAND _289_ (
    .A(signal_in[1]),
    .B(contador[4]),
    .Y(_078_)
  );
  NOT _290_ (
    .A(signal_in[17]),
    .Y(_079_)
  );
  NOR _291_ (
    .A(_079_),
    .B(contador[4]),
    .Y(_080_)
  );
  NOR _292_ (
    .A(_080_),
    .B(_161_),
    .Y(_081_)
  );
  NAND _293_ (
    .A(_081_),
    .B(_078_),
    .Y(_082_)
  );
  NAND _294_ (
    .A(_082_),
    .B(_077_),
    .Y(_083_)
  );
  NOR _295_ (
    .A(_083_),
    .B(_138_),
    .Y(_084_)
  );
  NAND _296_ (
    .A(signal_in[29]),
    .B(_004_),
    .Y(_085_)
  );
  NAND _297_ (
    .A(signal_in[13]),
    .B(contador[4]),
    .Y(_086_)
  );
  NAND _298_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NOR _299_ (
    .A(_087_),
    .B(contador[3]),
    .Y(_088_)
  );
  NOT _300_ (
    .A(signal_in[5]),
    .Y(_089_)
  );
  NOR _301_ (
    .A(_089_),
    .B(_004_),
    .Y(_090_)
  );
  NAND _302_ (
    .A(signal_in[21]),
    .B(_004_),
    .Y(_091_)
  );
  NAND _303_ (
    .A(_091_),
    .B(contador[3]),
    .Y(_092_)
  );
  NOR _304_ (
    .A(_092_),
    .B(_090_),
    .Y(_093_)
  );
  NOR _305_ (
    .A(_093_),
    .B(_088_),
    .Y(_094_)
  );
  NAND _306_ (
    .A(_094_),
    .B(_138_),
    .Y(_095_)
  );
  NAND _307_ (
    .A(_095_),
    .B(contador[1]),
    .Y(_096_)
  );
  NOR _308_ (
    .A(_096_),
    .B(_084_),
    .Y(_097_)
  );
  NAND _309_ (
    .A(_097_),
    .B(_148_),
    .Y(_098_)
  );
  NOR _310_ (
    .A(signal_in[3]),
    .B(_004_),
    .Y(_099_)
  );
  NOR _311_ (
    .A(signal_in[19]),
    .B(contador[4]),
    .Y(_100_)
  );
  NOR _312_ (
    .A(_100_),
    .B(_099_),
    .Y(_101_)
  );
  NOR _313_ (
    .A(_101_),
    .B(_161_),
    .Y(_102_)
  );
  NOR _314_ (
    .A(signal_in[27]),
    .B(contador[4]),
    .Y(_103_)
  );
  NOR _315_ (
    .A(signal_in[11]),
    .B(_004_),
    .Y(_104_)
  );
  NOR _316_ (
    .A(_104_),
    .B(_103_),
    .Y(_105_)
  );
  NOR _317_ (
    .A(_105_),
    .B(contador[3]),
    .Y(_106_)
  );
  NOR _318_ (
    .A(_106_),
    .B(_102_),
    .Y(_107_)
  );
  NOR _319_ (
    .A(_107_),
    .B(_138_),
    .Y(_108_)
  );
  NOR _320_ (
    .A(signal_in[7]),
    .B(_004_),
    .Y(_109_)
  );
  NOR _321_ (
    .A(signal_in[23]),
    .B(contador[4]),
    .Y(_110_)
  );
  NOR _322_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _323_ (
    .A(_111_),
    .B(_161_),
    .Y(_112_)
  );
  NOR _324_ (
    .A(signal_in[31]),
    .B(contador[4]),
    .Y(_113_)
  );
  NOR _325_ (
    .A(signal_in[15]),
    .B(_004_),
    .Y(_114_)
  );
  NOR _326_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _327_ (
    .A(_115_),
    .B(contador[3]),
    .Y(_116_)
  );
  NOR _328_ (
    .A(_116_),
    .B(_112_),
    .Y(_117_)
  );
  NOR _329_ (
    .A(_117_),
    .B(contador[2]),
    .Y(_118_)
  );
  NOR _330_ (
    .A(_118_),
    .B(_108_),
    .Y(_119_)
  );
  NOR _331_ (
    .A(_119_),
    .B(_133_),
    .Y(_120_)
  );
  NOT _332_ (
    .A(contador[6]),
    .Y(_121_)
  );
  NAND _333_ (
    .A(_139_),
    .B(_121_),
    .Y(_122_)
  );
  NOR _334_ (
    .A(_122_),
    .B(_120_),
    .Y(_123_)
  );
  NAND _335_ (
    .A(_123_),
    .B(_098_),
    .Y(_124_)
  );
  NOR _336_ (
    .A(_124_),
    .B(_072_),
    .Y(_125_)
  );
  NOR _337_ (
    .A(_125_),
    .B(_024_),
    .Y(_126_)
  );
  NAND _338_ (
    .A(reset_pts),
    .B(enable_pts),
    .Y(_127_)
  );
  NOR _339_ (
    .A(_127_),
    .B(_126_),
    .Y(_002_)
  );
  DFF _340_ (
    .C(SD_CLK),
    .D(_002_),
    .Q(signal_out)
  );
  DFF _341_ (
    .C(SD_CLK),
    .D(_001_),
    .Q(parallel_complete)
  );
  DFF _342_ (
    .C(SD_CLK),
    .D(_000_[0]),
    .Q(contador[0])
  );
  DFF _343_ (
    .C(SD_CLK),
    .D(_000_[1]),
    .Q(contador[1])
  );
  DFF _344_ (
    .C(SD_CLK),
    .D(_000_[2]),
    .Q(contador[2])
  );
  DFF _345_ (
    .C(SD_CLK),
    .D(_000_[3]),
    .Q(contador[3])
  );
  DFF _346_ (
    .C(SD_CLK),
    .D(_000_[4]),
    .Q(contador[4])
  );
  DFF _347_ (
    .C(SD_CLK),
    .D(_000_[5]),
    .Q(contador[5])
  );
  DFF _348_ (
    .C(SD_CLK),
    .D(_000_[6]),
    .Q(contador[6])
  );
  DFF _349_ (
    .C(SD_CLK),
    .D(_000_[7]),
    .Q(contador[7])
  );
  DFF _350_ (
    .C(SD_CLK),
    .D(_000_[8]),
    .Q(contador[8])
  );
endmodule

module SERIAL_TO_PARALLEL(serial_in, enable_stp, SD_CLK, RESET_L, reception_complete, parallel_out);
  wire [8:0] _000_;
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  input RESET_L;
  input SD_CLK;
  wire [8:0] contador;
  input enable_stp;
  output [31:0] parallel_out;
  output reception_complete;
  input serial_in;
  NOT _238_ (
    .A(RESET_L),
    .Y(_237_)
  );
  NOT _239_ (
    .A(enable_stp),
    .Y(_003_)
  );
  NAND _240_ (
    .A(_003_),
    .B(reception_complete),
    .Y(_004_)
  );
  NOR _241_ (
    .A(contador[8]),
    .B(contador[7]),
    .Y(_005_)
  );
  NAND _242_ (
    .A(_005_),
    .B(contador[5]),
    .Y(_006_)
  );
  NOR _243_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_007_)
  );
  NOT _244_ (
    .A(contador[2]),
    .Y(_008_)
  );
  NOT _245_ (
    .A(contador[3]),
    .Y(_009_)
  );
  NAND _246_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NOT _247_ (
    .A(contador[4]),
    .Y(_011_)
  );
  NOT _248_ (
    .A(contador[6]),
    .Y(_012_)
  );
  NAND _249_ (
    .A(_012_),
    .B(_011_),
    .Y(_013_)
  );
  NOR _250_ (
    .A(_013_),
    .B(_010_),
    .Y(_014_)
  );
  NAND _251_ (
    .A(_014_),
    .B(_007_),
    .Y(_015_)
  );
  NOR _252_ (
    .A(_015_),
    .B(_006_),
    .Y(_016_)
  );
  NAND _253_ (
    .A(_016_),
    .B(enable_stp),
    .Y(_017_)
  );
  NAND _254_ (
    .A(_017_),
    .B(_004_),
    .Y(_002_)
  );
  NOT _255_ (
    .A(parallel_out[1]),
    .Y(_018_)
  );
  NOR _256_ (
    .A(_016_),
    .B(_018_),
    .Y(_019_)
  );
  NOT _257_ (
    .A(parallel_out[0]),
    .Y(_021_)
  );
  NOT _258_ (
    .A(_006_),
    .Y(_023_)
  );
  NOT _259_ (
    .A(_007_),
    .Y(_024_)
  );
  NOR _260_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_026_)
  );
  NOR _261_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_028_)
  );
  NAND _262_ (
    .A(_028_),
    .B(_026_),
    .Y(_030_)
  );
  NOR _263_ (
    .A(_030_),
    .B(_024_),
    .Y(_032_)
  );
  NAND _264_ (
    .A(_032_),
    .B(_023_),
    .Y(_033_)
  );
  NOR _265_ (
    .A(_033_),
    .B(_021_),
    .Y(_034_)
  );
  NOR _266_ (
    .A(_034_),
    .B(_019_),
    .Y(_035_)
  );
  NOR _267_ (
    .A(_035_),
    .B(_003_),
    .Y(_001_[0])
  );
  NOT _268_ (
    .A(parallel_out[2]),
    .Y(_038_)
  );
  NOR _269_ (
    .A(_016_),
    .B(_038_),
    .Y(_040_)
  );
  NOR _270_ (
    .A(_033_),
    .B(_018_),
    .Y(_042_)
  );
  NOR _271_ (
    .A(_042_),
    .B(_040_),
    .Y(_043_)
  );
  NOR _272_ (
    .A(_043_),
    .B(_003_),
    .Y(_001_[1])
  );
  NOT _273_ (
    .A(parallel_out[3]),
    .Y(_044_)
  );
  NOR _274_ (
    .A(_016_),
    .B(_044_),
    .Y(_045_)
  );
  NOR _275_ (
    .A(_033_),
    .B(_038_),
    .Y(_046_)
  );
  NOR _276_ (
    .A(_046_),
    .B(_045_),
    .Y(_047_)
  );
  NOR _277_ (
    .A(_047_),
    .B(_003_),
    .Y(_001_[2])
  );
  NOT _278_ (
    .A(parallel_out[4]),
    .Y(_048_)
  );
  NOR _279_ (
    .A(_016_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _280_ (
    .A(_033_),
    .B(_044_),
    .Y(_050_)
  );
  NOR _281_ (
    .A(_050_),
    .B(_049_),
    .Y(_051_)
  );
  NOR _282_ (
    .A(_051_),
    .B(_003_),
    .Y(_001_[3])
  );
  NOT _283_ (
    .A(parallel_out[5]),
    .Y(_052_)
  );
  NOR _284_ (
    .A(_016_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _285_ (
    .A(_033_),
    .B(_048_),
    .Y(_054_)
  );
  NOR _286_ (
    .A(_054_),
    .B(_053_),
    .Y(_055_)
  );
  NOR _287_ (
    .A(_055_),
    .B(_003_),
    .Y(_001_[4])
  );
  NOT _288_ (
    .A(parallel_out[6]),
    .Y(_056_)
  );
  NOR _289_ (
    .A(_016_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _290_ (
    .A(_033_),
    .B(_052_),
    .Y(_058_)
  );
  NOR _291_ (
    .A(_058_),
    .B(_057_),
    .Y(_059_)
  );
  NOR _292_ (
    .A(_059_),
    .B(_003_),
    .Y(_001_[5])
  );
  NOT _293_ (
    .A(parallel_out[7]),
    .Y(_060_)
  );
  NOR _294_ (
    .A(_016_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _295_ (
    .A(_033_),
    .B(_056_),
    .Y(_062_)
  );
  NOR _296_ (
    .A(_062_),
    .B(_061_),
    .Y(_063_)
  );
  NOR _297_ (
    .A(_063_),
    .B(_003_),
    .Y(_001_[6])
  );
  NOT _298_ (
    .A(parallel_out[8]),
    .Y(_064_)
  );
  NOR _299_ (
    .A(_016_),
    .B(_064_),
    .Y(_065_)
  );
  NOR _300_ (
    .A(_033_),
    .B(_060_),
    .Y(_066_)
  );
  NOR _301_ (
    .A(_066_),
    .B(_065_),
    .Y(_067_)
  );
  NOR _302_ (
    .A(_067_),
    .B(_003_),
    .Y(_001_[7])
  );
  NOT _303_ (
    .A(parallel_out[9]),
    .Y(_068_)
  );
  NOR _304_ (
    .A(_016_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _305_ (
    .A(_033_),
    .B(_064_),
    .Y(_070_)
  );
  NOR _306_ (
    .A(_070_),
    .B(_069_),
    .Y(_071_)
  );
  NOR _307_ (
    .A(_071_),
    .B(_003_),
    .Y(_001_[8])
  );
  NOT _308_ (
    .A(parallel_out[10]),
    .Y(_072_)
  );
  NOR _309_ (
    .A(_016_),
    .B(_072_),
    .Y(_073_)
  );
  NOR _310_ (
    .A(_033_),
    .B(_068_),
    .Y(_074_)
  );
  NOR _311_ (
    .A(_074_),
    .B(_073_),
    .Y(_075_)
  );
  NOR _312_ (
    .A(_075_),
    .B(_003_),
    .Y(_001_[9])
  );
  NOT _313_ (
    .A(parallel_out[11]),
    .Y(_076_)
  );
  NOR _314_ (
    .A(_016_),
    .B(_076_),
    .Y(_077_)
  );
  NOR _315_ (
    .A(_033_),
    .B(_072_),
    .Y(_078_)
  );
  NOR _316_ (
    .A(_078_),
    .B(_077_),
    .Y(_079_)
  );
  NOR _317_ (
    .A(_079_),
    .B(_003_),
    .Y(_001_[10])
  );
  NOT _318_ (
    .A(parallel_out[12]),
    .Y(_080_)
  );
  NOR _319_ (
    .A(_016_),
    .B(_080_),
    .Y(_081_)
  );
  NOR _320_ (
    .A(_033_),
    .B(_076_),
    .Y(_082_)
  );
  NOR _321_ (
    .A(_082_),
    .B(_081_),
    .Y(_083_)
  );
  NOR _322_ (
    .A(_083_),
    .B(_003_),
    .Y(_001_[11])
  );
  NOT _323_ (
    .A(parallel_out[13]),
    .Y(_084_)
  );
  NOR _324_ (
    .A(_016_),
    .B(_084_),
    .Y(_085_)
  );
  NOR _325_ (
    .A(_033_),
    .B(_080_),
    .Y(_086_)
  );
  NOR _326_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NOR _327_ (
    .A(_087_),
    .B(_003_),
    .Y(_001_[12])
  );
  NOT _328_ (
    .A(parallel_out[14]),
    .Y(_088_)
  );
  NOR _329_ (
    .A(_016_),
    .B(_088_),
    .Y(_089_)
  );
  NOR _330_ (
    .A(_033_),
    .B(_084_),
    .Y(_090_)
  );
  NOR _331_ (
    .A(_090_),
    .B(_089_),
    .Y(_091_)
  );
  NOR _332_ (
    .A(_091_),
    .B(_003_),
    .Y(_001_[13])
  );
  NOT _333_ (
    .A(parallel_out[15]),
    .Y(_092_)
  );
  NOR _334_ (
    .A(_016_),
    .B(_092_),
    .Y(_093_)
  );
  NOR _335_ (
    .A(_033_),
    .B(_088_),
    .Y(_094_)
  );
  NOR _336_ (
    .A(_094_),
    .B(_093_),
    .Y(_095_)
  );
  NOR _337_ (
    .A(_095_),
    .B(_003_),
    .Y(_001_[14])
  );
  NOT _338_ (
    .A(parallel_out[16]),
    .Y(_096_)
  );
  NOR _339_ (
    .A(_016_),
    .B(_096_),
    .Y(_097_)
  );
  NOR _340_ (
    .A(_033_),
    .B(_092_),
    .Y(_098_)
  );
  NOR _341_ (
    .A(_098_),
    .B(_097_),
    .Y(_099_)
  );
  NOR _342_ (
    .A(_099_),
    .B(_003_),
    .Y(_001_[15])
  );
  NOT _343_ (
    .A(parallel_out[17]),
    .Y(_100_)
  );
  NOR _344_ (
    .A(_016_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _345_ (
    .A(_033_),
    .B(_096_),
    .Y(_102_)
  );
  NOR _346_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR _347_ (
    .A(_103_),
    .B(_003_),
    .Y(_001_[16])
  );
  NOT _348_ (
    .A(parallel_out[18]),
    .Y(_104_)
  );
  NOR _349_ (
    .A(_016_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _350_ (
    .A(_033_),
    .B(_100_),
    .Y(_106_)
  );
  NOR _351_ (
    .A(_106_),
    .B(_105_),
    .Y(_107_)
  );
  NOR _352_ (
    .A(_107_),
    .B(_003_),
    .Y(_001_[17])
  );
  NOT _353_ (
    .A(parallel_out[19]),
    .Y(_108_)
  );
  NOR _354_ (
    .A(_016_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _355_ (
    .A(_033_),
    .B(_104_),
    .Y(_110_)
  );
  NOR _356_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _357_ (
    .A(_111_),
    .B(_003_),
    .Y(_001_[18])
  );
  NOT _358_ (
    .A(parallel_out[20]),
    .Y(_112_)
  );
  NOR _359_ (
    .A(_016_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _360_ (
    .A(_033_),
    .B(_108_),
    .Y(_114_)
  );
  NOR _361_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NOR _362_ (
    .A(_115_),
    .B(_003_),
    .Y(_001_[19])
  );
  NOT _363_ (
    .A(parallel_out[21]),
    .Y(_116_)
  );
  NOR _364_ (
    .A(_016_),
    .B(_116_),
    .Y(_117_)
  );
  NOR _365_ (
    .A(_033_),
    .B(_112_),
    .Y(_118_)
  );
  NOR _366_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NOR _367_ (
    .A(_119_),
    .B(_003_),
    .Y(_001_[20])
  );
  NOT _368_ (
    .A(parallel_out[22]),
    .Y(_120_)
  );
  NOR _369_ (
    .A(_016_),
    .B(_120_),
    .Y(_121_)
  );
  NOR _370_ (
    .A(_033_),
    .B(_116_),
    .Y(_122_)
  );
  NOR _371_ (
    .A(_122_),
    .B(_121_),
    .Y(_123_)
  );
  NOR _372_ (
    .A(_123_),
    .B(_003_),
    .Y(_001_[21])
  );
  NOT _373_ (
    .A(parallel_out[23]),
    .Y(_124_)
  );
  NOR _374_ (
    .A(_016_),
    .B(_124_),
    .Y(_125_)
  );
  NOR _375_ (
    .A(_033_),
    .B(_120_),
    .Y(_126_)
  );
  NOR _376_ (
    .A(_126_),
    .B(_125_),
    .Y(_127_)
  );
  NOR _377_ (
    .A(_127_),
    .B(_003_),
    .Y(_001_[22])
  );
  NOT _378_ (
    .A(parallel_out[24]),
    .Y(_128_)
  );
  NOR _379_ (
    .A(_016_),
    .B(_128_),
    .Y(_129_)
  );
  NOR _380_ (
    .A(_033_),
    .B(_124_),
    .Y(_130_)
  );
  NOR _381_ (
    .A(_130_),
    .B(_129_),
    .Y(_131_)
  );
  NOR _382_ (
    .A(_131_),
    .B(_003_),
    .Y(_001_[23])
  );
  NOT _383_ (
    .A(parallel_out[25]),
    .Y(_132_)
  );
  NOR _384_ (
    .A(_016_),
    .B(_132_),
    .Y(_133_)
  );
  NOR _385_ (
    .A(_033_),
    .B(_128_),
    .Y(_134_)
  );
  NOR _386_ (
    .A(_134_),
    .B(_133_),
    .Y(_135_)
  );
  NOR _387_ (
    .A(_135_),
    .B(_003_),
    .Y(_001_[24])
  );
  NOT _388_ (
    .A(parallel_out[26]),
    .Y(_136_)
  );
  NOR _389_ (
    .A(_016_),
    .B(_136_),
    .Y(_137_)
  );
  NOR _390_ (
    .A(_033_),
    .B(_132_),
    .Y(_138_)
  );
  NOR _391_ (
    .A(_138_),
    .B(_137_),
    .Y(_139_)
  );
  NOR _392_ (
    .A(_139_),
    .B(_003_),
    .Y(_001_[25])
  );
  NOT _393_ (
    .A(parallel_out[27]),
    .Y(_140_)
  );
  NOR _394_ (
    .A(_016_),
    .B(_140_),
    .Y(_141_)
  );
  NOR _395_ (
    .A(_033_),
    .B(_136_),
    .Y(_142_)
  );
  NOR _396_ (
    .A(_142_),
    .B(_141_),
    .Y(_143_)
  );
  NOR _397_ (
    .A(_143_),
    .B(_003_),
    .Y(_001_[26])
  );
  NOT _398_ (
    .A(parallel_out[28]),
    .Y(_144_)
  );
  NOR _399_ (
    .A(_016_),
    .B(_144_),
    .Y(_145_)
  );
  NOR _400_ (
    .A(_033_),
    .B(_140_),
    .Y(_146_)
  );
  NOR _401_ (
    .A(_146_),
    .B(_145_),
    .Y(_147_)
  );
  NOR _402_ (
    .A(_147_),
    .B(_003_),
    .Y(_001_[27])
  );
  NOT _403_ (
    .A(parallel_out[29]),
    .Y(_148_)
  );
  NOR _404_ (
    .A(_016_),
    .B(_148_),
    .Y(_149_)
  );
  NOR _405_ (
    .A(_033_),
    .B(_144_),
    .Y(_150_)
  );
  NOR _406_ (
    .A(_150_),
    .B(_149_),
    .Y(_151_)
  );
  NOR _407_ (
    .A(_151_),
    .B(_003_),
    .Y(_001_[28])
  );
  NOT _408_ (
    .A(parallel_out[30]),
    .Y(_152_)
  );
  NOR _409_ (
    .A(_016_),
    .B(_152_),
    .Y(_153_)
  );
  NOR _410_ (
    .A(_033_),
    .B(_148_),
    .Y(_154_)
  );
  NOR _411_ (
    .A(_154_),
    .B(_153_),
    .Y(_155_)
  );
  NOR _412_ (
    .A(_155_),
    .B(_003_),
    .Y(_001_[29])
  );
  NOT _413_ (
    .A(parallel_out[31]),
    .Y(_156_)
  );
  NOR _414_ (
    .A(_016_),
    .B(_156_),
    .Y(_157_)
  );
  NOR _415_ (
    .A(_033_),
    .B(_152_),
    .Y(_158_)
  );
  NOR _416_ (
    .A(_158_),
    .B(_157_),
    .Y(_159_)
  );
  NOR _417_ (
    .A(_159_),
    .B(_003_),
    .Y(_001_[30])
  );
  NOT _418_ (
    .A(serial_in),
    .Y(_160_)
  );
  NOR _419_ (
    .A(_016_),
    .B(_160_),
    .Y(_161_)
  );
  NOR _420_ (
    .A(_033_),
    .B(_156_),
    .Y(_162_)
  );
  NOR _421_ (
    .A(_162_),
    .B(_161_),
    .Y(_163_)
  );
  NOR _422_ (
    .A(_163_),
    .B(_003_),
    .Y(_001_[31])
  );
  NAND _423_ (
    .A(contador[0]),
    .B(_003_),
    .Y(_164_)
  );
  NOR _424_ (
    .A(_016_),
    .B(contador[0]),
    .Y(_165_)
  );
  NAND _425_ (
    .A(_165_),
    .B(enable_stp),
    .Y(_166_)
  );
  NAND _426_ (
    .A(_166_),
    .B(_164_),
    .Y(_000_[0])
  );
  NOT _427_ (
    .A(contador[0]),
    .Y(_167_)
  );
  NOT _428_ (
    .A(contador[1]),
    .Y(_168_)
  );
  NOR _429_ (
    .A(_168_),
    .B(_167_),
    .Y(_169_)
  );
  NOR _430_ (
    .A(_169_),
    .B(_007_),
    .Y(_170_)
  );
  NOR _431_ (
    .A(_170_),
    .B(_003_),
    .Y(_171_)
  );
  NOR _432_ (
    .A(contador[1]),
    .B(enable_stp),
    .Y(_172_)
  );
  NOR _433_ (
    .A(_172_),
    .B(_171_),
    .Y(_000_[1])
  );
  NAND _434_ (
    .A(_169_),
    .B(enable_stp),
    .Y(_173_)
  );
  NOR _435_ (
    .A(_173_),
    .B(_008_),
    .Y(_174_)
  );
  NAND _436_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_175_)
  );
  NOR _437_ (
    .A(_175_),
    .B(_003_),
    .Y(_176_)
  );
  NOR _438_ (
    .A(_176_),
    .B(contador[2]),
    .Y(_177_)
  );
  NOR _439_ (
    .A(_177_),
    .B(_174_),
    .Y(_000_[2])
  );
  NOR _440_ (
    .A(_174_),
    .B(contador[3]),
    .Y(_178_)
  );
  NAND _441_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_179_)
  );
  NOR _442_ (
    .A(_179_),
    .B(_173_),
    .Y(_180_)
  );
  NOR _443_ (
    .A(_180_),
    .B(_178_),
    .Y(_000_[3])
  );
  NOR _444_ (
    .A(_180_),
    .B(contador[4]),
    .Y(_181_)
  );
  NOT _445_ (
    .A(_179_),
    .Y(_182_)
  );
  NAND _446_ (
    .A(_182_),
    .B(_176_),
    .Y(_183_)
  );
  NOR _447_ (
    .A(_183_),
    .B(_011_),
    .Y(_184_)
  );
  NOR _448_ (
    .A(_184_),
    .B(_181_),
    .Y(_000_[4])
  );
  NOR _449_ (
    .A(_184_),
    .B(contador[5]),
    .Y(_185_)
  );
  NAND _450_ (
    .A(_184_),
    .B(contador[5]),
    .Y(_186_)
  );
  NAND _451_ (
    .A(_186_),
    .B(_017_),
    .Y(_187_)
  );
  NOR _452_ (
    .A(_187_),
    .B(_185_),
    .Y(_000_[5])
  );
  NAND _453_ (
    .A(_186_),
    .B(contador[6]),
    .Y(_188_)
  );
  NOT _454_ (
    .A(contador[5]),
    .Y(_189_)
  );
  NAND _455_ (
    .A(_180_),
    .B(contador[4]),
    .Y(_190_)
  );
  NOR _456_ (
    .A(_190_),
    .B(_189_),
    .Y(_191_)
  );
  NAND _457_ (
    .A(_191_),
    .B(_012_),
    .Y(_192_)
  );
  NAND _458_ (
    .A(_192_),
    .B(_188_),
    .Y(_000_[6])
  );
  NOT _459_ (
    .A(contador[7]),
    .Y(_193_)
  );
  NOR _460_ (
    .A(_179_),
    .B(_175_),
    .Y(_194_)
  );
  NAND _461_ (
    .A(contador[6]),
    .B(contador[4]),
    .Y(_195_)
  );
  NAND _462_ (
    .A(contador[5]),
    .B(enable_stp),
    .Y(_196_)
  );
  NOR _463_ (
    .A(_196_),
    .B(_195_),
    .Y(_197_)
  );
  NAND _464_ (
    .A(_197_),
    .B(_194_),
    .Y(_198_)
  );
  NOR _465_ (
    .A(_198_),
    .B(_193_),
    .Y(_199_)
  );
  NOT _466_ (
    .A(_198_),
    .Y(_200_)
  );
  NOR _467_ (
    .A(_200_),
    .B(contador[7]),
    .Y(_201_)
  );
  NOR _468_ (
    .A(_201_),
    .B(_199_),
    .Y(_000_[7])
  );
  NOR _469_ (
    .A(_199_),
    .B(contador[8]),
    .Y(_202_)
  );
  NOT _470_ (
    .A(contador[8]),
    .Y(_203_)
  );
  NOT _471_ (
    .A(_199_),
    .Y(_204_)
  );
  NOR _472_ (
    .A(_204_),
    .B(_203_),
    .Y(_205_)
  );
  NOR _473_ (
    .A(_205_),
    .B(_202_),
    .Y(_000_[8])
  );
  BUF _474_ (
    .A(_237_),
    .Y(_020_)
  );
  BUF _475_ (
    .A(_237_),
    .Y(_022_)
  );
  BUF _476_ (
    .A(_237_),
    .Y(_206_)
  );
  BUF _477_ (
    .A(_237_),
    .Y(_025_)
  );
  BUF _478_ (
    .A(_237_),
    .Y(_027_)
  );
  BUF _479_ (
    .A(_237_),
    .Y(_029_)
  );
  BUF _480_ (
    .A(_237_),
    .Y(_031_)
  );
  BUF _481_ (
    .A(_237_),
    .Y(_207_)
  );
  BUF _482_ (
    .A(_237_),
    .Y(_208_)
  );
  BUF _483_ (
    .A(_237_),
    .Y(_209_)
  );
  BUF _484_ (
    .A(_237_),
    .Y(_036_)
  );
  BUF _485_ (
    .A(_237_),
    .Y(_037_)
  );
  BUF _486_ (
    .A(_237_),
    .Y(_039_)
  );
  BUF _487_ (
    .A(_237_),
    .Y(_041_)
  );
  BUF _488_ (
    .A(_237_),
    .Y(_210_)
  );
  BUF _489_ (
    .A(_237_),
    .Y(_211_)
  );
  BUF _490_ (
    .A(_237_),
    .Y(_212_)
  );
  BUF _491_ (
    .A(_237_),
    .Y(_213_)
  );
  BUF _492_ (
    .A(_237_),
    .Y(_214_)
  );
  BUF _493_ (
    .A(_237_),
    .Y(_215_)
  );
  BUF _494_ (
    .A(_237_),
    .Y(_216_)
  );
  BUF _495_ (
    .A(_237_),
    .Y(_217_)
  );
  BUF _496_ (
    .A(_237_),
    .Y(_218_)
  );
  BUF _497_ (
    .A(_237_),
    .Y(_219_)
  );
  BUF _498_ (
    .A(_237_),
    .Y(_220_)
  );
  BUF _499_ (
    .A(_237_),
    .Y(_221_)
  );
  BUF _500_ (
    .A(_237_),
    .Y(_222_)
  );
  BUF _501_ (
    .A(_237_),
    .Y(_223_)
  );
  BUF _502_ (
    .A(_237_),
    .Y(_224_)
  );
  BUF _503_ (
    .A(_237_),
    .Y(_225_)
  );
  BUF _504_ (
    .A(_237_),
    .Y(_226_)
  );
  BUF _505_ (
    .A(_237_),
    .Y(_227_)
  );
  BUF _506_ (
    .A(_237_),
    .Y(_228_)
  );
  BUF _507_ (
    .A(_237_),
    .Y(_229_)
  );
  BUF _508_ (
    .A(_237_),
    .Y(_230_)
  );
  BUF _509_ (
    .A(_237_),
    .Y(_231_)
  );
  BUF _510_ (
    .A(_237_),
    .Y(_232_)
  );
  BUF _511_ (
    .A(_237_),
    .Y(_233_)
  );
  BUF _512_ (
    .A(_237_),
    .Y(_234_)
  );
  BUF _513_ (
    .A(_237_),
    .Y(_235_)
  );
  BUF _514_ (
    .A(_237_),
    .Y(_236_)
  );
  DFFSR _515_ (
    .C(SD_CLK),
    .D(_002_),
    .Q(reception_complete),
    .R(_020_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(SD_CLK),
    .D(_001_[0]),
    .Q(parallel_out[0]),
    .R(_022_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(SD_CLK),
    .D(_001_[1]),
    .Q(parallel_out[1]),
    .R(_206_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(SD_CLK),
    .D(_001_[2]),
    .Q(parallel_out[2]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(SD_CLK),
    .D(_001_[3]),
    .Q(parallel_out[3]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(SD_CLK),
    .D(_001_[4]),
    .Q(parallel_out[4]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(SD_CLK),
    .D(_001_[5]),
    .Q(parallel_out[5]),
    .R(_031_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(SD_CLK),
    .D(_001_[6]),
    .Q(parallel_out[6]),
    .R(_207_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(SD_CLK),
    .D(_001_[7]),
    .Q(parallel_out[7]),
    .R(_208_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(SD_CLK),
    .D(_001_[8]),
    .Q(parallel_out[8]),
    .R(_209_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(SD_CLK),
    .D(_001_[9]),
    .Q(parallel_out[9]),
    .R(_036_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(SD_CLK),
    .D(_001_[10]),
    .Q(parallel_out[10]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(SD_CLK),
    .D(_001_[11]),
    .Q(parallel_out[11]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(SD_CLK),
    .D(_001_[12]),
    .Q(parallel_out[12]),
    .R(_041_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(SD_CLK),
    .D(_001_[13]),
    .Q(parallel_out[13]),
    .R(_210_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(SD_CLK),
    .D(_001_[14]),
    .Q(parallel_out[14]),
    .R(_211_),
    .S(1'b0)
  );
  DFFSR _531_ (
    .C(SD_CLK),
    .D(_001_[15]),
    .Q(parallel_out[15]),
    .R(_212_),
    .S(1'b0)
  );
  DFFSR _532_ (
    .C(SD_CLK),
    .D(_001_[16]),
    .Q(parallel_out[16]),
    .R(_213_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(SD_CLK),
    .D(_001_[17]),
    .Q(parallel_out[17]),
    .R(_214_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(SD_CLK),
    .D(_001_[18]),
    .Q(parallel_out[18]),
    .R(_215_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(SD_CLK),
    .D(_001_[19]),
    .Q(parallel_out[19]),
    .R(_216_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(SD_CLK),
    .D(_001_[20]),
    .Q(parallel_out[20]),
    .R(_217_),
    .S(1'b0)
  );
  DFFSR _537_ (
    .C(SD_CLK),
    .D(_001_[21]),
    .Q(parallel_out[21]),
    .R(_218_),
    .S(1'b0)
  );
  DFFSR _538_ (
    .C(SD_CLK),
    .D(_001_[22]),
    .Q(parallel_out[22]),
    .R(_219_),
    .S(1'b0)
  );
  DFFSR _539_ (
    .C(SD_CLK),
    .D(_001_[23]),
    .Q(parallel_out[23]),
    .R(_220_),
    .S(1'b0)
  );
  DFFSR _540_ (
    .C(SD_CLK),
    .D(_001_[24]),
    .Q(parallel_out[24]),
    .R(_221_),
    .S(1'b0)
  );
  DFFSR _541_ (
    .C(SD_CLK),
    .D(_001_[25]),
    .Q(parallel_out[25]),
    .R(_222_),
    .S(1'b0)
  );
  DFFSR _542_ (
    .C(SD_CLK),
    .D(_001_[26]),
    .Q(parallel_out[26]),
    .R(_223_),
    .S(1'b0)
  );
  DFFSR _543_ (
    .C(SD_CLK),
    .D(_001_[27]),
    .Q(parallel_out[27]),
    .R(_224_),
    .S(1'b0)
  );
  DFFSR _544_ (
    .C(SD_CLK),
    .D(_001_[28]),
    .Q(parallel_out[28]),
    .R(_225_),
    .S(1'b0)
  );
  DFFSR _545_ (
    .C(SD_CLK),
    .D(_001_[29]),
    .Q(parallel_out[29]),
    .R(_226_),
    .S(1'b0)
  );
  DFFSR _546_ (
    .C(SD_CLK),
    .D(_001_[30]),
    .Q(parallel_out[30]),
    .R(_227_),
    .S(1'b0)
  );
  DFFSR _547_ (
    .C(SD_CLK),
    .D(_001_[31]),
    .Q(parallel_out[31]),
    .R(_228_),
    .S(1'b0)
  );
  DFFSR _548_ (
    .C(SD_CLK),
    .D(_000_[0]),
    .Q(contador[0]),
    .R(_229_),
    .S(1'b0)
  );
  DFFSR _549_ (
    .C(SD_CLK),
    .D(_000_[1]),
    .Q(contador[1]),
    .R(_230_),
    .S(1'b0)
  );
  DFFSR _550_ (
    .C(SD_CLK),
    .D(_000_[2]),
    .Q(contador[2]),
    .R(_231_),
    .S(1'b0)
  );
  DFFSR _551_ (
    .C(SD_CLK),
    .D(_000_[3]),
    .Q(contador[3]),
    .R(_232_),
    .S(1'b0)
  );
  DFFSR _552_ (
    .C(SD_CLK),
    .D(_000_[4]),
    .Q(contador[4]),
    .R(_233_),
    .S(1'b0)
  );
  DFFSR _553_ (
    .C(SD_CLK),
    .D(_000_[5]),
    .Q(contador[5]),
    .R(_234_),
    .S(1'b0)
  );
  DFFSR _554_ (
    .C(SD_CLK),
    .D(_000_[6]),
    .Q(contador[6]),
    .R(_235_),
    .S(1'b0)
  );
  DFFSR _555_ (
    .C(SD_CLK),
    .D(_000_[7]),
    .Q(contador[7]),
    .R(_236_),
    .S(1'b0)
  );
  DFFSR _556_ (
    .C(SD_CLK),
    .D(_000_[8]),
    .Q(contador[8]),
    .R(_237_),
    .S(1'b0)
  );
endmodule

module cmd_control(clk_host, reset_host, new_command, cmd_argument, cmd_index, ack_in, strobe_in, cmd_in, response, cmd_complete, cmd_index_error, strobe_out, ack_out, idle_out, cmd_out);
  wire _000_;
  wire _001_;
  wire [39:0] _002_;
  wire _003_;
  wire [127:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  input ack_in;
  output ack_out;
  input clk_host;
  input [31:0] cmd_argument;
  output cmd_complete;
  input [135:0] cmd_in;
  input [5:0] cmd_index;
  output cmd_index_error;
  output [39:0] cmd_out;
  wire [1:0] estado;
  output idle_out;
  input new_command;
  input reset_host;
  output [127:0] response;
  input strobe_in;
  output strobe_out;
  NOT _201_ (
    .A(reset_host),
    .Y(_006_)
  );
  NOT _202_ (
    .A(estado[1]),
    .Y(_007_)
  );
  NOR _203_ (
    .A(_007_),
    .B(_006_),
    .Y(_008_)
  );
  NAND _204_ (
    .A(_007_),
    .B(estado[0]),
    .Y(_009_)
  );
  NOR _205_ (
    .A(new_command),
    .B(reset_host),
    .Y(_010_)
  );
  NOR _206_ (
    .A(_010_),
    .B(_009_),
    .Y(_011_)
  );
  NOR _207_ (
    .A(_011_),
    .B(_008_),
    .Y(estado[0])
  );
  NOT _208_ (
    .A(estado[0]),
    .Y(_012_)
  );
  NOR _209_ (
    .A(_007_),
    .B(_012_),
    .Y(_013_)
  );
  NOT _210_ (
    .A(strobe_in),
    .Y(_014_)
  );
  NOT _211_ (
    .A(ack_in),
    .Y(_015_)
  );
  NOR _212_ (
    .A(_015_),
    .B(_014_),
    .Y(_016_)
  );
  NOR _213_ (
    .A(_016_),
    .B(reset_host),
    .Y(_017_)
  );
  NAND _214_ (
    .A(_017_),
    .B(_013_),
    .Y(_018_)
  );
  NAND _215_ (
    .A(new_command),
    .B(_006_),
    .Y(_019_)
  );
  NOR _216_ (
    .A(_019_),
    .B(_009_),
    .Y(_020_)
  );
  NAND _217_ (
    .A(estado[1]),
    .B(_012_),
    .Y(_021_)
  );
  NOR _218_ (
    .A(_021_),
    .B(reset_host),
    .Y(_005_)
  );
  NOR _219_ (
    .A(_005_),
    .B(_020_),
    .Y(_022_)
  );
  NAND _220_ (
    .A(_022_),
    .B(_018_),
    .Y(estado[1])
  );
  NOT _221_ (
    .A(cmd_argument[0]),
    .Y(_023_)
  );
  NOR _222_ (
    .A(_007_),
    .B(estado[0]),
    .Y(_024_)
  );
  NAND _223_ (
    .A(_024_),
    .B(_006_),
    .Y(_025_)
  );
  NOR _224_ (
    .A(_025_),
    .B(_023_),
    .Y(_002_[0])
  );
  NOT _225_ (
    .A(cmd_argument[1]),
    .Y(_026_)
  );
  NOR _226_ (
    .A(_025_),
    .B(_026_),
    .Y(_002_[1])
  );
  NOT _227_ (
    .A(cmd_argument[2]),
    .Y(_027_)
  );
  NOR _228_ (
    .A(_025_),
    .B(_027_),
    .Y(_002_[2])
  );
  NOT _229_ (
    .A(cmd_argument[3]),
    .Y(_028_)
  );
  NOR _230_ (
    .A(_025_),
    .B(_028_),
    .Y(_002_[3])
  );
  NOT _231_ (
    .A(cmd_argument[4]),
    .Y(_029_)
  );
  NOR _232_ (
    .A(_025_),
    .B(_029_),
    .Y(_002_[4])
  );
  NOT _233_ (
    .A(cmd_argument[5]),
    .Y(_030_)
  );
  NOR _234_ (
    .A(_025_),
    .B(_030_),
    .Y(_002_[5])
  );
  NOT _235_ (
    .A(cmd_argument[6]),
    .Y(_031_)
  );
  NOR _236_ (
    .A(_025_),
    .B(_031_),
    .Y(_002_[6])
  );
  NOT _237_ (
    .A(cmd_argument[7]),
    .Y(_032_)
  );
  NOR _238_ (
    .A(_025_),
    .B(_032_),
    .Y(_002_[7])
  );
  NOT _239_ (
    .A(cmd_argument[8]),
    .Y(_033_)
  );
  NOR _240_ (
    .A(_025_),
    .B(_033_),
    .Y(_002_[8])
  );
  NOT _241_ (
    .A(cmd_argument[9]),
    .Y(_034_)
  );
  NOR _242_ (
    .A(_025_),
    .B(_034_),
    .Y(_002_[9])
  );
  NOT _243_ (
    .A(cmd_argument[10]),
    .Y(_035_)
  );
  NOR _244_ (
    .A(_025_),
    .B(_035_),
    .Y(_002_[10])
  );
  NOT _245_ (
    .A(cmd_argument[11]),
    .Y(_036_)
  );
  NOR _246_ (
    .A(_025_),
    .B(_036_),
    .Y(_002_[11])
  );
  NOT _247_ (
    .A(cmd_argument[12]),
    .Y(_037_)
  );
  NOR _248_ (
    .A(_025_),
    .B(_037_),
    .Y(_002_[12])
  );
  NOT _249_ (
    .A(cmd_argument[13]),
    .Y(_038_)
  );
  NOR _250_ (
    .A(_025_),
    .B(_038_),
    .Y(_002_[13])
  );
  NOT _251_ (
    .A(cmd_argument[14]),
    .Y(_039_)
  );
  NOR _252_ (
    .A(_025_),
    .B(_039_),
    .Y(_002_[14])
  );
  NOT _253_ (
    .A(cmd_argument[15]),
    .Y(_040_)
  );
  NOR _254_ (
    .A(_025_),
    .B(_040_),
    .Y(_002_[15])
  );
  NOT _255_ (
    .A(cmd_argument[16]),
    .Y(_041_)
  );
  NOR _256_ (
    .A(_025_),
    .B(_041_),
    .Y(_002_[16])
  );
  NOT _257_ (
    .A(cmd_argument[17]),
    .Y(_042_)
  );
  NOR _258_ (
    .A(_025_),
    .B(_042_),
    .Y(_002_[17])
  );
  NOT _259_ (
    .A(cmd_argument[18]),
    .Y(_043_)
  );
  NOR _260_ (
    .A(_025_),
    .B(_043_),
    .Y(_002_[18])
  );
  NOT _261_ (
    .A(cmd_argument[19]),
    .Y(_044_)
  );
  NOR _262_ (
    .A(_025_),
    .B(_044_),
    .Y(_002_[19])
  );
  NOT _263_ (
    .A(cmd_argument[20]),
    .Y(_045_)
  );
  NOR _264_ (
    .A(_025_),
    .B(_045_),
    .Y(_002_[20])
  );
  NOT _265_ (
    .A(cmd_argument[21]),
    .Y(_046_)
  );
  NOR _266_ (
    .A(_025_),
    .B(_046_),
    .Y(_002_[21])
  );
  NOT _267_ (
    .A(cmd_argument[22]),
    .Y(_047_)
  );
  NOR _268_ (
    .A(_025_),
    .B(_047_),
    .Y(_002_[22])
  );
  NOT _269_ (
    .A(cmd_argument[23]),
    .Y(_048_)
  );
  NOR _270_ (
    .A(_025_),
    .B(_048_),
    .Y(_002_[23])
  );
  NOT _271_ (
    .A(cmd_argument[24]),
    .Y(_049_)
  );
  NOR _272_ (
    .A(_025_),
    .B(_049_),
    .Y(_002_[24])
  );
  NOT _273_ (
    .A(cmd_argument[25]),
    .Y(_050_)
  );
  NOR _274_ (
    .A(_025_),
    .B(_050_),
    .Y(_002_[25])
  );
  NOT _275_ (
    .A(cmd_argument[26]),
    .Y(_051_)
  );
  NOR _276_ (
    .A(_025_),
    .B(_051_),
    .Y(_002_[26])
  );
  NOT _277_ (
    .A(cmd_argument[27]),
    .Y(_052_)
  );
  NOR _278_ (
    .A(_025_),
    .B(_052_),
    .Y(_002_[27])
  );
  NOT _279_ (
    .A(cmd_argument[28]),
    .Y(_053_)
  );
  NOR _280_ (
    .A(_025_),
    .B(_053_),
    .Y(_002_[28])
  );
  NOT _281_ (
    .A(cmd_argument[29]),
    .Y(_054_)
  );
  NOR _282_ (
    .A(_025_),
    .B(_054_),
    .Y(_002_[29])
  );
  NOT _283_ (
    .A(cmd_argument[30]),
    .Y(_055_)
  );
  NOR _284_ (
    .A(_025_),
    .B(_055_),
    .Y(_002_[30])
  );
  NOT _285_ (
    .A(cmd_argument[31]),
    .Y(_056_)
  );
  NOR _286_ (
    .A(_025_),
    .B(_056_),
    .Y(_002_[31])
  );
  NOT _287_ (
    .A(cmd_index[0]),
    .Y(_057_)
  );
  NOR _288_ (
    .A(_025_),
    .B(_057_),
    .Y(_002_[32])
  );
  NOT _289_ (
    .A(cmd_index[1]),
    .Y(_058_)
  );
  NOR _290_ (
    .A(_025_),
    .B(_058_),
    .Y(_002_[33])
  );
  NOT _291_ (
    .A(cmd_index[2]),
    .Y(_059_)
  );
  NOR _292_ (
    .A(_025_),
    .B(_059_),
    .Y(_002_[34])
  );
  NOT _293_ (
    .A(cmd_index[3]),
    .Y(_060_)
  );
  NOR _294_ (
    .A(_025_),
    .B(_060_),
    .Y(_002_[35])
  );
  NOT _295_ (
    .A(cmd_index[4]),
    .Y(_061_)
  );
  NOR _296_ (
    .A(_025_),
    .B(_061_),
    .Y(_002_[36])
  );
  NOT _297_ (
    .A(cmd_index[5]),
    .Y(_062_)
  );
  NOR _298_ (
    .A(_025_),
    .B(_062_),
    .Y(_002_[37])
  );
  NOT _299_ (
    .A(_010_),
    .Y(_063_)
  );
  NOR _300_ (
    .A(_063_),
    .B(_009_),
    .Y(_003_)
  );
  NOR _301_ (
    .A(_014_),
    .B(reset_host),
    .Y(_064_)
  );
  NAND _302_ (
    .A(_064_),
    .B(_013_),
    .Y(_065_)
  );
  NOT _303_ (
    .A(_065_),
    .Y(_000_)
  );
  NOT _304_ (
    .A(cmd_out[0]),
    .Y(_066_)
  );
  NOR _305_ (
    .A(_066_),
    .B(cmd_in[134]),
    .Y(_067_)
  );
  NOR _306_ (
    .A(_067_),
    .B(_065_),
    .Y(_001_)
  );
  NOT _307_ (
    .A(cmd_in[8]),
    .Y(_068_)
  );
  NOR _308_ (
    .A(_065_),
    .B(_068_),
    .Y(_004_[0])
  );
  NOT _309_ (
    .A(cmd_in[9]),
    .Y(_069_)
  );
  NOR _310_ (
    .A(_065_),
    .B(_069_),
    .Y(_004_[1])
  );
  NOT _311_ (
    .A(cmd_in[10]),
    .Y(_070_)
  );
  NOR _312_ (
    .A(_065_),
    .B(_070_),
    .Y(_004_[2])
  );
  NOT _313_ (
    .A(cmd_in[11]),
    .Y(_071_)
  );
  NOR _314_ (
    .A(_065_),
    .B(_071_),
    .Y(_004_[3])
  );
  NOT _315_ (
    .A(cmd_in[12]),
    .Y(_072_)
  );
  NOR _316_ (
    .A(_065_),
    .B(_072_),
    .Y(_004_[4])
  );
  NOT _317_ (
    .A(cmd_in[13]),
    .Y(_073_)
  );
  NOR _318_ (
    .A(_065_),
    .B(_073_),
    .Y(_004_[5])
  );
  NOT _319_ (
    .A(cmd_in[14]),
    .Y(_074_)
  );
  NOR _320_ (
    .A(_065_),
    .B(_074_),
    .Y(_004_[6])
  );
  NOT _321_ (
    .A(cmd_in[15]),
    .Y(_075_)
  );
  NOR _322_ (
    .A(_065_),
    .B(_075_),
    .Y(_004_[7])
  );
  NOT _323_ (
    .A(cmd_in[16]),
    .Y(_076_)
  );
  NOR _324_ (
    .A(_065_),
    .B(_076_),
    .Y(_004_[8])
  );
  NOT _325_ (
    .A(cmd_in[17]),
    .Y(_077_)
  );
  NOR _326_ (
    .A(_065_),
    .B(_077_),
    .Y(_004_[9])
  );
  NOT _327_ (
    .A(cmd_in[18]),
    .Y(_078_)
  );
  NOR _328_ (
    .A(_065_),
    .B(_078_),
    .Y(_004_[10])
  );
  NOT _329_ (
    .A(cmd_in[19]),
    .Y(_079_)
  );
  NOR _330_ (
    .A(_065_),
    .B(_079_),
    .Y(_004_[11])
  );
  NOT _331_ (
    .A(cmd_in[20]),
    .Y(_080_)
  );
  NOR _332_ (
    .A(_065_),
    .B(_080_),
    .Y(_004_[12])
  );
  NOT _333_ (
    .A(cmd_in[21]),
    .Y(_081_)
  );
  NOR _334_ (
    .A(_065_),
    .B(_081_),
    .Y(_004_[13])
  );
  NOT _335_ (
    .A(cmd_in[22]),
    .Y(_082_)
  );
  NOR _336_ (
    .A(_065_),
    .B(_082_),
    .Y(_004_[14])
  );
  NOT _337_ (
    .A(cmd_in[23]),
    .Y(_083_)
  );
  NOR _338_ (
    .A(_065_),
    .B(_083_),
    .Y(_004_[15])
  );
  NOT _339_ (
    .A(cmd_in[24]),
    .Y(_084_)
  );
  NOR _340_ (
    .A(_065_),
    .B(_084_),
    .Y(_004_[16])
  );
  NOT _341_ (
    .A(cmd_in[25]),
    .Y(_085_)
  );
  NOR _342_ (
    .A(_065_),
    .B(_085_),
    .Y(_004_[17])
  );
  NOT _343_ (
    .A(cmd_in[26]),
    .Y(_086_)
  );
  NOR _344_ (
    .A(_065_),
    .B(_086_),
    .Y(_004_[18])
  );
  NOT _345_ (
    .A(cmd_in[27]),
    .Y(_087_)
  );
  NOR _346_ (
    .A(_065_),
    .B(_087_),
    .Y(_004_[19])
  );
  NOT _347_ (
    .A(cmd_in[28]),
    .Y(_088_)
  );
  NOR _348_ (
    .A(_065_),
    .B(_088_),
    .Y(_004_[20])
  );
  NOT _349_ (
    .A(cmd_in[29]),
    .Y(_089_)
  );
  NOR _350_ (
    .A(_065_),
    .B(_089_),
    .Y(_004_[21])
  );
  NOT _351_ (
    .A(cmd_in[30]),
    .Y(_090_)
  );
  NOR _352_ (
    .A(_065_),
    .B(_090_),
    .Y(_004_[22])
  );
  NOT _353_ (
    .A(cmd_in[31]),
    .Y(_091_)
  );
  NOR _354_ (
    .A(_065_),
    .B(_091_),
    .Y(_004_[23])
  );
  NOT _355_ (
    .A(cmd_in[32]),
    .Y(_092_)
  );
  NOR _356_ (
    .A(_065_),
    .B(_092_),
    .Y(_004_[24])
  );
  NOT _357_ (
    .A(cmd_in[33]),
    .Y(_093_)
  );
  NOR _358_ (
    .A(_065_),
    .B(_093_),
    .Y(_004_[25])
  );
  NOT _359_ (
    .A(cmd_in[34]),
    .Y(_094_)
  );
  NOR _360_ (
    .A(_065_),
    .B(_094_),
    .Y(_004_[26])
  );
  NOT _361_ (
    .A(cmd_in[35]),
    .Y(_095_)
  );
  NOR _362_ (
    .A(_065_),
    .B(_095_),
    .Y(_004_[27])
  );
  NOT _363_ (
    .A(cmd_in[36]),
    .Y(_096_)
  );
  NOR _364_ (
    .A(_065_),
    .B(_096_),
    .Y(_004_[28])
  );
  NOT _365_ (
    .A(cmd_in[37]),
    .Y(_097_)
  );
  NOR _366_ (
    .A(_065_),
    .B(_097_),
    .Y(_004_[29])
  );
  NOT _367_ (
    .A(cmd_in[38]),
    .Y(_098_)
  );
  NOR _368_ (
    .A(_065_),
    .B(_098_),
    .Y(_004_[30])
  );
  NOT _369_ (
    .A(cmd_in[39]),
    .Y(_099_)
  );
  NOR _370_ (
    .A(_065_),
    .B(_099_),
    .Y(_004_[31])
  );
  NOT _371_ (
    .A(cmd_in[40]),
    .Y(_100_)
  );
  NOR _372_ (
    .A(_065_),
    .B(_100_),
    .Y(_004_[32])
  );
  NOT _373_ (
    .A(cmd_in[41]),
    .Y(_101_)
  );
  NOR _374_ (
    .A(_065_),
    .B(_101_),
    .Y(_004_[33])
  );
  NOT _375_ (
    .A(cmd_in[42]),
    .Y(_102_)
  );
  NOR _376_ (
    .A(_065_),
    .B(_102_),
    .Y(_004_[34])
  );
  NOT _377_ (
    .A(cmd_in[43]),
    .Y(_103_)
  );
  NOR _378_ (
    .A(_065_),
    .B(_103_),
    .Y(_004_[35])
  );
  NOT _379_ (
    .A(cmd_in[44]),
    .Y(_104_)
  );
  NOR _380_ (
    .A(_065_),
    .B(_104_),
    .Y(_004_[36])
  );
  NOT _381_ (
    .A(cmd_in[45]),
    .Y(_105_)
  );
  NOR _382_ (
    .A(_065_),
    .B(_105_),
    .Y(_004_[37])
  );
  NOT _383_ (
    .A(cmd_in[46]),
    .Y(_106_)
  );
  NOR _384_ (
    .A(_065_),
    .B(_106_),
    .Y(_004_[38])
  );
  NOT _385_ (
    .A(cmd_in[47]),
    .Y(_107_)
  );
  NOR _386_ (
    .A(_065_),
    .B(_107_),
    .Y(_004_[39])
  );
  NOT _387_ (
    .A(cmd_in[48]),
    .Y(_108_)
  );
  NOR _388_ (
    .A(_065_),
    .B(_108_),
    .Y(_004_[40])
  );
  NOT _389_ (
    .A(cmd_in[49]),
    .Y(_109_)
  );
  NOR _390_ (
    .A(_065_),
    .B(_109_),
    .Y(_004_[41])
  );
  NOT _391_ (
    .A(cmd_in[50]),
    .Y(_110_)
  );
  NOR _392_ (
    .A(_065_),
    .B(_110_),
    .Y(_004_[42])
  );
  NOT _393_ (
    .A(cmd_in[51]),
    .Y(_111_)
  );
  NOR _394_ (
    .A(_065_),
    .B(_111_),
    .Y(_004_[43])
  );
  NOT _395_ (
    .A(cmd_in[52]),
    .Y(_112_)
  );
  NOR _396_ (
    .A(_065_),
    .B(_112_),
    .Y(_004_[44])
  );
  NOT _397_ (
    .A(cmd_in[53]),
    .Y(_113_)
  );
  NOR _398_ (
    .A(_065_),
    .B(_113_),
    .Y(_004_[45])
  );
  NOT _399_ (
    .A(cmd_in[54]),
    .Y(_114_)
  );
  NOR _400_ (
    .A(_065_),
    .B(_114_),
    .Y(_004_[46])
  );
  NOT _401_ (
    .A(cmd_in[55]),
    .Y(_115_)
  );
  NOR _402_ (
    .A(_065_),
    .B(_115_),
    .Y(_004_[47])
  );
  NOT _403_ (
    .A(cmd_in[56]),
    .Y(_116_)
  );
  NOR _404_ (
    .A(_065_),
    .B(_116_),
    .Y(_004_[48])
  );
  NOT _405_ (
    .A(cmd_in[57]),
    .Y(_117_)
  );
  NOR _406_ (
    .A(_065_),
    .B(_117_),
    .Y(_004_[49])
  );
  NOT _407_ (
    .A(cmd_in[58]),
    .Y(_118_)
  );
  NOR _408_ (
    .A(_065_),
    .B(_118_),
    .Y(_004_[50])
  );
  NOT _409_ (
    .A(cmd_in[59]),
    .Y(_119_)
  );
  NOR _410_ (
    .A(_065_),
    .B(_119_),
    .Y(_004_[51])
  );
  NOT _411_ (
    .A(cmd_in[60]),
    .Y(_120_)
  );
  NOR _412_ (
    .A(_065_),
    .B(_120_),
    .Y(_004_[52])
  );
  NOT _413_ (
    .A(cmd_in[61]),
    .Y(_121_)
  );
  NOR _414_ (
    .A(_065_),
    .B(_121_),
    .Y(_004_[53])
  );
  NOT _415_ (
    .A(cmd_in[62]),
    .Y(_122_)
  );
  NOR _416_ (
    .A(_065_),
    .B(_122_),
    .Y(_004_[54])
  );
  NOT _417_ (
    .A(cmd_in[63]),
    .Y(_123_)
  );
  NOR _418_ (
    .A(_065_),
    .B(_123_),
    .Y(_004_[55])
  );
  NOT _419_ (
    .A(cmd_in[64]),
    .Y(_124_)
  );
  NOR _420_ (
    .A(_065_),
    .B(_124_),
    .Y(_004_[56])
  );
  NOT _421_ (
    .A(cmd_in[65]),
    .Y(_125_)
  );
  NOR _422_ (
    .A(_065_),
    .B(_125_),
    .Y(_004_[57])
  );
  NOT _423_ (
    .A(cmd_in[66]),
    .Y(_126_)
  );
  NOR _424_ (
    .A(_065_),
    .B(_126_),
    .Y(_004_[58])
  );
  NOT _425_ (
    .A(cmd_in[67]),
    .Y(_127_)
  );
  NOR _426_ (
    .A(_065_),
    .B(_127_),
    .Y(_004_[59])
  );
  NOT _427_ (
    .A(cmd_in[68]),
    .Y(_128_)
  );
  NOR _428_ (
    .A(_065_),
    .B(_128_),
    .Y(_004_[60])
  );
  NOT _429_ (
    .A(cmd_in[69]),
    .Y(_129_)
  );
  NOR _430_ (
    .A(_065_),
    .B(_129_),
    .Y(_004_[61])
  );
  NOT _431_ (
    .A(cmd_in[70]),
    .Y(_130_)
  );
  NOR _432_ (
    .A(_065_),
    .B(_130_),
    .Y(_004_[62])
  );
  NOT _433_ (
    .A(cmd_in[71]),
    .Y(_131_)
  );
  NOR _434_ (
    .A(_065_),
    .B(_131_),
    .Y(_004_[63])
  );
  NOT _435_ (
    .A(cmd_in[72]),
    .Y(_132_)
  );
  NOR _436_ (
    .A(_065_),
    .B(_132_),
    .Y(_004_[64])
  );
  NOT _437_ (
    .A(cmd_in[73]),
    .Y(_133_)
  );
  NOR _438_ (
    .A(_065_),
    .B(_133_),
    .Y(_004_[65])
  );
  NOT _439_ (
    .A(cmd_in[74]),
    .Y(_134_)
  );
  NOR _440_ (
    .A(_065_),
    .B(_134_),
    .Y(_004_[66])
  );
  NOT _441_ (
    .A(cmd_in[75]),
    .Y(_135_)
  );
  NOR _442_ (
    .A(_065_),
    .B(_135_),
    .Y(_004_[67])
  );
  NOT _443_ (
    .A(cmd_in[76]),
    .Y(_136_)
  );
  NOR _444_ (
    .A(_065_),
    .B(_136_),
    .Y(_004_[68])
  );
  NOT _445_ (
    .A(cmd_in[77]),
    .Y(_137_)
  );
  NOR _446_ (
    .A(_065_),
    .B(_137_),
    .Y(_004_[69])
  );
  NOT _447_ (
    .A(cmd_in[78]),
    .Y(_138_)
  );
  NOR _448_ (
    .A(_065_),
    .B(_138_),
    .Y(_004_[70])
  );
  NOT _449_ (
    .A(cmd_in[79]),
    .Y(_139_)
  );
  NOR _450_ (
    .A(_065_),
    .B(_139_),
    .Y(_004_[71])
  );
  NOT _451_ (
    .A(cmd_in[80]),
    .Y(_140_)
  );
  NOR _452_ (
    .A(_065_),
    .B(_140_),
    .Y(_004_[72])
  );
  NOT _453_ (
    .A(cmd_in[81]),
    .Y(_141_)
  );
  NOR _454_ (
    .A(_065_),
    .B(_141_),
    .Y(_004_[73])
  );
  NOT _455_ (
    .A(cmd_in[82]),
    .Y(_142_)
  );
  NOR _456_ (
    .A(_065_),
    .B(_142_),
    .Y(_004_[74])
  );
  NOT _457_ (
    .A(cmd_in[83]),
    .Y(_143_)
  );
  NOR _458_ (
    .A(_065_),
    .B(_143_),
    .Y(_004_[75])
  );
  NOT _459_ (
    .A(cmd_in[84]),
    .Y(_144_)
  );
  NOR _460_ (
    .A(_065_),
    .B(_144_),
    .Y(_004_[76])
  );
  NOT _461_ (
    .A(cmd_in[85]),
    .Y(_145_)
  );
  NOR _462_ (
    .A(_065_),
    .B(_145_),
    .Y(_004_[77])
  );
  NOT _463_ (
    .A(cmd_in[86]),
    .Y(_146_)
  );
  NOR _464_ (
    .A(_065_),
    .B(_146_),
    .Y(_004_[78])
  );
  NOT _465_ (
    .A(cmd_in[87]),
    .Y(_147_)
  );
  NOR _466_ (
    .A(_065_),
    .B(_147_),
    .Y(_004_[79])
  );
  NOT _467_ (
    .A(cmd_in[88]),
    .Y(_148_)
  );
  NOR _468_ (
    .A(_065_),
    .B(_148_),
    .Y(_004_[80])
  );
  NOT _469_ (
    .A(cmd_in[89]),
    .Y(_149_)
  );
  NOR _470_ (
    .A(_065_),
    .B(_149_),
    .Y(_004_[81])
  );
  NOT _471_ (
    .A(cmd_in[90]),
    .Y(_150_)
  );
  NOR _472_ (
    .A(_065_),
    .B(_150_),
    .Y(_004_[82])
  );
  NOT _473_ (
    .A(cmd_in[91]),
    .Y(_151_)
  );
  NOR _474_ (
    .A(_065_),
    .B(_151_),
    .Y(_004_[83])
  );
  NOT _475_ (
    .A(cmd_in[92]),
    .Y(_152_)
  );
  NOR _476_ (
    .A(_065_),
    .B(_152_),
    .Y(_004_[84])
  );
  NOT _477_ (
    .A(cmd_in[93]),
    .Y(_153_)
  );
  NOR _478_ (
    .A(_065_),
    .B(_153_),
    .Y(_004_[85])
  );
  NOT _479_ (
    .A(cmd_in[94]),
    .Y(_154_)
  );
  NOR _480_ (
    .A(_065_),
    .B(_154_),
    .Y(_004_[86])
  );
  NOT _481_ (
    .A(cmd_in[95]),
    .Y(_155_)
  );
  NOR _482_ (
    .A(_065_),
    .B(_155_),
    .Y(_004_[87])
  );
  NOT _483_ (
    .A(cmd_in[96]),
    .Y(_156_)
  );
  NOR _484_ (
    .A(_065_),
    .B(_156_),
    .Y(_004_[88])
  );
  NOT _485_ (
    .A(cmd_in[97]),
    .Y(_157_)
  );
  NOR _486_ (
    .A(_065_),
    .B(_157_),
    .Y(_004_[89])
  );
  NOT _487_ (
    .A(cmd_in[98]),
    .Y(_158_)
  );
  NOR _488_ (
    .A(_065_),
    .B(_158_),
    .Y(_004_[90])
  );
  NOT _489_ (
    .A(cmd_in[99]),
    .Y(_159_)
  );
  NOR _490_ (
    .A(_065_),
    .B(_159_),
    .Y(_004_[91])
  );
  NOT _491_ (
    .A(cmd_in[100]),
    .Y(_160_)
  );
  NOR _492_ (
    .A(_065_),
    .B(_160_),
    .Y(_004_[92])
  );
  NOT _493_ (
    .A(cmd_in[101]),
    .Y(_161_)
  );
  NOR _494_ (
    .A(_065_),
    .B(_161_),
    .Y(_004_[93])
  );
  NOT _495_ (
    .A(cmd_in[102]),
    .Y(_162_)
  );
  NOR _496_ (
    .A(_065_),
    .B(_162_),
    .Y(_004_[94])
  );
  NOT _497_ (
    .A(cmd_in[103]),
    .Y(_163_)
  );
  NOR _498_ (
    .A(_065_),
    .B(_163_),
    .Y(_004_[95])
  );
  NOT _499_ (
    .A(cmd_in[104]),
    .Y(_164_)
  );
  NOR _500_ (
    .A(_065_),
    .B(_164_),
    .Y(_004_[96])
  );
  NOT _501_ (
    .A(cmd_in[105]),
    .Y(_165_)
  );
  NOR _502_ (
    .A(_065_),
    .B(_165_),
    .Y(_004_[97])
  );
  NOT _503_ (
    .A(cmd_in[106]),
    .Y(_166_)
  );
  NOR _504_ (
    .A(_065_),
    .B(_166_),
    .Y(_004_[98])
  );
  NOT _505_ (
    .A(cmd_in[107]),
    .Y(_167_)
  );
  NOR _506_ (
    .A(_065_),
    .B(_167_),
    .Y(_004_[99])
  );
  NOT _507_ (
    .A(cmd_in[108]),
    .Y(_168_)
  );
  NOR _508_ (
    .A(_065_),
    .B(_168_),
    .Y(_004_[100])
  );
  NOT _509_ (
    .A(cmd_in[109]),
    .Y(_169_)
  );
  NOR _510_ (
    .A(_065_),
    .B(_169_),
    .Y(_004_[101])
  );
  NOT _511_ (
    .A(cmd_in[110]),
    .Y(_170_)
  );
  NOR _512_ (
    .A(_065_),
    .B(_170_),
    .Y(_004_[102])
  );
  NOT _513_ (
    .A(cmd_in[111]),
    .Y(_171_)
  );
  NOR _514_ (
    .A(_065_),
    .B(_171_),
    .Y(_004_[103])
  );
  NOT _515_ (
    .A(cmd_in[112]),
    .Y(_172_)
  );
  NOR _516_ (
    .A(_065_),
    .B(_172_),
    .Y(_004_[104])
  );
  NOT _517_ (
    .A(cmd_in[113]),
    .Y(_173_)
  );
  NOR _518_ (
    .A(_065_),
    .B(_173_),
    .Y(_004_[105])
  );
  NOT _519_ (
    .A(cmd_in[114]),
    .Y(_174_)
  );
  NOR _520_ (
    .A(_065_),
    .B(_174_),
    .Y(_004_[106])
  );
  NOT _521_ (
    .A(cmd_in[115]),
    .Y(_175_)
  );
  NOR _522_ (
    .A(_065_),
    .B(_175_),
    .Y(_004_[107])
  );
  NOT _523_ (
    .A(cmd_in[116]),
    .Y(_176_)
  );
  NOR _524_ (
    .A(_065_),
    .B(_176_),
    .Y(_004_[108])
  );
  NOT _525_ (
    .A(cmd_in[117]),
    .Y(_177_)
  );
  NOR _526_ (
    .A(_065_),
    .B(_177_),
    .Y(_004_[109])
  );
  NOT _527_ (
    .A(cmd_in[118]),
    .Y(_178_)
  );
  NOR _528_ (
    .A(_065_),
    .B(_178_),
    .Y(_004_[110])
  );
  NOT _529_ (
    .A(cmd_in[119]),
    .Y(_179_)
  );
  NOR _530_ (
    .A(_065_),
    .B(_179_),
    .Y(_004_[111])
  );
  NOT _531_ (
    .A(cmd_in[120]),
    .Y(_180_)
  );
  NOR _532_ (
    .A(_065_),
    .B(_180_),
    .Y(_004_[112])
  );
  NOT _533_ (
    .A(cmd_in[121]),
    .Y(_181_)
  );
  NOR _534_ (
    .A(_065_),
    .B(_181_),
    .Y(_004_[113])
  );
  NOT _535_ (
    .A(cmd_in[122]),
    .Y(_182_)
  );
  NOR _536_ (
    .A(_065_),
    .B(_182_),
    .Y(_004_[114])
  );
  NOT _537_ (
    .A(cmd_in[123]),
    .Y(_183_)
  );
  NOR _538_ (
    .A(_065_),
    .B(_183_),
    .Y(_004_[115])
  );
  NOT _539_ (
    .A(cmd_in[124]),
    .Y(_184_)
  );
  NOR _540_ (
    .A(_065_),
    .B(_184_),
    .Y(_004_[116])
  );
  NOT _541_ (
    .A(cmd_in[125]),
    .Y(_185_)
  );
  NOR _542_ (
    .A(_065_),
    .B(_185_),
    .Y(_004_[117])
  );
  NOT _543_ (
    .A(cmd_in[126]),
    .Y(_186_)
  );
  NOR _544_ (
    .A(_065_),
    .B(_186_),
    .Y(_004_[118])
  );
  NOT _545_ (
    .A(cmd_in[127]),
    .Y(_187_)
  );
  NOR _546_ (
    .A(_065_),
    .B(_187_),
    .Y(_004_[119])
  );
  NOT _547_ (
    .A(cmd_in[128]),
    .Y(_188_)
  );
  NOR _548_ (
    .A(_065_),
    .B(_188_),
    .Y(_004_[120])
  );
  NOT _549_ (
    .A(cmd_in[129]),
    .Y(_189_)
  );
  NOR _550_ (
    .A(_065_),
    .B(_189_),
    .Y(_004_[121])
  );
  NOT _551_ (
    .A(cmd_in[130]),
    .Y(_190_)
  );
  NOR _552_ (
    .A(_065_),
    .B(_190_),
    .Y(_004_[122])
  );
  NOT _553_ (
    .A(cmd_in[131]),
    .Y(_191_)
  );
  NOR _554_ (
    .A(_065_),
    .B(_191_),
    .Y(_004_[123])
  );
  NOT _555_ (
    .A(cmd_in[132]),
    .Y(_192_)
  );
  NOR _556_ (
    .A(_065_),
    .B(_192_),
    .Y(_004_[124])
  );
  NOT _557_ (
    .A(cmd_in[133]),
    .Y(_193_)
  );
  NOR _558_ (
    .A(_065_),
    .B(_193_),
    .Y(_004_[125])
  );
  NOT _559_ (
    .A(cmd_in[134]),
    .Y(_194_)
  );
  NOR _560_ (
    .A(_065_),
    .B(_194_),
    .Y(_004_[126])
  );
  NOT _561_ (
    .A(cmd_in[135]),
    .Y(_195_)
  );
  NOR _562_ (
    .A(_065_),
    .B(_195_),
    .Y(_004_[127])
  );
  NOR _563_ (
    .A(_011_),
    .B(estado[1]),
    .Y(_198_)
  );
  NOR _564_ (
    .A(_008_),
    .B(estado[0]),
    .Y(_199_)
  );
  NAND _565_ (
    .A(_021_),
    .B(_009_),
    .Y(_196_)
  );
  NOR _566_ (
    .A(_064_),
    .B(_012_),
    .Y(_197_)
  );
  NOR _567_ (
    .A(_197_),
    .B(_196_),
    .Y(_200_)
  );
  \$_DLATCH_P_  _568_ (
    .D(_002_[0]),
    .E(_199_),
    .Q(cmd_out[0])
  );
  \$_DLATCH_P_  _569_ (
    .D(_002_[1]),
    .E(_199_),
    .Q(cmd_out[1])
  );
  \$_DLATCH_P_  _570_ (
    .D(_002_[2]),
    .E(_199_),
    .Q(cmd_out[2])
  );
  \$_DLATCH_P_  _571_ (
    .D(_002_[3]),
    .E(_199_),
    .Q(cmd_out[3])
  );
  \$_DLATCH_P_  _572_ (
    .D(_002_[4]),
    .E(_199_),
    .Q(cmd_out[4])
  );
  \$_DLATCH_P_  _573_ (
    .D(_002_[5]),
    .E(_199_),
    .Q(cmd_out[5])
  );
  \$_DLATCH_P_  _574_ (
    .D(_002_[6]),
    .E(_199_),
    .Q(cmd_out[6])
  );
  \$_DLATCH_P_  _575_ (
    .D(_002_[7]),
    .E(_199_),
    .Q(cmd_out[7])
  );
  \$_DLATCH_P_  _576_ (
    .D(_002_[8]),
    .E(_199_),
    .Q(cmd_out[8])
  );
  \$_DLATCH_P_  _577_ (
    .D(_002_[9]),
    .E(_199_),
    .Q(cmd_out[9])
  );
  \$_DLATCH_P_  _578_ (
    .D(_002_[10]),
    .E(_199_),
    .Q(cmd_out[10])
  );
  \$_DLATCH_P_  _579_ (
    .D(_002_[11]),
    .E(_199_),
    .Q(cmd_out[11])
  );
  \$_DLATCH_P_  _580_ (
    .D(_002_[12]),
    .E(_199_),
    .Q(cmd_out[12])
  );
  \$_DLATCH_P_  _581_ (
    .D(_002_[13]),
    .E(_199_),
    .Q(cmd_out[13])
  );
  \$_DLATCH_P_  _582_ (
    .D(_002_[14]),
    .E(_199_),
    .Q(cmd_out[14])
  );
  \$_DLATCH_P_  _583_ (
    .D(_002_[15]),
    .E(_199_),
    .Q(cmd_out[15])
  );
  \$_DLATCH_P_  _584_ (
    .D(_002_[16]),
    .E(_199_),
    .Q(cmd_out[16])
  );
  \$_DLATCH_P_  _585_ (
    .D(_002_[17]),
    .E(_199_),
    .Q(cmd_out[17])
  );
  \$_DLATCH_P_  _586_ (
    .D(_002_[18]),
    .E(_199_),
    .Q(cmd_out[18])
  );
  \$_DLATCH_P_  _587_ (
    .D(_002_[19]),
    .E(_199_),
    .Q(cmd_out[19])
  );
  \$_DLATCH_P_  _588_ (
    .D(_002_[20]),
    .E(_199_),
    .Q(cmd_out[20])
  );
  \$_DLATCH_P_  _589_ (
    .D(_002_[21]),
    .E(_199_),
    .Q(cmd_out[21])
  );
  \$_DLATCH_P_  _590_ (
    .D(_002_[22]),
    .E(_199_),
    .Q(cmd_out[22])
  );
  \$_DLATCH_P_  _591_ (
    .D(_002_[23]),
    .E(_199_),
    .Q(cmd_out[23])
  );
  \$_DLATCH_P_  _592_ (
    .D(_002_[24]),
    .E(_199_),
    .Q(cmd_out[24])
  );
  \$_DLATCH_P_  _593_ (
    .D(_002_[25]),
    .E(_199_),
    .Q(cmd_out[25])
  );
  \$_DLATCH_P_  _594_ (
    .D(_002_[26]),
    .E(_199_),
    .Q(cmd_out[26])
  );
  \$_DLATCH_P_  _595_ (
    .D(_002_[27]),
    .E(_199_),
    .Q(cmd_out[27])
  );
  \$_DLATCH_P_  _596_ (
    .D(_002_[28]),
    .E(_199_),
    .Q(cmd_out[28])
  );
  \$_DLATCH_P_  _597_ (
    .D(_002_[29]),
    .E(_199_),
    .Q(cmd_out[29])
  );
  \$_DLATCH_P_  _598_ (
    .D(_002_[30]),
    .E(_199_),
    .Q(cmd_out[30])
  );
  \$_DLATCH_P_  _599_ (
    .D(_002_[31]),
    .E(_199_),
    .Q(cmd_out[31])
  );
  \$_DLATCH_P_  _600_ (
    .D(_002_[32]),
    .E(_199_),
    .Q(cmd_out[32])
  );
  \$_DLATCH_P_  _601_ (
    .D(_002_[33]),
    .E(_199_),
    .Q(cmd_out[33])
  );
  \$_DLATCH_P_  _602_ (
    .D(_002_[34]),
    .E(_199_),
    .Q(cmd_out[34])
  );
  \$_DLATCH_P_  _603_ (
    .D(_002_[35]),
    .E(_199_),
    .Q(cmd_out[35])
  );
  \$_DLATCH_P_  _604_ (
    .D(_002_[36]),
    .E(_199_),
    .Q(cmd_out[36])
  );
  \$_DLATCH_P_  _605_ (
    .D(_002_[37]),
    .E(_199_),
    .Q(cmd_out[37])
  );
  \$_DLATCH_P_  _606_ (
    .D(_005_),
    .E(_199_),
    .Q(cmd_out[38])
  );
  \$_DLATCH_P_  _607_ (
    .D(1'b0),
    .E(_199_),
    .Q(cmd_out[39])
  );
  \$_DLATCH_P_  _608_ (
    .D(_003_),
    .E(_198_),
    .Q(idle_out)
  );
  \$_DLATCH_P_  _609_ (
    .D(_000_),
    .E(_200_),
    .Q(ack_out)
  );
  \$_DLATCH_P_  _610_ (
    .D(_004_[0]),
    .E(_200_),
    .Q(response[0])
  );
  \$_DLATCH_P_  _611_ (
    .D(_004_[1]),
    .E(_200_),
    .Q(response[1])
  );
  \$_DLATCH_P_  _612_ (
    .D(_004_[2]),
    .E(_200_),
    .Q(response[2])
  );
  \$_DLATCH_P_  _613_ (
    .D(_004_[3]),
    .E(_200_),
    .Q(response[3])
  );
  \$_DLATCH_P_  _614_ (
    .D(_004_[4]),
    .E(_200_),
    .Q(response[4])
  );
  \$_DLATCH_P_  _615_ (
    .D(_004_[5]),
    .E(_200_),
    .Q(response[5])
  );
  \$_DLATCH_P_  _616_ (
    .D(_004_[6]),
    .E(_200_),
    .Q(response[6])
  );
  \$_DLATCH_P_  _617_ (
    .D(_004_[7]),
    .E(_200_),
    .Q(response[7])
  );
  \$_DLATCH_P_  _618_ (
    .D(_004_[8]),
    .E(_200_),
    .Q(response[8])
  );
  \$_DLATCH_P_  _619_ (
    .D(_004_[9]),
    .E(_200_),
    .Q(response[9])
  );
  \$_DLATCH_P_  _620_ (
    .D(_004_[10]),
    .E(_200_),
    .Q(response[10])
  );
  \$_DLATCH_P_  _621_ (
    .D(_004_[11]),
    .E(_200_),
    .Q(response[11])
  );
  \$_DLATCH_P_  _622_ (
    .D(_004_[12]),
    .E(_200_),
    .Q(response[12])
  );
  \$_DLATCH_P_  _623_ (
    .D(_004_[13]),
    .E(_200_),
    .Q(response[13])
  );
  \$_DLATCH_P_  _624_ (
    .D(_004_[14]),
    .E(_200_),
    .Q(response[14])
  );
  \$_DLATCH_P_  _625_ (
    .D(_004_[15]),
    .E(_200_),
    .Q(response[15])
  );
  \$_DLATCH_P_  _626_ (
    .D(_004_[16]),
    .E(_200_),
    .Q(response[16])
  );
  \$_DLATCH_P_  _627_ (
    .D(_004_[17]),
    .E(_200_),
    .Q(response[17])
  );
  \$_DLATCH_P_  _628_ (
    .D(_004_[18]),
    .E(_200_),
    .Q(response[18])
  );
  \$_DLATCH_P_  _629_ (
    .D(_004_[19]),
    .E(_200_),
    .Q(response[19])
  );
  \$_DLATCH_P_  _630_ (
    .D(_004_[20]),
    .E(_200_),
    .Q(response[20])
  );
  \$_DLATCH_P_  _631_ (
    .D(_004_[21]),
    .E(_200_),
    .Q(response[21])
  );
  \$_DLATCH_P_  _632_ (
    .D(_004_[22]),
    .E(_200_),
    .Q(response[22])
  );
  \$_DLATCH_P_  _633_ (
    .D(_004_[23]),
    .E(_200_),
    .Q(response[23])
  );
  \$_DLATCH_P_  _634_ (
    .D(_004_[24]),
    .E(_200_),
    .Q(response[24])
  );
  \$_DLATCH_P_  _635_ (
    .D(_004_[25]),
    .E(_200_),
    .Q(response[25])
  );
  \$_DLATCH_P_  _636_ (
    .D(_004_[26]),
    .E(_200_),
    .Q(response[26])
  );
  \$_DLATCH_P_  _637_ (
    .D(_004_[27]),
    .E(_200_),
    .Q(response[27])
  );
  \$_DLATCH_P_  _638_ (
    .D(_004_[28]),
    .E(_200_),
    .Q(response[28])
  );
  \$_DLATCH_P_  _639_ (
    .D(_004_[29]),
    .E(_200_),
    .Q(response[29])
  );
  \$_DLATCH_P_  _640_ (
    .D(_004_[30]),
    .E(_200_),
    .Q(response[30])
  );
  \$_DLATCH_P_  _641_ (
    .D(_004_[31]),
    .E(_200_),
    .Q(response[31])
  );
  \$_DLATCH_P_  _642_ (
    .D(_004_[32]),
    .E(_200_),
    .Q(response[32])
  );
  \$_DLATCH_P_  _643_ (
    .D(_004_[33]),
    .E(_200_),
    .Q(response[33])
  );
  \$_DLATCH_P_  _644_ (
    .D(_004_[34]),
    .E(_200_),
    .Q(response[34])
  );
  \$_DLATCH_P_  _645_ (
    .D(_004_[35]),
    .E(_200_),
    .Q(response[35])
  );
  \$_DLATCH_P_  _646_ (
    .D(_004_[36]),
    .E(_200_),
    .Q(response[36])
  );
  \$_DLATCH_P_  _647_ (
    .D(_004_[37]),
    .E(_200_),
    .Q(response[37])
  );
  \$_DLATCH_P_  _648_ (
    .D(_004_[38]),
    .E(_200_),
    .Q(response[38])
  );
  \$_DLATCH_P_  _649_ (
    .D(_004_[39]),
    .E(_200_),
    .Q(response[39])
  );
  \$_DLATCH_P_  _650_ (
    .D(_004_[40]),
    .E(_200_),
    .Q(response[40])
  );
  \$_DLATCH_P_  _651_ (
    .D(_004_[41]),
    .E(_200_),
    .Q(response[41])
  );
  \$_DLATCH_P_  _652_ (
    .D(_004_[42]),
    .E(_200_),
    .Q(response[42])
  );
  \$_DLATCH_P_  _653_ (
    .D(_004_[43]),
    .E(_200_),
    .Q(response[43])
  );
  \$_DLATCH_P_  _654_ (
    .D(_004_[44]),
    .E(_200_),
    .Q(response[44])
  );
  \$_DLATCH_P_  _655_ (
    .D(_004_[45]),
    .E(_200_),
    .Q(response[45])
  );
  \$_DLATCH_P_  _656_ (
    .D(_004_[46]),
    .E(_200_),
    .Q(response[46])
  );
  \$_DLATCH_P_  _657_ (
    .D(_004_[47]),
    .E(_200_),
    .Q(response[47])
  );
  \$_DLATCH_P_  _658_ (
    .D(_004_[48]),
    .E(_200_),
    .Q(response[48])
  );
  \$_DLATCH_P_  _659_ (
    .D(_004_[49]),
    .E(_200_),
    .Q(response[49])
  );
  \$_DLATCH_P_  _660_ (
    .D(_004_[50]),
    .E(_200_),
    .Q(response[50])
  );
  \$_DLATCH_P_  _661_ (
    .D(_004_[51]),
    .E(_200_),
    .Q(response[51])
  );
  \$_DLATCH_P_  _662_ (
    .D(_004_[52]),
    .E(_200_),
    .Q(response[52])
  );
  \$_DLATCH_P_  _663_ (
    .D(_004_[53]),
    .E(_200_),
    .Q(response[53])
  );
  \$_DLATCH_P_  _664_ (
    .D(_004_[54]),
    .E(_200_),
    .Q(response[54])
  );
  \$_DLATCH_P_  _665_ (
    .D(_004_[55]),
    .E(_200_),
    .Q(response[55])
  );
  \$_DLATCH_P_  _666_ (
    .D(_004_[56]),
    .E(_200_),
    .Q(response[56])
  );
  \$_DLATCH_P_  _667_ (
    .D(_004_[57]),
    .E(_200_),
    .Q(response[57])
  );
  \$_DLATCH_P_  _668_ (
    .D(_004_[58]),
    .E(_200_),
    .Q(response[58])
  );
  \$_DLATCH_P_  _669_ (
    .D(_004_[59]),
    .E(_200_),
    .Q(response[59])
  );
  \$_DLATCH_P_  _670_ (
    .D(_004_[60]),
    .E(_200_),
    .Q(response[60])
  );
  \$_DLATCH_P_  _671_ (
    .D(_004_[61]),
    .E(_200_),
    .Q(response[61])
  );
  \$_DLATCH_P_  _672_ (
    .D(_004_[62]),
    .E(_200_),
    .Q(response[62])
  );
  \$_DLATCH_P_  _673_ (
    .D(_004_[63]),
    .E(_200_),
    .Q(response[63])
  );
  \$_DLATCH_P_  _674_ (
    .D(_004_[64]),
    .E(_200_),
    .Q(response[64])
  );
  \$_DLATCH_P_  _675_ (
    .D(_004_[65]),
    .E(_200_),
    .Q(response[65])
  );
  \$_DLATCH_P_  _676_ (
    .D(_004_[66]),
    .E(_200_),
    .Q(response[66])
  );
  \$_DLATCH_P_  _677_ (
    .D(_004_[67]),
    .E(_200_),
    .Q(response[67])
  );
  \$_DLATCH_P_  _678_ (
    .D(_004_[68]),
    .E(_200_),
    .Q(response[68])
  );
  \$_DLATCH_P_  _679_ (
    .D(_004_[69]),
    .E(_200_),
    .Q(response[69])
  );
  \$_DLATCH_P_  _680_ (
    .D(_004_[70]),
    .E(_200_),
    .Q(response[70])
  );
  \$_DLATCH_P_  _681_ (
    .D(_004_[71]),
    .E(_200_),
    .Q(response[71])
  );
  \$_DLATCH_P_  _682_ (
    .D(_004_[72]),
    .E(_200_),
    .Q(response[72])
  );
  \$_DLATCH_P_  _683_ (
    .D(_004_[73]),
    .E(_200_),
    .Q(response[73])
  );
  \$_DLATCH_P_  _684_ (
    .D(_004_[74]),
    .E(_200_),
    .Q(response[74])
  );
  \$_DLATCH_P_  _685_ (
    .D(_004_[75]),
    .E(_200_),
    .Q(response[75])
  );
  \$_DLATCH_P_  _686_ (
    .D(_004_[76]),
    .E(_200_),
    .Q(response[76])
  );
  \$_DLATCH_P_  _687_ (
    .D(_004_[77]),
    .E(_200_),
    .Q(response[77])
  );
  \$_DLATCH_P_  _688_ (
    .D(_004_[78]),
    .E(_200_),
    .Q(response[78])
  );
  \$_DLATCH_P_  _689_ (
    .D(_004_[79]),
    .E(_200_),
    .Q(response[79])
  );
  \$_DLATCH_P_  _690_ (
    .D(_004_[80]),
    .E(_200_),
    .Q(response[80])
  );
  \$_DLATCH_P_  _691_ (
    .D(_004_[81]),
    .E(_200_),
    .Q(response[81])
  );
  \$_DLATCH_P_  _692_ (
    .D(_004_[82]),
    .E(_200_),
    .Q(response[82])
  );
  \$_DLATCH_P_  _693_ (
    .D(_004_[83]),
    .E(_200_),
    .Q(response[83])
  );
  \$_DLATCH_P_  _694_ (
    .D(_004_[84]),
    .E(_200_),
    .Q(response[84])
  );
  \$_DLATCH_P_  _695_ (
    .D(_004_[85]),
    .E(_200_),
    .Q(response[85])
  );
  \$_DLATCH_P_  _696_ (
    .D(_004_[86]),
    .E(_200_),
    .Q(response[86])
  );
  \$_DLATCH_P_  _697_ (
    .D(_004_[87]),
    .E(_200_),
    .Q(response[87])
  );
  \$_DLATCH_P_  _698_ (
    .D(_004_[88]),
    .E(_200_),
    .Q(response[88])
  );
  \$_DLATCH_P_  _699_ (
    .D(_004_[89]),
    .E(_200_),
    .Q(response[89])
  );
  \$_DLATCH_P_  _700_ (
    .D(_004_[90]),
    .E(_200_),
    .Q(response[90])
  );
  \$_DLATCH_P_  _701_ (
    .D(_004_[91]),
    .E(_200_),
    .Q(response[91])
  );
  \$_DLATCH_P_  _702_ (
    .D(_004_[92]),
    .E(_200_),
    .Q(response[92])
  );
  \$_DLATCH_P_  _703_ (
    .D(_004_[93]),
    .E(_200_),
    .Q(response[93])
  );
  \$_DLATCH_P_  _704_ (
    .D(_004_[94]),
    .E(_200_),
    .Q(response[94])
  );
  \$_DLATCH_P_  _705_ (
    .D(_004_[95]),
    .E(_200_),
    .Q(response[95])
  );
  \$_DLATCH_P_  _706_ (
    .D(_004_[96]),
    .E(_200_),
    .Q(response[96])
  );
  \$_DLATCH_P_  _707_ (
    .D(_004_[97]),
    .E(_200_),
    .Q(response[97])
  );
  \$_DLATCH_P_  _708_ (
    .D(_004_[98]),
    .E(_200_),
    .Q(response[98])
  );
  \$_DLATCH_P_  _709_ (
    .D(_004_[99]),
    .E(_200_),
    .Q(response[99])
  );
  \$_DLATCH_P_  _710_ (
    .D(_004_[100]),
    .E(_200_),
    .Q(response[100])
  );
  \$_DLATCH_P_  _711_ (
    .D(_004_[101]),
    .E(_200_),
    .Q(response[101])
  );
  \$_DLATCH_P_  _712_ (
    .D(_004_[102]),
    .E(_200_),
    .Q(response[102])
  );
  \$_DLATCH_P_  _713_ (
    .D(_004_[103]),
    .E(_200_),
    .Q(response[103])
  );
  \$_DLATCH_P_  _714_ (
    .D(_004_[104]),
    .E(_200_),
    .Q(response[104])
  );
  \$_DLATCH_P_  _715_ (
    .D(_004_[105]),
    .E(_200_),
    .Q(response[105])
  );
  \$_DLATCH_P_  _716_ (
    .D(_004_[106]),
    .E(_200_),
    .Q(response[106])
  );
  \$_DLATCH_P_  _717_ (
    .D(_004_[107]),
    .E(_200_),
    .Q(response[107])
  );
  \$_DLATCH_P_  _718_ (
    .D(_004_[108]),
    .E(_200_),
    .Q(response[108])
  );
  \$_DLATCH_P_  _719_ (
    .D(_004_[109]),
    .E(_200_),
    .Q(response[109])
  );
  \$_DLATCH_P_  _720_ (
    .D(_004_[110]),
    .E(_200_),
    .Q(response[110])
  );
  \$_DLATCH_P_  _721_ (
    .D(_004_[111]),
    .E(_200_),
    .Q(response[111])
  );
  \$_DLATCH_P_  _722_ (
    .D(_004_[112]),
    .E(_200_),
    .Q(response[112])
  );
  \$_DLATCH_P_  _723_ (
    .D(_004_[113]),
    .E(_200_),
    .Q(response[113])
  );
  \$_DLATCH_P_  _724_ (
    .D(_004_[114]),
    .E(_200_),
    .Q(response[114])
  );
  \$_DLATCH_P_  _725_ (
    .D(_004_[115]),
    .E(_200_),
    .Q(response[115])
  );
  \$_DLATCH_P_  _726_ (
    .D(_004_[116]),
    .E(_200_),
    .Q(response[116])
  );
  \$_DLATCH_P_  _727_ (
    .D(_004_[117]),
    .E(_200_),
    .Q(response[117])
  );
  \$_DLATCH_P_  _728_ (
    .D(_004_[118]),
    .E(_200_),
    .Q(response[118])
  );
  \$_DLATCH_P_  _729_ (
    .D(_004_[119]),
    .E(_200_),
    .Q(response[119])
  );
  \$_DLATCH_P_  _730_ (
    .D(_004_[120]),
    .E(_200_),
    .Q(response[120])
  );
  \$_DLATCH_P_  _731_ (
    .D(_004_[121]),
    .E(_200_),
    .Q(response[121])
  );
  \$_DLATCH_P_  _732_ (
    .D(_004_[122]),
    .E(_200_),
    .Q(response[122])
  );
  \$_DLATCH_P_  _733_ (
    .D(_004_[123]),
    .E(_200_),
    .Q(response[123])
  );
  \$_DLATCH_P_  _734_ (
    .D(_004_[124]),
    .E(_200_),
    .Q(response[124])
  );
  \$_DLATCH_P_  _735_ (
    .D(_004_[125]),
    .E(_200_),
    .Q(response[125])
  );
  \$_DLATCH_P_  _736_ (
    .D(_004_[126]),
    .E(_200_),
    .Q(response[126])
  );
  \$_DLATCH_P_  _737_ (
    .D(_004_[127]),
    .E(_200_),
    .Q(response[127])
  );
  \$_DLATCH_P_  _738_ (
    .D(_001_),
    .E(_200_),
    .Q(cmd_index_error)
  );
  assign cmd_complete = ack_out;
  assign strobe_out = cmd_out[38];
endmodule

module control_capa_fisica(strobe_in, ack_in, idle_in, pad_response, reception_complete, transmission_complete, ack_out, strobe_out, response, load_send, enable_stp, enable_pts, reset_stp, reset_pts, reset_host, clk_SD);
  wire _000_;
  wire _001_;
  wire _002_;
  wire [135:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  input ack_in;
  output ack_out;
  input clk_SD;
  output enable_pts;
  output enable_stp;
  wire [2:0] estado;
  input idle_in;
  output load_send;
  input [135:0] pad_response;
  input reception_complete;
  input reset_host;
  output reset_pts;
  output reset_stp;
  output [135:0] response;
  input strobe_in;
  output strobe_out;
  input transmission_complete;
  NOT _229_ (
    .A(estado[2]),
    .Y(_007_)
  );
  NOT _230_ (
    .A(estado[1]),
    .Y(_008_)
  );
  NAND _231_ (
    .A(_008_),
    .B(estado[0]),
    .Y(_009_)
  );
  NOR _232_ (
    .A(_009_),
    .B(_007_),
    .Y(_010_)
  );
  NOT _233_ (
    .A(ack_in),
    .Y(_011_)
  );
  NOR _234_ (
    .A(_011_),
    .B(idle_in),
    .Y(_012_)
  );
  NOR _235_ (
    .A(_012_),
    .B(reset_host),
    .Y(_013_)
  );
  NAND _236_ (
    .A(_013_),
    .B(_010_),
    .Y(_014_)
  );
  NOT _237_ (
    .A(reset_host),
    .Y(_015_)
  );
  NOT _238_ (
    .A(estado[0]),
    .Y(_016_)
  );
  NAND _239_ (
    .A(_008_),
    .B(_016_),
    .Y(_017_)
  );
  NOR _240_ (
    .A(_017_),
    .B(_007_),
    .Y(_018_)
  );
  NAND _241_ (
    .A(_018_),
    .B(_015_),
    .Y(_019_)
  );
  NAND _242_ (
    .A(_019_),
    .B(_014_),
    .Y(_020_)
  );
  NAND _243_ (
    .A(estado[1]),
    .B(estado[0]),
    .Y(_021_)
  );
  NOR _244_ (
    .A(_021_),
    .B(estado[2]),
    .Y(_022_)
  );
  NOT _245_ (
    .A(reception_complete),
    .Y(_023_)
  );
  NOR _246_ (
    .A(_023_),
    .B(idle_in),
    .Y(_024_)
  );
  NOR _247_ (
    .A(_024_),
    .B(reset_host),
    .Y(_025_)
  );
  NAND _248_ (
    .A(_025_),
    .B(_022_),
    .Y(_026_)
  );
  NAND _249_ (
    .A(estado[1]),
    .B(_016_),
    .Y(_027_)
  );
  NOR _250_ (
    .A(_027_),
    .B(estado[2]),
    .Y(_028_)
  );
  NOR _251_ (
    .A(transmission_complete),
    .B(idle_in),
    .Y(_029_)
  );
  NOR _252_ (
    .A(_029_),
    .B(reset_host),
    .Y(_030_)
  );
  NAND _253_ (
    .A(_030_),
    .B(_028_),
    .Y(_031_)
  );
  NAND _254_ (
    .A(_031_),
    .B(_026_),
    .Y(_032_)
  );
  NOR _255_ (
    .A(_032_),
    .B(_020_),
    .Y(_033_)
  );
  NOR _256_ (
    .A(estado[1]),
    .B(_007_),
    .Y(_034_)
  );
  NOR _257_ (
    .A(estado[1]),
    .B(estado[0]),
    .Y(_035_)
  );
  NOR _258_ (
    .A(_035_),
    .B(estado[2]),
    .Y(_036_)
  );
  NOR _259_ (
    .A(_036_),
    .B(_034_),
    .Y(_037_)
  );
  NOR _260_ (
    .A(_009_),
    .B(estado[2]),
    .Y(_038_)
  );
  NAND _261_ (
    .A(_038_),
    .B(_015_),
    .Y(_039_)
  );
  NOR _262_ (
    .A(_039_),
    .B(strobe_in),
    .Y(_040_)
  );
  NOR _263_ (
    .A(_040_),
    .B(_037_),
    .Y(_041_)
  );
  NAND _264_ (
    .A(_041_),
    .B(_033_),
    .Y(estado[0])
  );
  NOT _265_ (
    .A(strobe_in),
    .Y(_042_)
  );
  NOR _266_ (
    .A(_039_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _267_ (
    .A(estado[0]),
    .B(estado[2]),
    .Y(_044_)
  );
  NAND _268_ (
    .A(_044_),
    .B(estado[1]),
    .Y(_045_)
  );
  NOT _269_ (
    .A(idle_in),
    .Y(_046_)
  );
  NAND _270_ (
    .A(_015_),
    .B(_046_),
    .Y(_047_)
  );
  NOR _271_ (
    .A(_047_),
    .B(_045_),
    .Y(_001_)
  );
  NOR _272_ (
    .A(_001_),
    .B(_043_),
    .Y(_048_)
  );
  NOR _273_ (
    .A(reset_host),
    .B(idle_in),
    .Y(_049_)
  );
  NAND _274_ (
    .A(_049_),
    .B(_022_),
    .Y(_050_)
  );
  NOR _275_ (
    .A(_050_),
    .B(reception_complete),
    .Y(_051_)
  );
  NOR _276_ (
    .A(estado[1]),
    .B(_016_),
    .Y(_052_)
  );
  NAND _277_ (
    .A(_052_),
    .B(estado[2]),
    .Y(_053_)
  );
  NAND _278_ (
    .A(_049_),
    .B(ack_in),
    .Y(_054_)
  );
  NOR _279_ (
    .A(_054_),
    .B(_053_),
    .Y(_055_)
  );
  NOR _280_ (
    .A(_055_),
    .B(_051_),
    .Y(_056_)
  );
  NAND _281_ (
    .A(_056_),
    .B(_048_),
    .Y(estado[1])
  );
  NOR _282_ (
    .A(_008_),
    .B(_016_),
    .Y(_057_)
  );
  NAND _283_ (
    .A(_057_),
    .B(_007_),
    .Y(_058_)
  );
  NOR _284_ (
    .A(_058_),
    .B(_023_),
    .Y(_059_)
  );
  NOR _285_ (
    .A(_059_),
    .B(_034_),
    .Y(_060_)
  );
  NOR _286_ (
    .A(_060_),
    .B(_047_),
    .Y(estado[2])
  );
  NOT _287_ (
    .A(_039_),
    .Y(_006_)
  );
  NOT _288_ (
    .A(_050_),
    .Y(_005_)
  );
  NOT _289_ (
    .A(pad_response[0]),
    .Y(_061_)
  );
  NAND _290_ (
    .A(_049_),
    .B(_018_),
    .Y(_062_)
  );
  NOR _291_ (
    .A(_062_),
    .B(_061_),
    .Y(_003_[0])
  );
  NOT _292_ (
    .A(pad_response[1]),
    .Y(_063_)
  );
  NOR _293_ (
    .A(_062_),
    .B(_063_),
    .Y(_003_[1])
  );
  NOT _294_ (
    .A(pad_response[2]),
    .Y(_064_)
  );
  NOR _295_ (
    .A(_062_),
    .B(_064_),
    .Y(_003_[2])
  );
  NOT _296_ (
    .A(pad_response[3]),
    .Y(_065_)
  );
  NOR _297_ (
    .A(_062_),
    .B(_065_),
    .Y(_003_[3])
  );
  NOT _298_ (
    .A(pad_response[4]),
    .Y(_066_)
  );
  NOR _299_ (
    .A(_062_),
    .B(_066_),
    .Y(_003_[4])
  );
  NOT _300_ (
    .A(pad_response[5]),
    .Y(_067_)
  );
  NOR _301_ (
    .A(_062_),
    .B(_067_),
    .Y(_003_[5])
  );
  NOT _302_ (
    .A(pad_response[6]),
    .Y(_068_)
  );
  NOR _303_ (
    .A(_062_),
    .B(_068_),
    .Y(_003_[6])
  );
  NOT _304_ (
    .A(pad_response[7]),
    .Y(_069_)
  );
  NOR _305_ (
    .A(_062_),
    .B(_069_),
    .Y(_003_[7])
  );
  NOT _306_ (
    .A(pad_response[8]),
    .Y(_070_)
  );
  NOR _307_ (
    .A(_062_),
    .B(_070_),
    .Y(_003_[8])
  );
  NOT _308_ (
    .A(pad_response[9]),
    .Y(_071_)
  );
  NOR _309_ (
    .A(_062_),
    .B(_071_),
    .Y(_003_[9])
  );
  NOT _310_ (
    .A(pad_response[10]),
    .Y(_072_)
  );
  NOR _311_ (
    .A(_062_),
    .B(_072_),
    .Y(_003_[10])
  );
  NOT _312_ (
    .A(pad_response[11]),
    .Y(_073_)
  );
  NOR _313_ (
    .A(_062_),
    .B(_073_),
    .Y(_003_[11])
  );
  NOT _314_ (
    .A(pad_response[12]),
    .Y(_074_)
  );
  NOR _315_ (
    .A(_062_),
    .B(_074_),
    .Y(_003_[12])
  );
  NOT _316_ (
    .A(pad_response[13]),
    .Y(_075_)
  );
  NOR _317_ (
    .A(_062_),
    .B(_075_),
    .Y(_003_[13])
  );
  NOT _318_ (
    .A(pad_response[14]),
    .Y(_076_)
  );
  NOR _319_ (
    .A(_062_),
    .B(_076_),
    .Y(_003_[14])
  );
  NOT _320_ (
    .A(pad_response[15]),
    .Y(_077_)
  );
  NOR _321_ (
    .A(_062_),
    .B(_077_),
    .Y(_003_[15])
  );
  NOT _322_ (
    .A(pad_response[16]),
    .Y(_078_)
  );
  NOR _323_ (
    .A(_062_),
    .B(_078_),
    .Y(_003_[16])
  );
  NOT _324_ (
    .A(pad_response[17]),
    .Y(_079_)
  );
  NOR _325_ (
    .A(_062_),
    .B(_079_),
    .Y(_003_[17])
  );
  NOT _326_ (
    .A(pad_response[18]),
    .Y(_080_)
  );
  NOR _327_ (
    .A(_062_),
    .B(_080_),
    .Y(_003_[18])
  );
  NOT _328_ (
    .A(pad_response[19]),
    .Y(_081_)
  );
  NOR _329_ (
    .A(_062_),
    .B(_081_),
    .Y(_003_[19])
  );
  NOT _330_ (
    .A(pad_response[20]),
    .Y(_082_)
  );
  NOR _331_ (
    .A(_062_),
    .B(_082_),
    .Y(_003_[20])
  );
  NOT _332_ (
    .A(pad_response[21]),
    .Y(_083_)
  );
  NOR _333_ (
    .A(_062_),
    .B(_083_),
    .Y(_003_[21])
  );
  NOT _334_ (
    .A(pad_response[22]),
    .Y(_084_)
  );
  NOR _335_ (
    .A(_062_),
    .B(_084_),
    .Y(_003_[22])
  );
  NOT _336_ (
    .A(pad_response[23]),
    .Y(_085_)
  );
  NOR _337_ (
    .A(_062_),
    .B(_085_),
    .Y(_003_[23])
  );
  NOT _338_ (
    .A(pad_response[24]),
    .Y(_086_)
  );
  NOR _339_ (
    .A(_062_),
    .B(_086_),
    .Y(_003_[24])
  );
  NOT _340_ (
    .A(pad_response[25]),
    .Y(_087_)
  );
  NOR _341_ (
    .A(_062_),
    .B(_087_),
    .Y(_003_[25])
  );
  NOT _342_ (
    .A(pad_response[26]),
    .Y(_088_)
  );
  NOR _343_ (
    .A(_062_),
    .B(_088_),
    .Y(_003_[26])
  );
  NOT _344_ (
    .A(pad_response[27]),
    .Y(_089_)
  );
  NOR _345_ (
    .A(_062_),
    .B(_089_),
    .Y(_003_[27])
  );
  NOT _346_ (
    .A(pad_response[28]),
    .Y(_090_)
  );
  NOR _347_ (
    .A(_062_),
    .B(_090_),
    .Y(_003_[28])
  );
  NOT _348_ (
    .A(pad_response[29]),
    .Y(_091_)
  );
  NOR _349_ (
    .A(_062_),
    .B(_091_),
    .Y(_003_[29])
  );
  NOT _350_ (
    .A(pad_response[30]),
    .Y(_092_)
  );
  NOR _351_ (
    .A(_062_),
    .B(_092_),
    .Y(_003_[30])
  );
  NOT _352_ (
    .A(pad_response[31]),
    .Y(_093_)
  );
  NOR _353_ (
    .A(_062_),
    .B(_093_),
    .Y(_003_[31])
  );
  NOT _354_ (
    .A(pad_response[32]),
    .Y(_094_)
  );
  NOR _355_ (
    .A(_062_),
    .B(_094_),
    .Y(_003_[32])
  );
  NOT _356_ (
    .A(pad_response[33]),
    .Y(_095_)
  );
  NOR _357_ (
    .A(_062_),
    .B(_095_),
    .Y(_003_[33])
  );
  NOT _358_ (
    .A(pad_response[34]),
    .Y(_096_)
  );
  NOR _359_ (
    .A(_062_),
    .B(_096_),
    .Y(_003_[34])
  );
  NOT _360_ (
    .A(pad_response[35]),
    .Y(_097_)
  );
  NOR _361_ (
    .A(_062_),
    .B(_097_),
    .Y(_003_[35])
  );
  NOT _362_ (
    .A(pad_response[36]),
    .Y(_098_)
  );
  NOR _363_ (
    .A(_062_),
    .B(_098_),
    .Y(_003_[36])
  );
  NOT _364_ (
    .A(pad_response[37]),
    .Y(_099_)
  );
  NOR _365_ (
    .A(_062_),
    .B(_099_),
    .Y(_003_[37])
  );
  NOT _366_ (
    .A(pad_response[38]),
    .Y(_100_)
  );
  NOR _367_ (
    .A(_062_),
    .B(_100_),
    .Y(_003_[38])
  );
  NOT _368_ (
    .A(pad_response[39]),
    .Y(_101_)
  );
  NOR _369_ (
    .A(_062_),
    .B(_101_),
    .Y(_003_[39])
  );
  NOT _370_ (
    .A(pad_response[40]),
    .Y(_102_)
  );
  NOR _371_ (
    .A(_062_),
    .B(_102_),
    .Y(_003_[40])
  );
  NOT _372_ (
    .A(pad_response[41]),
    .Y(_103_)
  );
  NOR _373_ (
    .A(_062_),
    .B(_103_),
    .Y(_003_[41])
  );
  NOT _374_ (
    .A(pad_response[42]),
    .Y(_104_)
  );
  NOR _375_ (
    .A(_062_),
    .B(_104_),
    .Y(_003_[42])
  );
  NOT _376_ (
    .A(pad_response[43]),
    .Y(_105_)
  );
  NOR _377_ (
    .A(_062_),
    .B(_105_),
    .Y(_003_[43])
  );
  NOT _378_ (
    .A(pad_response[44]),
    .Y(_106_)
  );
  NOR _379_ (
    .A(_062_),
    .B(_106_),
    .Y(_003_[44])
  );
  NOT _380_ (
    .A(pad_response[45]),
    .Y(_107_)
  );
  NOR _381_ (
    .A(_062_),
    .B(_107_),
    .Y(_003_[45])
  );
  NOT _382_ (
    .A(pad_response[46]),
    .Y(_108_)
  );
  NOR _383_ (
    .A(_062_),
    .B(_108_),
    .Y(_003_[46])
  );
  NOT _384_ (
    .A(pad_response[47]),
    .Y(_109_)
  );
  NOR _385_ (
    .A(_062_),
    .B(_109_),
    .Y(_003_[47])
  );
  NOT _386_ (
    .A(pad_response[48]),
    .Y(_110_)
  );
  NOR _387_ (
    .A(_062_),
    .B(_110_),
    .Y(_003_[48])
  );
  NOT _388_ (
    .A(pad_response[49]),
    .Y(_111_)
  );
  NOR _389_ (
    .A(_062_),
    .B(_111_),
    .Y(_003_[49])
  );
  NOT _390_ (
    .A(pad_response[50]),
    .Y(_112_)
  );
  NOR _391_ (
    .A(_062_),
    .B(_112_),
    .Y(_003_[50])
  );
  NOT _392_ (
    .A(pad_response[51]),
    .Y(_113_)
  );
  NOR _393_ (
    .A(_062_),
    .B(_113_),
    .Y(_003_[51])
  );
  NOT _394_ (
    .A(pad_response[52]),
    .Y(_114_)
  );
  NOR _395_ (
    .A(_062_),
    .B(_114_),
    .Y(_003_[52])
  );
  NOT _396_ (
    .A(pad_response[53]),
    .Y(_115_)
  );
  NOR _397_ (
    .A(_062_),
    .B(_115_),
    .Y(_003_[53])
  );
  NOT _398_ (
    .A(pad_response[54]),
    .Y(_116_)
  );
  NOR _399_ (
    .A(_062_),
    .B(_116_),
    .Y(_003_[54])
  );
  NOT _400_ (
    .A(pad_response[55]),
    .Y(_117_)
  );
  NOR _401_ (
    .A(_062_),
    .B(_117_),
    .Y(_003_[55])
  );
  NOT _402_ (
    .A(pad_response[56]),
    .Y(_118_)
  );
  NOR _403_ (
    .A(_062_),
    .B(_118_),
    .Y(_003_[56])
  );
  NOT _404_ (
    .A(pad_response[57]),
    .Y(_119_)
  );
  NOR _405_ (
    .A(_062_),
    .B(_119_),
    .Y(_003_[57])
  );
  NOT _406_ (
    .A(pad_response[58]),
    .Y(_120_)
  );
  NOR _407_ (
    .A(_062_),
    .B(_120_),
    .Y(_003_[58])
  );
  NOT _408_ (
    .A(pad_response[59]),
    .Y(_121_)
  );
  NOR _409_ (
    .A(_062_),
    .B(_121_),
    .Y(_003_[59])
  );
  NOT _410_ (
    .A(pad_response[60]),
    .Y(_122_)
  );
  NOR _411_ (
    .A(_062_),
    .B(_122_),
    .Y(_003_[60])
  );
  NOT _412_ (
    .A(pad_response[61]),
    .Y(_123_)
  );
  NOR _413_ (
    .A(_062_),
    .B(_123_),
    .Y(_003_[61])
  );
  NOT _414_ (
    .A(pad_response[62]),
    .Y(_124_)
  );
  NOR _415_ (
    .A(_062_),
    .B(_124_),
    .Y(_003_[62])
  );
  NOT _416_ (
    .A(pad_response[63]),
    .Y(_125_)
  );
  NOR _417_ (
    .A(_062_),
    .B(_125_),
    .Y(_003_[63])
  );
  NOT _418_ (
    .A(pad_response[64]),
    .Y(_126_)
  );
  NOR _419_ (
    .A(_062_),
    .B(_126_),
    .Y(_003_[64])
  );
  NOT _420_ (
    .A(pad_response[65]),
    .Y(_127_)
  );
  NOR _421_ (
    .A(_062_),
    .B(_127_),
    .Y(_003_[65])
  );
  NOT _422_ (
    .A(pad_response[66]),
    .Y(_128_)
  );
  NOR _423_ (
    .A(_062_),
    .B(_128_),
    .Y(_003_[66])
  );
  NOT _424_ (
    .A(pad_response[67]),
    .Y(_129_)
  );
  NOR _425_ (
    .A(_062_),
    .B(_129_),
    .Y(_003_[67])
  );
  NOT _426_ (
    .A(pad_response[68]),
    .Y(_130_)
  );
  NOR _427_ (
    .A(_062_),
    .B(_130_),
    .Y(_003_[68])
  );
  NOT _428_ (
    .A(pad_response[69]),
    .Y(_131_)
  );
  NOR _429_ (
    .A(_062_),
    .B(_131_),
    .Y(_003_[69])
  );
  NOT _430_ (
    .A(pad_response[70]),
    .Y(_132_)
  );
  NOR _431_ (
    .A(_062_),
    .B(_132_),
    .Y(_003_[70])
  );
  NOT _432_ (
    .A(pad_response[71]),
    .Y(_133_)
  );
  NOR _433_ (
    .A(_062_),
    .B(_133_),
    .Y(_003_[71])
  );
  NOT _434_ (
    .A(pad_response[72]),
    .Y(_134_)
  );
  NOR _435_ (
    .A(_062_),
    .B(_134_),
    .Y(_003_[72])
  );
  NOT _436_ (
    .A(pad_response[73]),
    .Y(_135_)
  );
  NOR _437_ (
    .A(_062_),
    .B(_135_),
    .Y(_003_[73])
  );
  NOT _438_ (
    .A(pad_response[74]),
    .Y(_136_)
  );
  NOR _439_ (
    .A(_062_),
    .B(_136_),
    .Y(_003_[74])
  );
  NOT _440_ (
    .A(pad_response[75]),
    .Y(_137_)
  );
  NOR _441_ (
    .A(_062_),
    .B(_137_),
    .Y(_003_[75])
  );
  NOT _442_ (
    .A(pad_response[76]),
    .Y(_138_)
  );
  NOR _443_ (
    .A(_062_),
    .B(_138_),
    .Y(_003_[76])
  );
  NOT _444_ (
    .A(pad_response[77]),
    .Y(_139_)
  );
  NOR _445_ (
    .A(_062_),
    .B(_139_),
    .Y(_003_[77])
  );
  NOT _446_ (
    .A(pad_response[78]),
    .Y(_140_)
  );
  NOR _447_ (
    .A(_062_),
    .B(_140_),
    .Y(_003_[78])
  );
  NOT _448_ (
    .A(pad_response[79]),
    .Y(_141_)
  );
  NOR _449_ (
    .A(_062_),
    .B(_141_),
    .Y(_003_[79])
  );
  NOT _450_ (
    .A(pad_response[80]),
    .Y(_142_)
  );
  NOR _451_ (
    .A(_062_),
    .B(_142_),
    .Y(_003_[80])
  );
  NOT _452_ (
    .A(pad_response[81]),
    .Y(_143_)
  );
  NOR _453_ (
    .A(_062_),
    .B(_143_),
    .Y(_003_[81])
  );
  NOT _454_ (
    .A(pad_response[82]),
    .Y(_144_)
  );
  NOR _455_ (
    .A(_062_),
    .B(_144_),
    .Y(_003_[82])
  );
  NOT _456_ (
    .A(pad_response[83]),
    .Y(_145_)
  );
  NOR _457_ (
    .A(_062_),
    .B(_145_),
    .Y(_003_[83])
  );
  NOT _458_ (
    .A(pad_response[84]),
    .Y(_146_)
  );
  NOR _459_ (
    .A(_062_),
    .B(_146_),
    .Y(_003_[84])
  );
  NOT _460_ (
    .A(pad_response[85]),
    .Y(_147_)
  );
  NOR _461_ (
    .A(_062_),
    .B(_147_),
    .Y(_003_[85])
  );
  NOT _462_ (
    .A(pad_response[86]),
    .Y(_148_)
  );
  NOR _463_ (
    .A(_062_),
    .B(_148_),
    .Y(_003_[86])
  );
  NOT _464_ (
    .A(pad_response[87]),
    .Y(_149_)
  );
  NOR _465_ (
    .A(_062_),
    .B(_149_),
    .Y(_003_[87])
  );
  NOT _466_ (
    .A(pad_response[88]),
    .Y(_150_)
  );
  NOR _467_ (
    .A(_062_),
    .B(_150_),
    .Y(_003_[88])
  );
  NOT _468_ (
    .A(pad_response[89]),
    .Y(_151_)
  );
  NOR _469_ (
    .A(_062_),
    .B(_151_),
    .Y(_003_[89])
  );
  NOT _470_ (
    .A(pad_response[90]),
    .Y(_152_)
  );
  NOR _471_ (
    .A(_062_),
    .B(_152_),
    .Y(_003_[90])
  );
  NOT _472_ (
    .A(pad_response[91]),
    .Y(_153_)
  );
  NOR _473_ (
    .A(_062_),
    .B(_153_),
    .Y(_003_[91])
  );
  NOT _474_ (
    .A(pad_response[92]),
    .Y(_154_)
  );
  NOR _475_ (
    .A(_062_),
    .B(_154_),
    .Y(_003_[92])
  );
  NOT _476_ (
    .A(pad_response[93]),
    .Y(_155_)
  );
  NOR _477_ (
    .A(_062_),
    .B(_155_),
    .Y(_003_[93])
  );
  NOT _478_ (
    .A(pad_response[94]),
    .Y(_156_)
  );
  NOR _479_ (
    .A(_062_),
    .B(_156_),
    .Y(_003_[94])
  );
  NOT _480_ (
    .A(pad_response[95]),
    .Y(_157_)
  );
  NOR _481_ (
    .A(_062_),
    .B(_157_),
    .Y(_003_[95])
  );
  NOT _482_ (
    .A(pad_response[96]),
    .Y(_158_)
  );
  NOR _483_ (
    .A(_062_),
    .B(_158_),
    .Y(_003_[96])
  );
  NOT _484_ (
    .A(pad_response[97]),
    .Y(_159_)
  );
  NOR _485_ (
    .A(_062_),
    .B(_159_),
    .Y(_003_[97])
  );
  NOT _486_ (
    .A(pad_response[98]),
    .Y(_160_)
  );
  NOR _487_ (
    .A(_062_),
    .B(_160_),
    .Y(_003_[98])
  );
  NOT _488_ (
    .A(pad_response[99]),
    .Y(_161_)
  );
  NOR _489_ (
    .A(_062_),
    .B(_161_),
    .Y(_003_[99])
  );
  NOT _490_ (
    .A(pad_response[100]),
    .Y(_162_)
  );
  NOR _491_ (
    .A(_062_),
    .B(_162_),
    .Y(_003_[100])
  );
  NOT _492_ (
    .A(pad_response[101]),
    .Y(_163_)
  );
  NOR _493_ (
    .A(_062_),
    .B(_163_),
    .Y(_003_[101])
  );
  NOT _494_ (
    .A(pad_response[102]),
    .Y(_164_)
  );
  NOR _495_ (
    .A(_062_),
    .B(_164_),
    .Y(_003_[102])
  );
  NOT _496_ (
    .A(pad_response[103]),
    .Y(_165_)
  );
  NOR _497_ (
    .A(_062_),
    .B(_165_),
    .Y(_003_[103])
  );
  NOT _498_ (
    .A(pad_response[104]),
    .Y(_166_)
  );
  NOR _499_ (
    .A(_062_),
    .B(_166_),
    .Y(_003_[104])
  );
  NOT _500_ (
    .A(pad_response[105]),
    .Y(_167_)
  );
  NOR _501_ (
    .A(_062_),
    .B(_167_),
    .Y(_003_[105])
  );
  NOT _502_ (
    .A(pad_response[106]),
    .Y(_168_)
  );
  NOR _503_ (
    .A(_062_),
    .B(_168_),
    .Y(_003_[106])
  );
  NOT _504_ (
    .A(pad_response[107]),
    .Y(_169_)
  );
  NOR _505_ (
    .A(_062_),
    .B(_169_),
    .Y(_003_[107])
  );
  NOT _506_ (
    .A(pad_response[108]),
    .Y(_170_)
  );
  NOR _507_ (
    .A(_062_),
    .B(_170_),
    .Y(_003_[108])
  );
  NOT _508_ (
    .A(pad_response[109]),
    .Y(_171_)
  );
  NOR _509_ (
    .A(_062_),
    .B(_171_),
    .Y(_003_[109])
  );
  NOT _510_ (
    .A(pad_response[110]),
    .Y(_172_)
  );
  NOR _511_ (
    .A(_062_),
    .B(_172_),
    .Y(_003_[110])
  );
  NOT _512_ (
    .A(pad_response[111]),
    .Y(_173_)
  );
  NOR _513_ (
    .A(_062_),
    .B(_173_),
    .Y(_003_[111])
  );
  NOT _514_ (
    .A(pad_response[112]),
    .Y(_174_)
  );
  NOR _515_ (
    .A(_062_),
    .B(_174_),
    .Y(_003_[112])
  );
  NOT _516_ (
    .A(pad_response[113]),
    .Y(_175_)
  );
  NOR _517_ (
    .A(_062_),
    .B(_175_),
    .Y(_003_[113])
  );
  NOT _518_ (
    .A(pad_response[114]),
    .Y(_176_)
  );
  NOR _519_ (
    .A(_062_),
    .B(_176_),
    .Y(_003_[114])
  );
  NOT _520_ (
    .A(pad_response[115]),
    .Y(_177_)
  );
  NOR _521_ (
    .A(_062_),
    .B(_177_),
    .Y(_003_[115])
  );
  NOT _522_ (
    .A(pad_response[116]),
    .Y(_178_)
  );
  NOR _523_ (
    .A(_062_),
    .B(_178_),
    .Y(_003_[116])
  );
  NOT _524_ (
    .A(pad_response[117]),
    .Y(_179_)
  );
  NOR _525_ (
    .A(_062_),
    .B(_179_),
    .Y(_003_[117])
  );
  NOT _526_ (
    .A(pad_response[118]),
    .Y(_180_)
  );
  NOR _527_ (
    .A(_062_),
    .B(_180_),
    .Y(_003_[118])
  );
  NOT _528_ (
    .A(pad_response[119]),
    .Y(_181_)
  );
  NOR _529_ (
    .A(_062_),
    .B(_181_),
    .Y(_003_[119])
  );
  NOT _530_ (
    .A(pad_response[120]),
    .Y(_182_)
  );
  NOR _531_ (
    .A(_062_),
    .B(_182_),
    .Y(_003_[120])
  );
  NOT _532_ (
    .A(pad_response[121]),
    .Y(_183_)
  );
  NOR _533_ (
    .A(_062_),
    .B(_183_),
    .Y(_003_[121])
  );
  NOT _534_ (
    .A(pad_response[122]),
    .Y(_184_)
  );
  NOR _535_ (
    .A(_062_),
    .B(_184_),
    .Y(_003_[122])
  );
  NOT _536_ (
    .A(pad_response[123]),
    .Y(_185_)
  );
  NOR _537_ (
    .A(_062_),
    .B(_185_),
    .Y(_003_[123])
  );
  NOT _538_ (
    .A(pad_response[124]),
    .Y(_186_)
  );
  NOR _539_ (
    .A(_062_),
    .B(_186_),
    .Y(_003_[124])
  );
  NOT _540_ (
    .A(pad_response[125]),
    .Y(_187_)
  );
  NOR _541_ (
    .A(_062_),
    .B(_187_),
    .Y(_003_[125])
  );
  NOT _542_ (
    .A(pad_response[126]),
    .Y(_188_)
  );
  NOR _543_ (
    .A(_062_),
    .B(_188_),
    .Y(_003_[126])
  );
  NOT _544_ (
    .A(pad_response[127]),
    .Y(_189_)
  );
  NOR _545_ (
    .A(_062_),
    .B(_189_),
    .Y(_003_[127])
  );
  NOT _546_ (
    .A(pad_response[128]),
    .Y(_190_)
  );
  NOR _547_ (
    .A(_062_),
    .B(_190_),
    .Y(_003_[128])
  );
  NOT _548_ (
    .A(pad_response[129]),
    .Y(_191_)
  );
  NOR _549_ (
    .A(_062_),
    .B(_191_),
    .Y(_003_[129])
  );
  NOT _550_ (
    .A(pad_response[130]),
    .Y(_192_)
  );
  NOR _551_ (
    .A(_062_),
    .B(_192_),
    .Y(_003_[130])
  );
  NOT _552_ (
    .A(pad_response[131]),
    .Y(_193_)
  );
  NOR _553_ (
    .A(_062_),
    .B(_193_),
    .Y(_003_[131])
  );
  NOT _554_ (
    .A(pad_response[132]),
    .Y(_194_)
  );
  NOR _555_ (
    .A(_062_),
    .B(_194_),
    .Y(_003_[132])
  );
  NOT _556_ (
    .A(pad_response[133]),
    .Y(_195_)
  );
  NOR _557_ (
    .A(_062_),
    .B(_195_),
    .Y(_003_[133])
  );
  NOT _558_ (
    .A(pad_response[134]),
    .Y(_196_)
  );
  NOR _559_ (
    .A(_062_),
    .B(_196_),
    .Y(_003_[134])
  );
  NOT _560_ (
    .A(pad_response[135]),
    .Y(_197_)
  );
  NOR _561_ (
    .A(_062_),
    .B(_197_),
    .Y(_003_[135])
  );
  NOT _562_ (
    .A(_062_),
    .Y(_004_)
  );
  NOR _563_ (
    .A(_027_),
    .B(_007_),
    .Y(_000_)
  );
  NOT _564_ (
    .A(_018_),
    .Y(_198_)
  );
  NAND _565_ (
    .A(_047_),
    .B(_028_),
    .Y(_199_)
  );
  NAND _566_ (
    .A(_199_),
    .B(_198_),
    .Y(_200_)
  );
  NOR _567_ (
    .A(_008_),
    .B(_007_),
    .Y(_201_)
  );
  NOR _568_ (
    .A(_047_),
    .B(ack_in),
    .Y(_202_)
  );
  NOR _569_ (
    .A(_202_),
    .B(_053_),
    .Y(_203_)
  );
  NOR _570_ (
    .A(_203_),
    .B(_201_),
    .Y(_204_)
  );
  NAND _571_ (
    .A(estado[0]),
    .B(_007_),
    .Y(_205_)
  );
  NAND _572_ (
    .A(_205_),
    .B(_204_),
    .Y(_206_)
  );
  NOR _573_ (
    .A(_206_),
    .B(_200_),
    .Y(_223_)
  );
  NOT _574_ (
    .A(_201_),
    .Y(_207_)
  );
  NAND _575_ (
    .A(_049_),
    .B(_011_),
    .Y(_208_)
  );
  NAND _576_ (
    .A(_208_),
    .B(_010_),
    .Y(_209_)
  );
  NAND _577_ (
    .A(_209_),
    .B(_207_),
    .Y(_210_)
  );
  NOR _578_ (
    .A(_036_),
    .B(_018_),
    .Y(_211_)
  );
  NOR _579_ (
    .A(_009_),
    .B(reset_host),
    .Y(_212_)
  );
  NOR _580_ (
    .A(_212_),
    .B(_211_),
    .Y(_213_)
  );
  NOR _581_ (
    .A(_213_),
    .B(_210_),
    .Y(_224_)
  );
  NAND _582_ (
    .A(_198_),
    .B(_045_),
    .Y(_214_)
  );
  NOR _583_ (
    .A(_049_),
    .B(_058_),
    .Y(_215_)
  );
  NOR _584_ (
    .A(_215_),
    .B(_038_),
    .Y(_216_)
  );
  NAND _585_ (
    .A(_216_),
    .B(_204_),
    .Y(_217_)
  );
  NOR _586_ (
    .A(_217_),
    .B(_214_),
    .Y(_225_)
  );
  NOT _587_ (
    .A(_036_),
    .Y(_218_)
  );
  NAND _588_ (
    .A(_047_),
    .B(_018_),
    .Y(_219_)
  );
  NAND _589_ (
    .A(_219_),
    .B(_218_),
    .Y(_220_)
  );
  NOR _590_ (
    .A(_220_),
    .B(_210_),
    .Y(_226_)
  );
  NOT _591_ (
    .A(_211_),
    .Y(_221_)
  );
  NAND _592_ (
    .A(_209_),
    .B(_021_),
    .Y(_222_)
  );
  NOR _593_ (
    .A(_222_),
    .B(_221_),
    .Y(_227_)
  );
  NOR _594_ (
    .A(_217_),
    .B(_200_),
    .Y(_228_)
  );
  BUF _595_ (
    .A(_001_),
    .Y(_002_)
  );
  \$_DLATCH_P_  _596_ (
    .D(_001_),
    .E(_223_),
    .Q(enable_pts)
  );
  \$_DLATCH_P_  _597_ (
    .D(_006_),
    .E(_224_),
    .Q(reset_pts)
  );
  \$_DLATCH_P_  _598_ (
    .D(_005_),
    .E(_225_),
    .Q(enable_stp)
  );
  \$_DLATCH_P_  _599_ (
    .D(_004_),
    .E(_226_),
    .Q(strobe_out)
  );
  \$_DLATCH_P_  _600_ (
    .D(_000_),
    .E(_227_),
    .Q(ack_out)
  );
  \$_DLATCH_P_  _601_ (
    .D(_002_),
    .E(_228_),
    .Q(load_send)
  );
  \$_DLATCH_P_  _602_ (
    .D(_003_[0]),
    .E(_226_),
    .Q(response[0])
  );
  \$_DLATCH_P_  _603_ (
    .D(_003_[1]),
    .E(_226_),
    .Q(response[1])
  );
  \$_DLATCH_P_  _604_ (
    .D(_003_[2]),
    .E(_226_),
    .Q(response[2])
  );
  \$_DLATCH_P_  _605_ (
    .D(_003_[3]),
    .E(_226_),
    .Q(response[3])
  );
  \$_DLATCH_P_  _606_ (
    .D(_003_[4]),
    .E(_226_),
    .Q(response[4])
  );
  \$_DLATCH_P_  _607_ (
    .D(_003_[5]),
    .E(_226_),
    .Q(response[5])
  );
  \$_DLATCH_P_  _608_ (
    .D(_003_[6]),
    .E(_226_),
    .Q(response[6])
  );
  \$_DLATCH_P_  _609_ (
    .D(_003_[7]),
    .E(_226_),
    .Q(response[7])
  );
  \$_DLATCH_P_  _610_ (
    .D(_003_[8]),
    .E(_226_),
    .Q(response[8])
  );
  \$_DLATCH_P_  _611_ (
    .D(_003_[9]),
    .E(_226_),
    .Q(response[9])
  );
  \$_DLATCH_P_  _612_ (
    .D(_003_[10]),
    .E(_226_),
    .Q(response[10])
  );
  \$_DLATCH_P_  _613_ (
    .D(_003_[11]),
    .E(_226_),
    .Q(response[11])
  );
  \$_DLATCH_P_  _614_ (
    .D(_003_[12]),
    .E(_226_),
    .Q(response[12])
  );
  \$_DLATCH_P_  _615_ (
    .D(_003_[13]),
    .E(_226_),
    .Q(response[13])
  );
  \$_DLATCH_P_  _616_ (
    .D(_003_[14]),
    .E(_226_),
    .Q(response[14])
  );
  \$_DLATCH_P_  _617_ (
    .D(_003_[15]),
    .E(_226_),
    .Q(response[15])
  );
  \$_DLATCH_P_  _618_ (
    .D(_003_[16]),
    .E(_226_),
    .Q(response[16])
  );
  \$_DLATCH_P_  _619_ (
    .D(_003_[17]),
    .E(_226_),
    .Q(response[17])
  );
  \$_DLATCH_P_  _620_ (
    .D(_003_[18]),
    .E(_226_),
    .Q(response[18])
  );
  \$_DLATCH_P_  _621_ (
    .D(_003_[19]),
    .E(_226_),
    .Q(response[19])
  );
  \$_DLATCH_P_  _622_ (
    .D(_003_[20]),
    .E(_226_),
    .Q(response[20])
  );
  \$_DLATCH_P_  _623_ (
    .D(_003_[21]),
    .E(_226_),
    .Q(response[21])
  );
  \$_DLATCH_P_  _624_ (
    .D(_003_[22]),
    .E(_226_),
    .Q(response[22])
  );
  \$_DLATCH_P_  _625_ (
    .D(_003_[23]),
    .E(_226_),
    .Q(response[23])
  );
  \$_DLATCH_P_  _626_ (
    .D(_003_[24]),
    .E(_226_),
    .Q(response[24])
  );
  \$_DLATCH_P_  _627_ (
    .D(_003_[25]),
    .E(_226_),
    .Q(response[25])
  );
  \$_DLATCH_P_  _628_ (
    .D(_003_[26]),
    .E(_226_),
    .Q(response[26])
  );
  \$_DLATCH_P_  _629_ (
    .D(_003_[27]),
    .E(_226_),
    .Q(response[27])
  );
  \$_DLATCH_P_  _630_ (
    .D(_003_[28]),
    .E(_226_),
    .Q(response[28])
  );
  \$_DLATCH_P_  _631_ (
    .D(_003_[29]),
    .E(_226_),
    .Q(response[29])
  );
  \$_DLATCH_P_  _632_ (
    .D(_003_[30]),
    .E(_226_),
    .Q(response[30])
  );
  \$_DLATCH_P_  _633_ (
    .D(_003_[31]),
    .E(_226_),
    .Q(response[31])
  );
  \$_DLATCH_P_  _634_ (
    .D(_003_[32]),
    .E(_226_),
    .Q(response[32])
  );
  \$_DLATCH_P_  _635_ (
    .D(_003_[33]),
    .E(_226_),
    .Q(response[33])
  );
  \$_DLATCH_P_  _636_ (
    .D(_003_[34]),
    .E(_226_),
    .Q(response[34])
  );
  \$_DLATCH_P_  _637_ (
    .D(_003_[35]),
    .E(_226_),
    .Q(response[35])
  );
  \$_DLATCH_P_  _638_ (
    .D(_003_[36]),
    .E(_226_),
    .Q(response[36])
  );
  \$_DLATCH_P_  _639_ (
    .D(_003_[37]),
    .E(_226_),
    .Q(response[37])
  );
  \$_DLATCH_P_  _640_ (
    .D(_003_[38]),
    .E(_226_),
    .Q(response[38])
  );
  \$_DLATCH_P_  _641_ (
    .D(_003_[39]),
    .E(_226_),
    .Q(response[39])
  );
  \$_DLATCH_P_  _642_ (
    .D(_003_[40]),
    .E(_226_),
    .Q(response[40])
  );
  \$_DLATCH_P_  _643_ (
    .D(_003_[41]),
    .E(_226_),
    .Q(response[41])
  );
  \$_DLATCH_P_  _644_ (
    .D(_003_[42]),
    .E(_226_),
    .Q(response[42])
  );
  \$_DLATCH_P_  _645_ (
    .D(_003_[43]),
    .E(_226_),
    .Q(response[43])
  );
  \$_DLATCH_P_  _646_ (
    .D(_003_[44]),
    .E(_226_),
    .Q(response[44])
  );
  \$_DLATCH_P_  _647_ (
    .D(_003_[45]),
    .E(_226_),
    .Q(response[45])
  );
  \$_DLATCH_P_  _648_ (
    .D(_003_[46]),
    .E(_226_),
    .Q(response[46])
  );
  \$_DLATCH_P_  _649_ (
    .D(_003_[47]),
    .E(_226_),
    .Q(response[47])
  );
  \$_DLATCH_P_  _650_ (
    .D(_003_[48]),
    .E(_226_),
    .Q(response[48])
  );
  \$_DLATCH_P_  _651_ (
    .D(_003_[49]),
    .E(_226_),
    .Q(response[49])
  );
  \$_DLATCH_P_  _652_ (
    .D(_003_[50]),
    .E(_226_),
    .Q(response[50])
  );
  \$_DLATCH_P_  _653_ (
    .D(_003_[51]),
    .E(_226_),
    .Q(response[51])
  );
  \$_DLATCH_P_  _654_ (
    .D(_003_[52]),
    .E(_226_),
    .Q(response[52])
  );
  \$_DLATCH_P_  _655_ (
    .D(_003_[53]),
    .E(_226_),
    .Q(response[53])
  );
  \$_DLATCH_P_  _656_ (
    .D(_003_[54]),
    .E(_226_),
    .Q(response[54])
  );
  \$_DLATCH_P_  _657_ (
    .D(_003_[55]),
    .E(_226_),
    .Q(response[55])
  );
  \$_DLATCH_P_  _658_ (
    .D(_003_[56]),
    .E(_226_),
    .Q(response[56])
  );
  \$_DLATCH_P_  _659_ (
    .D(_003_[57]),
    .E(_226_),
    .Q(response[57])
  );
  \$_DLATCH_P_  _660_ (
    .D(_003_[58]),
    .E(_226_),
    .Q(response[58])
  );
  \$_DLATCH_P_  _661_ (
    .D(_003_[59]),
    .E(_226_),
    .Q(response[59])
  );
  \$_DLATCH_P_  _662_ (
    .D(_003_[60]),
    .E(_226_),
    .Q(response[60])
  );
  \$_DLATCH_P_  _663_ (
    .D(_003_[61]),
    .E(_226_),
    .Q(response[61])
  );
  \$_DLATCH_P_  _664_ (
    .D(_003_[62]),
    .E(_226_),
    .Q(response[62])
  );
  \$_DLATCH_P_  _665_ (
    .D(_003_[63]),
    .E(_226_),
    .Q(response[63])
  );
  \$_DLATCH_P_  _666_ (
    .D(_003_[64]),
    .E(_226_),
    .Q(response[64])
  );
  \$_DLATCH_P_  _667_ (
    .D(_003_[65]),
    .E(_226_),
    .Q(response[65])
  );
  \$_DLATCH_P_  _668_ (
    .D(_003_[66]),
    .E(_226_),
    .Q(response[66])
  );
  \$_DLATCH_P_  _669_ (
    .D(_003_[67]),
    .E(_226_),
    .Q(response[67])
  );
  \$_DLATCH_P_  _670_ (
    .D(_003_[68]),
    .E(_226_),
    .Q(response[68])
  );
  \$_DLATCH_P_  _671_ (
    .D(_003_[69]),
    .E(_226_),
    .Q(response[69])
  );
  \$_DLATCH_P_  _672_ (
    .D(_003_[70]),
    .E(_226_),
    .Q(response[70])
  );
  \$_DLATCH_P_  _673_ (
    .D(_003_[71]),
    .E(_226_),
    .Q(response[71])
  );
  \$_DLATCH_P_  _674_ (
    .D(_003_[72]),
    .E(_226_),
    .Q(response[72])
  );
  \$_DLATCH_P_  _675_ (
    .D(_003_[73]),
    .E(_226_),
    .Q(response[73])
  );
  \$_DLATCH_P_  _676_ (
    .D(_003_[74]),
    .E(_226_),
    .Q(response[74])
  );
  \$_DLATCH_P_  _677_ (
    .D(_003_[75]),
    .E(_226_),
    .Q(response[75])
  );
  \$_DLATCH_P_  _678_ (
    .D(_003_[76]),
    .E(_226_),
    .Q(response[76])
  );
  \$_DLATCH_P_  _679_ (
    .D(_003_[77]),
    .E(_226_),
    .Q(response[77])
  );
  \$_DLATCH_P_  _680_ (
    .D(_003_[78]),
    .E(_226_),
    .Q(response[78])
  );
  \$_DLATCH_P_  _681_ (
    .D(_003_[79]),
    .E(_226_),
    .Q(response[79])
  );
  \$_DLATCH_P_  _682_ (
    .D(_003_[80]),
    .E(_226_),
    .Q(response[80])
  );
  \$_DLATCH_P_  _683_ (
    .D(_003_[81]),
    .E(_226_),
    .Q(response[81])
  );
  \$_DLATCH_P_  _684_ (
    .D(_003_[82]),
    .E(_226_),
    .Q(response[82])
  );
  \$_DLATCH_P_  _685_ (
    .D(_003_[83]),
    .E(_226_),
    .Q(response[83])
  );
  \$_DLATCH_P_  _686_ (
    .D(_003_[84]),
    .E(_226_),
    .Q(response[84])
  );
  \$_DLATCH_P_  _687_ (
    .D(_003_[85]),
    .E(_226_),
    .Q(response[85])
  );
  \$_DLATCH_P_  _688_ (
    .D(_003_[86]),
    .E(_226_),
    .Q(response[86])
  );
  \$_DLATCH_P_  _689_ (
    .D(_003_[87]),
    .E(_226_),
    .Q(response[87])
  );
  \$_DLATCH_P_  _690_ (
    .D(_003_[88]),
    .E(_226_),
    .Q(response[88])
  );
  \$_DLATCH_P_  _691_ (
    .D(_003_[89]),
    .E(_226_),
    .Q(response[89])
  );
  \$_DLATCH_P_  _692_ (
    .D(_003_[90]),
    .E(_226_),
    .Q(response[90])
  );
  \$_DLATCH_P_  _693_ (
    .D(_003_[91]),
    .E(_226_),
    .Q(response[91])
  );
  \$_DLATCH_P_  _694_ (
    .D(_003_[92]),
    .E(_226_),
    .Q(response[92])
  );
  \$_DLATCH_P_  _695_ (
    .D(_003_[93]),
    .E(_226_),
    .Q(response[93])
  );
  \$_DLATCH_P_  _696_ (
    .D(_003_[94]),
    .E(_226_),
    .Q(response[94])
  );
  \$_DLATCH_P_  _697_ (
    .D(_003_[95]),
    .E(_226_),
    .Q(response[95])
  );
  \$_DLATCH_P_  _698_ (
    .D(_003_[96]),
    .E(_226_),
    .Q(response[96])
  );
  \$_DLATCH_P_  _699_ (
    .D(_003_[97]),
    .E(_226_),
    .Q(response[97])
  );
  \$_DLATCH_P_  _700_ (
    .D(_003_[98]),
    .E(_226_),
    .Q(response[98])
  );
  \$_DLATCH_P_  _701_ (
    .D(_003_[99]),
    .E(_226_),
    .Q(response[99])
  );
  \$_DLATCH_P_  _702_ (
    .D(_003_[100]),
    .E(_226_),
    .Q(response[100])
  );
  \$_DLATCH_P_  _703_ (
    .D(_003_[101]),
    .E(_226_),
    .Q(response[101])
  );
  \$_DLATCH_P_  _704_ (
    .D(_003_[102]),
    .E(_226_),
    .Q(response[102])
  );
  \$_DLATCH_P_  _705_ (
    .D(_003_[103]),
    .E(_226_),
    .Q(response[103])
  );
  \$_DLATCH_P_  _706_ (
    .D(_003_[104]),
    .E(_226_),
    .Q(response[104])
  );
  \$_DLATCH_P_  _707_ (
    .D(_003_[105]),
    .E(_226_),
    .Q(response[105])
  );
  \$_DLATCH_P_  _708_ (
    .D(_003_[106]),
    .E(_226_),
    .Q(response[106])
  );
  \$_DLATCH_P_  _709_ (
    .D(_003_[107]),
    .E(_226_),
    .Q(response[107])
  );
  \$_DLATCH_P_  _710_ (
    .D(_003_[108]),
    .E(_226_),
    .Q(response[108])
  );
  \$_DLATCH_P_  _711_ (
    .D(_003_[109]),
    .E(_226_),
    .Q(response[109])
  );
  \$_DLATCH_P_  _712_ (
    .D(_003_[110]),
    .E(_226_),
    .Q(response[110])
  );
  \$_DLATCH_P_  _713_ (
    .D(_003_[111]),
    .E(_226_),
    .Q(response[111])
  );
  \$_DLATCH_P_  _714_ (
    .D(_003_[112]),
    .E(_226_),
    .Q(response[112])
  );
  \$_DLATCH_P_  _715_ (
    .D(_003_[113]),
    .E(_226_),
    .Q(response[113])
  );
  \$_DLATCH_P_  _716_ (
    .D(_003_[114]),
    .E(_226_),
    .Q(response[114])
  );
  \$_DLATCH_P_  _717_ (
    .D(_003_[115]),
    .E(_226_),
    .Q(response[115])
  );
  \$_DLATCH_P_  _718_ (
    .D(_003_[116]),
    .E(_226_),
    .Q(response[116])
  );
  \$_DLATCH_P_  _719_ (
    .D(_003_[117]),
    .E(_226_),
    .Q(response[117])
  );
  \$_DLATCH_P_  _720_ (
    .D(_003_[118]),
    .E(_226_),
    .Q(response[118])
  );
  \$_DLATCH_P_  _721_ (
    .D(_003_[119]),
    .E(_226_),
    .Q(response[119])
  );
  \$_DLATCH_P_  _722_ (
    .D(_003_[120]),
    .E(_226_),
    .Q(response[120])
  );
  \$_DLATCH_P_  _723_ (
    .D(_003_[121]),
    .E(_226_),
    .Q(response[121])
  );
  \$_DLATCH_P_  _724_ (
    .D(_003_[122]),
    .E(_226_),
    .Q(response[122])
  );
  \$_DLATCH_P_  _725_ (
    .D(_003_[123]),
    .E(_226_),
    .Q(response[123])
  );
  \$_DLATCH_P_  _726_ (
    .D(_003_[124]),
    .E(_226_),
    .Q(response[124])
  );
  \$_DLATCH_P_  _727_ (
    .D(_003_[125]),
    .E(_226_),
    .Q(response[125])
  );
  \$_DLATCH_P_  _728_ (
    .D(_003_[126]),
    .E(_226_),
    .Q(response[126])
  );
  \$_DLATCH_P_  _729_ (
    .D(_003_[127]),
    .E(_226_),
    .Q(response[127])
  );
  \$_DLATCH_P_  _730_ (
    .D(_003_[128]),
    .E(_226_),
    .Q(response[128])
  );
  \$_DLATCH_P_  _731_ (
    .D(_003_[129]),
    .E(_226_),
    .Q(response[129])
  );
  \$_DLATCH_P_  _732_ (
    .D(_003_[130]),
    .E(_226_),
    .Q(response[130])
  );
  \$_DLATCH_P_  _733_ (
    .D(_003_[131]),
    .E(_226_),
    .Q(response[131])
  );
  \$_DLATCH_P_  _734_ (
    .D(_003_[132]),
    .E(_226_),
    .Q(response[132])
  );
  \$_DLATCH_P_  _735_ (
    .D(_003_[133]),
    .E(_226_),
    .Q(response[133])
  );
  \$_DLATCH_P_  _736_ (
    .D(_003_[134]),
    .E(_226_),
    .Q(response[134])
  );
  \$_DLATCH_P_  _737_ (
    .D(_003_[135]),
    .E(_226_),
    .Q(response[135])
  );
  assign reset_stp = reset_pts;
endmodule

module parallel_to_serial(enable_pts, reset_pts, clk_SD, signal_in, signal_out, parallel_complete);
  wire [8:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  input clk_SD;
  wire [8:0] contador;
  input enable_pts;
  output parallel_complete;
  input reset_pts;
  input [39:0] signal_in;
  output signal_out;
  NOT _188_ (
    .A(parallel_complete),
    .Y(_156_)
  );
  NOR _189_ (
    .A(enable_pts),
    .B(_156_),
    .Y(_157_)
  );
  NOR _190_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_158_)
  );
  NAND _191_ (
    .A(_158_),
    .B(contador[5]),
    .Y(_159_)
  );
  NOT _192_ (
    .A(contador[3]),
    .Y(_160_)
  );
  NOR _193_ (
    .A(_160_),
    .B(contador[4]),
    .Y(_161_)
  );
  NOT _194_ (
    .A(_161_),
    .Y(_162_)
  );
  NOR _195_ (
    .A(contador[6]),
    .B(contador[2]),
    .Y(_163_)
  );
  NOR _196_ (
    .A(contador[8]),
    .B(contador[7]),
    .Y(_164_)
  );
  NAND _197_ (
    .A(_164_),
    .B(_163_),
    .Y(_165_)
  );
  NOR _198_ (
    .A(_165_),
    .B(_162_),
    .Y(_166_)
  );
  NOT _199_ (
    .A(_166_),
    .Y(_167_)
  );
  NOR _200_ (
    .A(_167_),
    .B(_159_),
    .Y(_168_)
  );
  NAND _201_ (
    .A(_168_),
    .B(enable_pts),
    .Y(_169_)
  );
  NOT _202_ (
    .A(_169_),
    .Y(_170_)
  );
  NOR _203_ (
    .A(_170_),
    .B(_157_),
    .Y(_171_)
  );
  NOR _204_ (
    .A(_171_),
    .B(reset_pts),
    .Y(_001_)
  );
  NOR _205_ (
    .A(_170_),
    .B(reset_pts),
    .Y(_172_)
  );
  NOT _206_ (
    .A(_172_),
    .Y(_173_)
  );
  NOT _207_ (
    .A(enable_pts),
    .Y(_174_)
  );
  NOT _208_ (
    .A(contador[0]),
    .Y(_175_)
  );
  NAND _209_ (
    .A(_175_),
    .B(_174_),
    .Y(_176_)
  );
  NAND _210_ (
    .A(contador[0]),
    .B(enable_pts),
    .Y(_177_)
  );
  NAND _211_ (
    .A(_177_),
    .B(_176_),
    .Y(_178_)
  );
  NOR _212_ (
    .A(_178_),
    .B(_173_),
    .Y(_000_[0])
  );
  NOT _213_ (
    .A(contador[1]),
    .Y(_179_)
  );
  NOR _214_ (
    .A(_177_),
    .B(_179_),
    .Y(_180_)
  );
  NOT _215_ (
    .A(reset_pts),
    .Y(_181_)
  );
  NAND _216_ (
    .A(_177_),
    .B(_179_),
    .Y(_182_)
  );
  NAND _217_ (
    .A(_182_),
    .B(_181_),
    .Y(_183_)
  );
  NOR _218_ (
    .A(_183_),
    .B(_180_),
    .Y(_000_[1])
  );
  NOR _219_ (
    .A(_180_),
    .B(contador[2]),
    .Y(_184_)
  );
  NAND _220_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_185_)
  );
  NAND _221_ (
    .A(enable_pts),
    .B(contador[2]),
    .Y(_186_)
  );
  NOR _222_ (
    .A(_186_),
    .B(_185_),
    .Y(_187_)
  );
  NOT _223_ (
    .A(_187_),
    .Y(_003_)
  );
  NAND _224_ (
    .A(_003_),
    .B(_181_),
    .Y(_004_)
  );
  NOR _225_ (
    .A(_004_),
    .B(_184_),
    .Y(_000_[2])
  );
  NAND _226_ (
    .A(_003_),
    .B(_160_),
    .Y(_005_)
  );
  NOR _227_ (
    .A(_003_),
    .B(_160_),
    .Y(_006_)
  );
  NOT _228_ (
    .A(_006_),
    .Y(_007_)
  );
  NAND _229_ (
    .A(_007_),
    .B(_005_),
    .Y(_008_)
  );
  NOR _230_ (
    .A(_008_),
    .B(_173_),
    .Y(_000_[3])
  );
  NOR _231_ (
    .A(_006_),
    .B(contador[4]),
    .Y(_009_)
  );
  NOT _232_ (
    .A(contador[4]),
    .Y(_010_)
  );
  NOR _233_ (
    .A(_160_),
    .B(_010_),
    .Y(_011_)
  );
  NAND _234_ (
    .A(_011_),
    .B(_187_),
    .Y(_012_)
  );
  NAND _235_ (
    .A(_012_),
    .B(_181_),
    .Y(_013_)
  );
  NOR _236_ (
    .A(_013_),
    .B(_009_),
    .Y(_000_[4])
  );
  NOT _237_ (
    .A(contador[5]),
    .Y(_014_)
  );
  NAND _238_ (
    .A(_012_),
    .B(_014_),
    .Y(_015_)
  );
  NOR _239_ (
    .A(_012_),
    .B(_014_),
    .Y(_016_)
  );
  NOT _240_ (
    .A(_016_),
    .Y(_017_)
  );
  NAND _241_ (
    .A(_017_),
    .B(_015_),
    .Y(_018_)
  );
  NOR _242_ (
    .A(_018_),
    .B(_173_),
    .Y(_000_[5])
  );
  NAND _243_ (
    .A(_016_),
    .B(contador[6]),
    .Y(_019_)
  );
  NOT _244_ (
    .A(contador[6]),
    .Y(_020_)
  );
  NAND _245_ (
    .A(_017_),
    .B(_020_),
    .Y(_021_)
  );
  NAND _246_ (
    .A(_021_),
    .B(_019_),
    .Y(_022_)
  );
  NOR _247_ (
    .A(_022_),
    .B(reset_pts),
    .Y(_000_[6])
  );
  NOT _248_ (
    .A(contador[7]),
    .Y(_023_)
  );
  NOR _249_ (
    .A(_019_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _250_ (
    .A(_019_),
    .B(_023_),
    .Y(_025_)
  );
  NAND _251_ (
    .A(_025_),
    .B(_181_),
    .Y(_026_)
  );
  NOR _252_ (
    .A(_026_),
    .B(_024_),
    .Y(_000_[7])
  );
  NOT _253_ (
    .A(contador[8]),
    .Y(_027_)
  );
  NOR _254_ (
    .A(_024_),
    .B(_027_),
    .Y(_028_)
  );
  NOT _255_ (
    .A(_024_),
    .Y(_029_)
  );
  NOR _256_ (
    .A(_029_),
    .B(contador[8]),
    .Y(_030_)
  );
  NOR _257_ (
    .A(_030_),
    .B(_028_),
    .Y(_031_)
  );
  NOR _258_ (
    .A(_031_),
    .B(reset_pts),
    .Y(_000_[8])
  );
  NOR _259_ (
    .A(contador[3]),
    .B(contador[4]),
    .Y(_032_)
  );
  NOR _260_ (
    .A(_032_),
    .B(_014_),
    .Y(_033_)
  );
  NAND _261_ (
    .A(_032_),
    .B(_014_),
    .Y(_034_)
  );
  NOT _262_ (
    .A(_034_),
    .Y(_035_)
  );
  NOR _263_ (
    .A(_035_),
    .B(_033_),
    .Y(_036_)
  );
  NAND _264_ (
    .A(_032_),
    .B(signal_in[1]),
    .Y(_037_)
  );
  NOR _265_ (
    .A(contador[3]),
    .B(_010_),
    .Y(_038_)
  );
  NAND _266_ (
    .A(_038_),
    .B(signal_in[17]),
    .Y(_039_)
  );
  NAND _267_ (
    .A(_039_),
    .B(_037_),
    .Y(_040_)
  );
  NAND _268_ (
    .A(_161_),
    .B(signal_in[25]),
    .Y(_041_)
  );
  NAND _269_ (
    .A(_011_),
    .B(signal_in[9]),
    .Y(_042_)
  );
  NAND _270_ (
    .A(_042_),
    .B(_041_),
    .Y(_043_)
  );
  NOR _271_ (
    .A(_043_),
    .B(_040_),
    .Y(_044_)
  );
  NAND _272_ (
    .A(_044_),
    .B(_036_),
    .Y(_045_)
  );
  NOT _273_ (
    .A(contador[2]),
    .Y(_046_)
  );
  NOR _274_ (
    .A(_036_),
    .B(signal_in[33]),
    .Y(_047_)
  );
  NOR _275_ (
    .A(_047_),
    .B(_046_),
    .Y(_048_)
  );
  NAND _276_ (
    .A(_048_),
    .B(_045_),
    .Y(_049_)
  );
  NOT _277_ (
    .A(_033_),
    .Y(_050_)
  );
  NAND _278_ (
    .A(_034_),
    .B(_050_),
    .Y(_051_)
  );
  NAND _279_ (
    .A(_011_),
    .B(signal_in[13]),
    .Y(_052_)
  );
  NAND _280_ (
    .A(_038_),
    .B(signal_in[21]),
    .Y(_053_)
  );
  NAND _281_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NAND _282_ (
    .A(_161_),
    .B(signal_in[29]),
    .Y(_055_)
  );
  NAND _283_ (
    .A(_032_),
    .B(signal_in[5]),
    .Y(_056_)
  );
  NAND _284_ (
    .A(_056_),
    .B(_055_),
    .Y(_057_)
  );
  NOR _285_ (
    .A(_057_),
    .B(_054_),
    .Y(_058_)
  );
  NOR _286_ (
    .A(_058_),
    .B(_051_),
    .Y(_059_)
  );
  NOT _287_ (
    .A(signal_in[37]),
    .Y(_060_)
  );
  NOR _288_ (
    .A(_036_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _289_ (
    .A(_061_),
    .B(_059_),
    .Y(_062_)
  );
  NOR _290_ (
    .A(_062_),
    .B(contador[2]),
    .Y(_063_)
  );
  NOR _291_ (
    .A(_063_),
    .B(_179_),
    .Y(_064_)
  );
  NAND _292_ (
    .A(_064_),
    .B(_049_),
    .Y(_065_)
  );
  NAND _293_ (
    .A(_023_),
    .B(_020_),
    .Y(_066_)
  );
  NOR _294_ (
    .A(_033_),
    .B(_066_),
    .Y(_067_)
  );
  NAND _295_ (
    .A(_067_),
    .B(_065_),
    .Y(_068_)
  );
  NAND _296_ (
    .A(_011_),
    .B(signal_in[11]),
    .Y(_069_)
  );
  NAND _297_ (
    .A(_032_),
    .B(signal_in[3]),
    .Y(_070_)
  );
  NAND _298_ (
    .A(_070_),
    .B(_069_),
    .Y(_071_)
  );
  NAND _299_ (
    .A(_161_),
    .B(signal_in[27]),
    .Y(_072_)
  );
  NAND _300_ (
    .A(_038_),
    .B(signal_in[19]),
    .Y(_073_)
  );
  NAND _301_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  NOR _302_ (
    .A(_074_),
    .B(_071_),
    .Y(_075_)
  );
  NAND _303_ (
    .A(_075_),
    .B(_036_),
    .Y(_076_)
  );
  NOR _304_ (
    .A(_036_),
    .B(signal_in[35]),
    .Y(_077_)
  );
  NOR _305_ (
    .A(_077_),
    .B(_046_),
    .Y(_078_)
  );
  NAND _306_ (
    .A(_078_),
    .B(_076_),
    .Y(_079_)
  );
  NAND _307_ (
    .A(_011_),
    .B(signal_in[15]),
    .Y(_080_)
  );
  NAND _308_ (
    .A(_032_),
    .B(signal_in[7]),
    .Y(_081_)
  );
  NAND _309_ (
    .A(_081_),
    .B(_080_),
    .Y(_082_)
  );
  NAND _310_ (
    .A(_161_),
    .B(signal_in[31]),
    .Y(_083_)
  );
  NAND _311_ (
    .A(_038_),
    .B(signal_in[23]),
    .Y(_084_)
  );
  NAND _312_ (
    .A(_084_),
    .B(_083_),
    .Y(_085_)
  );
  NOR _313_ (
    .A(_085_),
    .B(_082_),
    .Y(_086_)
  );
  NAND _314_ (
    .A(_086_),
    .B(_036_),
    .Y(_087_)
  );
  NOT _315_ (
    .A(signal_in[39]),
    .Y(_088_)
  );
  NAND _316_ (
    .A(_051_),
    .B(_088_),
    .Y(_089_)
  );
  NAND _317_ (
    .A(_089_),
    .B(_087_),
    .Y(_090_)
  );
  NOR _318_ (
    .A(_090_),
    .B(contador[2]),
    .Y(_091_)
  );
  NOR _319_ (
    .A(_091_),
    .B(contador[1]),
    .Y(_092_)
  );
  NAND _320_ (
    .A(_092_),
    .B(_079_),
    .Y(_093_)
  );
  NAND _321_ (
    .A(_093_),
    .B(_175_),
    .Y(_094_)
  );
  NOR _322_ (
    .A(_094_),
    .B(_068_),
    .Y(_095_)
  );
  NAND _323_ (
    .A(_161_),
    .B(signal_in[28]),
    .Y(_096_)
  );
  NAND _324_ (
    .A(_038_),
    .B(signal_in[20]),
    .Y(_097_)
  );
  NAND _325_ (
    .A(_032_),
    .B(signal_in[4]),
    .Y(_098_)
  );
  NAND _326_ (
    .A(_098_),
    .B(_097_),
    .Y(_099_)
  );
  NAND _327_ (
    .A(_011_),
    .B(signal_in[12]),
    .Y(_100_)
  );
  NAND _328_ (
    .A(_100_),
    .B(_046_),
    .Y(_101_)
  );
  NOR _329_ (
    .A(_101_),
    .B(_099_),
    .Y(_102_)
  );
  NAND _330_ (
    .A(_102_),
    .B(_096_),
    .Y(_103_)
  );
  NAND _331_ (
    .A(_038_),
    .B(signal_in[16]),
    .Y(_104_)
  );
  NAND _332_ (
    .A(_104_),
    .B(contador[2]),
    .Y(_105_)
  );
  NAND _333_ (
    .A(_011_),
    .B(signal_in[8]),
    .Y(_106_)
  );
  NOT _334_ (
    .A(signal_in[24]),
    .Y(_107_)
  );
  NOR _335_ (
    .A(_162_),
    .B(_107_),
    .Y(_108_)
  );
  NOT _336_ (
    .A(signal_in[0]),
    .Y(_109_)
  );
  NOT _337_ (
    .A(_032_),
    .Y(_110_)
  );
  NOR _338_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NOR _339_ (
    .A(_111_),
    .B(_108_),
    .Y(_112_)
  );
  NAND _340_ (
    .A(_112_),
    .B(_106_),
    .Y(_113_)
  );
  NOR _341_ (
    .A(_113_),
    .B(_105_),
    .Y(_114_)
  );
  NOR _342_ (
    .A(_114_),
    .B(_179_),
    .Y(_115_)
  );
  NAND _343_ (
    .A(_115_),
    .B(_103_),
    .Y(_116_)
  );
  NAND _344_ (
    .A(_038_),
    .B(signal_in[18]),
    .Y(_117_)
  );
  NAND _345_ (
    .A(_032_),
    .B(signal_in[2]),
    .Y(_118_)
  );
  NAND _346_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NAND _347_ (
    .A(_011_),
    .B(signal_in[10]),
    .Y(_120_)
  );
  NAND _348_ (
    .A(_161_),
    .B(signal_in[26]),
    .Y(_121_)
  );
  NAND _349_ (
    .A(_121_),
    .B(_120_),
    .Y(_122_)
  );
  NOR _350_ (
    .A(_122_),
    .B(_119_),
    .Y(_123_)
  );
  NOR _351_ (
    .A(_123_),
    .B(_046_),
    .Y(_124_)
  );
  NAND _352_ (
    .A(_032_),
    .B(signal_in[6]),
    .Y(_125_)
  );
  NAND _353_ (
    .A(_011_),
    .B(signal_in[14]),
    .Y(_126_)
  );
  NAND _354_ (
    .A(_126_),
    .B(_125_),
    .Y(_127_)
  );
  NAND _355_ (
    .A(_161_),
    .B(signal_in[30]),
    .Y(_128_)
  );
  NAND _356_ (
    .A(_038_),
    .B(signal_in[22]),
    .Y(_129_)
  );
  NAND _357_ (
    .A(_129_),
    .B(_128_),
    .Y(_130_)
  );
  NOR _358_ (
    .A(_130_),
    .B(_127_),
    .Y(_131_)
  );
  NOR _359_ (
    .A(_131_),
    .B(contador[2]),
    .Y(_132_)
  );
  NOR _360_ (
    .A(_132_),
    .B(_124_),
    .Y(_133_)
  );
  NOR _361_ (
    .A(_133_),
    .B(contador[1]),
    .Y(_134_)
  );
  NOR _362_ (
    .A(_134_),
    .B(_051_),
    .Y(_135_)
  );
  NAND _363_ (
    .A(_135_),
    .B(_116_),
    .Y(_136_)
  );
  NOT _364_ (
    .A(signal_in[38]),
    .Y(_137_)
  );
  NOR _365_ (
    .A(_137_),
    .B(contador[2]),
    .Y(_138_)
  );
  NOT _366_ (
    .A(signal_in[34]),
    .Y(_139_)
  );
  NOR _367_ (
    .A(_139_),
    .B(_046_),
    .Y(_140_)
  );
  NOR _368_ (
    .A(_140_),
    .B(_138_),
    .Y(_141_)
  );
  NOR _369_ (
    .A(_141_),
    .B(contador[1]),
    .Y(_142_)
  );
  NAND _370_ (
    .A(signal_in[36]),
    .B(_046_),
    .Y(_143_)
  );
  NAND _371_ (
    .A(signal_in[32]),
    .B(contador[2]),
    .Y(_144_)
  );
  NAND _372_ (
    .A(_144_),
    .B(_143_),
    .Y(_145_)
  );
  NAND _373_ (
    .A(_145_),
    .B(contador[1]),
    .Y(_146_)
  );
  NAND _374_ (
    .A(_146_),
    .B(_035_),
    .Y(_147_)
  );
  NOR _375_ (
    .A(_147_),
    .B(_142_),
    .Y(_148_)
  );
  NAND _376_ (
    .A(_067_),
    .B(contador[0]),
    .Y(_149_)
  );
  NOR _377_ (
    .A(_149_),
    .B(_148_),
    .Y(_150_)
  );
  NAND _378_ (
    .A(_150_),
    .B(_136_),
    .Y(_151_)
  );
  NAND _379_ (
    .A(_168_),
    .B(signal_out),
    .Y(_152_)
  );
  NAND _380_ (
    .A(_152_),
    .B(_151_),
    .Y(_153_)
  );
  NOR _381_ (
    .A(_153_),
    .B(_095_),
    .Y(_154_)
  );
  NAND _382_ (
    .A(_181_),
    .B(enable_pts),
    .Y(_155_)
  );
  NOR _383_ (
    .A(_155_),
    .B(_154_),
    .Y(_002_)
  );
  DFF _384_ (
    .C(clk_SD),
    .D(_002_),
    .Q(signal_out)
  );
  DFF _385_ (
    .C(clk_SD),
    .D(_001_),
    .Q(parallel_complete)
  );
  DFF _386_ (
    .C(clk_SD),
    .D(_000_[0]),
    .Q(contador[0])
  );
  DFF _387_ (
    .C(clk_SD),
    .D(_000_[1]),
    .Q(contador[1])
  );
  DFF _388_ (
    .C(clk_SD),
    .D(_000_[2]),
    .Q(contador[2])
  );
  DFF _389_ (
    .C(clk_SD),
    .D(_000_[3]),
    .Q(contador[3])
  );
  DFF _390_ (
    .C(clk_SD),
    .D(_000_[4]),
    .Q(contador[4])
  );
  DFF _391_ (
    .C(clk_SD),
    .D(_000_[5]),
    .Q(contador[5])
  );
  DFF _392_ (
    .C(clk_SD),
    .D(_000_[6]),
    .Q(contador[6])
  );
  DFF _393_ (
    .C(clk_SD),
    .D(_000_[7]),
    .Q(contador[7])
  );
  DFF _394_ (
    .C(clk_SD),
    .D(_000_[8]),
    .Q(contador[8])
  );
endmodule

module serial_to_parallel(command, signal_in, enable_stp, reset_stp, clk_SD, signal_out, serial_complete);
  wire [8:0] _000_;
  wire [135:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  input clk_SD;
  input [39:0] command;
  wire [8:0] contador;
  input enable_stp;
  input reset_stp;
  output serial_complete;
  input signal_in;
  output [135:0] signal_out;
  NOT _253_ (
    .A(signal_out[5]),
    .Y(_002_)
  );
  NOT _254_ (
    .A(reset_stp),
    .Y(_003_)
  );
  NAND _255_ (
    .A(_003_),
    .B(enable_stp),
    .Y(_004_)
  );
  NOR _256_ (
    .A(_004_),
    .B(_002_),
    .Y(_242_)
  );
  NOT _257_ (
    .A(signal_out[33]),
    .Y(_005_)
  );
  NOR _258_ (
    .A(_004_),
    .B(_005_),
    .Y(_234_)
  );
  NOT _259_ (
    .A(signal_out[23]),
    .Y(_006_)
  );
  NOR _260_ (
    .A(_004_),
    .B(_006_),
    .Y(_229_)
  );
  NOT _261_ (
    .A(signal_out[38]),
    .Y(_007_)
  );
  NOR _262_ (
    .A(_004_),
    .B(_007_),
    .Y(_239_)
  );
  NOT _263_ (
    .A(signal_out[37]),
    .Y(_008_)
  );
  NOR _264_ (
    .A(_004_),
    .B(_008_),
    .Y(_238_)
  );
  NOT _265_ (
    .A(signal_out[0]),
    .Y(_009_)
  );
  NOR _266_ (
    .A(_004_),
    .B(_009_),
    .Y(_240_)
  );
  NOT _267_ (
    .A(signal_out[6]),
    .Y(_010_)
  );
  NOR _268_ (
    .A(_004_),
    .B(_010_),
    .Y(_243_)
  );
  NOT _269_ (
    .A(signal_out[7]),
    .Y(_011_)
  );
  NOR _270_ (
    .A(_004_),
    .B(_011_),
    .Y(_244_)
  );
  NOT _271_ (
    .A(signal_out[11]),
    .Y(_012_)
  );
  NOR _272_ (
    .A(_004_),
    .B(_012_),
    .Y(_248_)
  );
  NOT _273_ (
    .A(signal_out[10]),
    .Y(_013_)
  );
  NOR _274_ (
    .A(_004_),
    .B(_013_),
    .Y(_247_)
  );
  NOT _275_ (
    .A(signal_out[34]),
    .Y(_014_)
  );
  NOR _276_ (
    .A(_004_),
    .B(_014_),
    .Y(_235_)
  );
  NOT _277_ (
    .A(signal_out[35]),
    .Y(_015_)
  );
  NOR _278_ (
    .A(_004_),
    .B(_015_),
    .Y(_236_)
  );
  NOT _279_ (
    .A(signal_out[8]),
    .Y(_016_)
  );
  NOR _280_ (
    .A(_004_),
    .B(_016_),
    .Y(_245_)
  );
  NOT _281_ (
    .A(signal_out[36]),
    .Y(_017_)
  );
  NOR _282_ (
    .A(_004_),
    .B(_017_),
    .Y(_237_)
  );
  NOT _283_ (
    .A(signal_out[32]),
    .Y(_018_)
  );
  NOR _284_ (
    .A(_004_),
    .B(_018_),
    .Y(_233_)
  );
  NOT _285_ (
    .A(signal_out[31]),
    .Y(_019_)
  );
  NOR _286_ (
    .A(_004_),
    .B(_019_),
    .Y(_232_)
  );
  NOT _287_ (
    .A(signal_out[14]),
    .Y(_020_)
  );
  NOR _288_ (
    .A(_004_),
    .B(_020_),
    .Y(_251_)
  );
  NOT _289_ (
    .A(signal_out[17]),
    .Y(_021_)
  );
  NOR _290_ (
    .A(_004_),
    .B(_021_),
    .Y(_228_)
  );
  NOT _291_ (
    .A(signal_out[13]),
    .Y(_022_)
  );
  NOR _292_ (
    .A(_004_),
    .B(_022_),
    .Y(_250_)
  );
  NOT _293_ (
    .A(signal_out[15]),
    .Y(_023_)
  );
  NOR _294_ (
    .A(_004_),
    .B(_023_),
    .Y(_252_)
  );
  NOT _295_ (
    .A(signal_out[12]),
    .Y(_024_)
  );
  NOR _296_ (
    .A(_004_),
    .B(_024_),
    .Y(_249_)
  );
  NOT _297_ (
    .A(signal_out[2]),
    .Y(_025_)
  );
  NOR _298_ (
    .A(_004_),
    .B(_025_),
    .Y(_241_)
  );
  NOT _299_ (
    .A(signal_out[30]),
    .Y(_026_)
  );
  NOR _300_ (
    .A(_004_),
    .B(_026_),
    .Y(_231_)
  );
  NOT _301_ (
    .A(signal_out[29]),
    .Y(_027_)
  );
  NOR _302_ (
    .A(_004_),
    .B(_027_),
    .Y(_230_)
  );
  NOT _303_ (
    .A(signal_out[16]),
    .Y(_028_)
  );
  NOR _304_ (
    .A(_004_),
    .B(_028_),
    .Y(_227_)
  );
  NOT _305_ (
    .A(signal_out[9]),
    .Y(_029_)
  );
  NOR _306_ (
    .A(_004_),
    .B(_029_),
    .Y(_246_)
  );
  NOT _307_ (
    .A(signal_out[1]),
    .Y(_030_)
  );
  NOR _308_ (
    .A(_004_),
    .B(_030_),
    .Y(_001_[1])
  );
  NOT _309_ (
    .A(signal_out[28]),
    .Y(_031_)
  );
  NOR _310_ (
    .A(_004_),
    .B(_031_),
    .Y(_001_[28])
  );
  NOT _311_ (
    .A(signal_out[4]),
    .Y(_032_)
  );
  NOR _312_ (
    .A(_004_),
    .B(_032_),
    .Y(_001_[4])
  );
  NOT _313_ (
    .A(signal_out[27]),
    .Y(_033_)
  );
  NOR _314_ (
    .A(_004_),
    .B(_033_),
    .Y(_001_[27])
  );
  NOT _315_ (
    .A(signal_out[26]),
    .Y(_034_)
  );
  NOR _316_ (
    .A(_004_),
    .B(_034_),
    .Y(_001_[26])
  );
  NOT _317_ (
    .A(signal_out[3]),
    .Y(_035_)
  );
  NOR _318_ (
    .A(_004_),
    .B(_035_),
    .Y(_001_[3])
  );
  NOT _319_ (
    .A(signal_out[22]),
    .Y(_036_)
  );
  NOR _320_ (
    .A(_004_),
    .B(_036_),
    .Y(_001_[22])
  );
  NOT _321_ (
    .A(signal_out[21]),
    .Y(_037_)
  );
  NOR _322_ (
    .A(_004_),
    .B(_037_),
    .Y(_001_[21])
  );
  NOT _323_ (
    .A(signal_out[18]),
    .Y(_038_)
  );
  NOR _324_ (
    .A(_004_),
    .B(_038_),
    .Y(_001_[18])
  );
  NOT _325_ (
    .A(signal_out[25]),
    .Y(_040_)
  );
  NOR _326_ (
    .A(_004_),
    .B(_040_),
    .Y(_001_[25])
  );
  NOT _327_ (
    .A(signal_out[24]),
    .Y(_042_)
  );
  NOR _328_ (
    .A(_004_),
    .B(_042_),
    .Y(_001_[24])
  );
  NOT _329_ (
    .A(signal_out[20]),
    .Y(_043_)
  );
  NOR _330_ (
    .A(_004_),
    .B(_043_),
    .Y(_001_[20])
  );
  NOT _331_ (
    .A(signal_out[19]),
    .Y(_045_)
  );
  NOR _332_ (
    .A(_004_),
    .B(_045_),
    .Y(_001_[19])
  );
  NOT _333_ (
    .A(signal_out[39]),
    .Y(_047_)
  );
  NOR _334_ (
    .A(_004_),
    .B(_047_),
    .Y(_001_[39])
  );
  NOT _335_ (
    .A(signal_out[40]),
    .Y(_048_)
  );
  NOR _336_ (
    .A(_004_),
    .B(_048_),
    .Y(_001_[40])
  );
  NOT _337_ (
    .A(signal_out[41]),
    .Y(_050_)
  );
  NOR _338_ (
    .A(_004_),
    .B(_050_),
    .Y(_001_[41])
  );
  NOT _339_ (
    .A(signal_out[42]),
    .Y(_052_)
  );
  NOR _340_ (
    .A(_004_),
    .B(_052_),
    .Y(_001_[42])
  );
  NOT _341_ (
    .A(signal_out[43]),
    .Y(_053_)
  );
  NOR _342_ (
    .A(_004_),
    .B(_053_),
    .Y(_001_[43])
  );
  NOT _343_ (
    .A(signal_out[44]),
    .Y(_055_)
  );
  NOR _344_ (
    .A(_004_),
    .B(_055_),
    .Y(_001_[44])
  );
  NOT _345_ (
    .A(signal_out[45]),
    .Y(_057_)
  );
  NOR _346_ (
    .A(_004_),
    .B(_057_),
    .Y(_001_[45])
  );
  NOT _347_ (
    .A(signal_out[46]),
    .Y(_058_)
  );
  NOR _348_ (
    .A(_004_),
    .B(_058_),
    .Y(_001_[46])
  );
  NOT _349_ (
    .A(signal_out[47]),
    .Y(_060_)
  );
  NOR _350_ (
    .A(_004_),
    .B(_060_),
    .Y(_001_[47])
  );
  NOT _351_ (
    .A(signal_out[48]),
    .Y(_062_)
  );
  NOR _352_ (
    .A(_004_),
    .B(_062_),
    .Y(_001_[48])
  );
  NOT _353_ (
    .A(signal_out[49]),
    .Y(_063_)
  );
  NOR _354_ (
    .A(_004_),
    .B(_063_),
    .Y(_001_[49])
  );
  NOT _355_ (
    .A(signal_out[50]),
    .Y(_065_)
  );
  NOR _356_ (
    .A(_004_),
    .B(_065_),
    .Y(_001_[50])
  );
  NOT _357_ (
    .A(signal_out[51]),
    .Y(_067_)
  );
  NOR _358_ (
    .A(_004_),
    .B(_067_),
    .Y(_001_[51])
  );
  NOT _359_ (
    .A(signal_out[52]),
    .Y(_068_)
  );
  NOR _360_ (
    .A(_004_),
    .B(_068_),
    .Y(_001_[52])
  );
  NOT _361_ (
    .A(signal_out[53]),
    .Y(_070_)
  );
  NOR _362_ (
    .A(_004_),
    .B(_070_),
    .Y(_001_[53])
  );
  NOT _363_ (
    .A(signal_out[54]),
    .Y(_072_)
  );
  NOR _364_ (
    .A(_004_),
    .B(_072_),
    .Y(_001_[54])
  );
  NOT _365_ (
    .A(signal_out[55]),
    .Y(_073_)
  );
  NOR _366_ (
    .A(_004_),
    .B(_073_),
    .Y(_001_[55])
  );
  NOT _367_ (
    .A(signal_out[56]),
    .Y(_075_)
  );
  NOR _368_ (
    .A(_004_),
    .B(_075_),
    .Y(_001_[56])
  );
  NOT _369_ (
    .A(signal_out[57]),
    .Y(_077_)
  );
  NOR _370_ (
    .A(_004_),
    .B(_077_),
    .Y(_001_[57])
  );
  NOT _371_ (
    .A(signal_out[58]),
    .Y(_078_)
  );
  NOR _372_ (
    .A(_004_),
    .B(_078_),
    .Y(_001_[58])
  );
  NOT _373_ (
    .A(signal_out[59]),
    .Y(_080_)
  );
  NOR _374_ (
    .A(_004_),
    .B(_080_),
    .Y(_001_[59])
  );
  NOT _375_ (
    .A(signal_out[60]),
    .Y(_082_)
  );
  NOR _376_ (
    .A(_004_),
    .B(_082_),
    .Y(_001_[60])
  );
  NOT _377_ (
    .A(signal_out[61]),
    .Y(_083_)
  );
  NOR _378_ (
    .A(_004_),
    .B(_083_),
    .Y(_001_[61])
  );
  NOT _379_ (
    .A(signal_out[62]),
    .Y(_085_)
  );
  NOR _380_ (
    .A(_004_),
    .B(_085_),
    .Y(_001_[62])
  );
  NOT _381_ (
    .A(signal_out[63]),
    .Y(_087_)
  );
  NOR _382_ (
    .A(_004_),
    .B(_087_),
    .Y(_001_[63])
  );
  NOT _383_ (
    .A(signal_out[64]),
    .Y(_088_)
  );
  NOR _384_ (
    .A(_004_),
    .B(_088_),
    .Y(_001_[64])
  );
  NOT _385_ (
    .A(signal_out[65]),
    .Y(_090_)
  );
  NOR _386_ (
    .A(_004_),
    .B(_090_),
    .Y(_001_[65])
  );
  NOT _387_ (
    .A(signal_out[66]),
    .Y(_091_)
  );
  NOR _388_ (
    .A(_004_),
    .B(_091_),
    .Y(_001_[66])
  );
  NOT _389_ (
    .A(signal_out[67]),
    .Y(_092_)
  );
  NOR _390_ (
    .A(_004_),
    .B(_092_),
    .Y(_001_[67])
  );
  NOT _391_ (
    .A(signal_out[68]),
    .Y(_093_)
  );
  NOR _392_ (
    .A(_004_),
    .B(_093_),
    .Y(_001_[68])
  );
  NOT _393_ (
    .A(signal_out[69]),
    .Y(_094_)
  );
  NOR _394_ (
    .A(_004_),
    .B(_094_),
    .Y(_001_[69])
  );
  NOT _395_ (
    .A(signal_out[70]),
    .Y(_095_)
  );
  NOR _396_ (
    .A(_004_),
    .B(_095_),
    .Y(_001_[70])
  );
  NOT _397_ (
    .A(signal_out[71]),
    .Y(_096_)
  );
  NOR _398_ (
    .A(_004_),
    .B(_096_),
    .Y(_001_[71])
  );
  NOT _399_ (
    .A(signal_out[72]),
    .Y(_097_)
  );
  NOR _400_ (
    .A(_004_),
    .B(_097_),
    .Y(_001_[72])
  );
  NOT _401_ (
    .A(signal_out[73]),
    .Y(_098_)
  );
  NOR _402_ (
    .A(_004_),
    .B(_098_),
    .Y(_001_[73])
  );
  NOT _403_ (
    .A(signal_out[74]),
    .Y(_099_)
  );
  NOR _404_ (
    .A(_004_),
    .B(_099_),
    .Y(_001_[74])
  );
  NOT _405_ (
    .A(signal_out[75]),
    .Y(_100_)
  );
  NOR _406_ (
    .A(_004_),
    .B(_100_),
    .Y(_001_[75])
  );
  NOT _407_ (
    .A(signal_out[76]),
    .Y(_101_)
  );
  NOR _408_ (
    .A(_004_),
    .B(_101_),
    .Y(_001_[76])
  );
  NOT _409_ (
    .A(signal_out[77]),
    .Y(_102_)
  );
  NOR _410_ (
    .A(_004_),
    .B(_102_),
    .Y(_001_[77])
  );
  NOT _411_ (
    .A(signal_out[78]),
    .Y(_103_)
  );
  NOR _412_ (
    .A(_004_),
    .B(_103_),
    .Y(_001_[78])
  );
  NOT _413_ (
    .A(signal_out[79]),
    .Y(_104_)
  );
  NOR _414_ (
    .A(_004_),
    .B(_104_),
    .Y(_001_[79])
  );
  NOT _415_ (
    .A(signal_out[80]),
    .Y(_106_)
  );
  NOR _416_ (
    .A(_004_),
    .B(_106_),
    .Y(_001_[80])
  );
  NOT _417_ (
    .A(signal_out[81]),
    .Y(_107_)
  );
  NOR _418_ (
    .A(_004_),
    .B(_107_),
    .Y(_001_[81])
  );
  NOT _419_ (
    .A(signal_out[82]),
    .Y(_108_)
  );
  NOR _420_ (
    .A(_004_),
    .B(_108_),
    .Y(_001_[82])
  );
  NOT _421_ (
    .A(signal_out[83]),
    .Y(_110_)
  );
  NOR _422_ (
    .A(_004_),
    .B(_110_),
    .Y(_001_[83])
  );
  NOT _423_ (
    .A(signal_out[84]),
    .Y(_112_)
  );
  NOR _424_ (
    .A(_004_),
    .B(_112_),
    .Y(_001_[84])
  );
  NOT _425_ (
    .A(signal_out[85]),
    .Y(_114_)
  );
  NOR _426_ (
    .A(_004_),
    .B(_114_),
    .Y(_001_[85])
  );
  NOT _427_ (
    .A(signal_out[86]),
    .Y(_115_)
  );
  NOR _428_ (
    .A(_004_),
    .B(_115_),
    .Y(_001_[86])
  );
  NOT _429_ (
    .A(signal_out[87]),
    .Y(_116_)
  );
  NOR _430_ (
    .A(_004_),
    .B(_116_),
    .Y(_001_[87])
  );
  NOT _431_ (
    .A(signal_out[88]),
    .Y(_117_)
  );
  NOR _432_ (
    .A(_004_),
    .B(_117_),
    .Y(_001_[88])
  );
  NOT _433_ (
    .A(signal_out[89]),
    .Y(_118_)
  );
  NOR _434_ (
    .A(_004_),
    .B(_118_),
    .Y(_001_[89])
  );
  NOT _435_ (
    .A(signal_out[90]),
    .Y(_119_)
  );
  NOR _436_ (
    .A(_004_),
    .B(_119_),
    .Y(_001_[90])
  );
  NOT _437_ (
    .A(signal_out[91]),
    .Y(_120_)
  );
  NOR _438_ (
    .A(_004_),
    .B(_120_),
    .Y(_001_[91])
  );
  NOT _439_ (
    .A(signal_out[92]),
    .Y(_121_)
  );
  NOR _440_ (
    .A(_004_),
    .B(_121_),
    .Y(_001_[92])
  );
  NOT _441_ (
    .A(signal_out[93]),
    .Y(_122_)
  );
  NOR _442_ (
    .A(_004_),
    .B(_122_),
    .Y(_001_[93])
  );
  NOT _443_ (
    .A(signal_out[94]),
    .Y(_123_)
  );
  NOR _444_ (
    .A(_004_),
    .B(_123_),
    .Y(_001_[94])
  );
  NOT _445_ (
    .A(signal_out[95]),
    .Y(_124_)
  );
  NOR _446_ (
    .A(_004_),
    .B(_124_),
    .Y(_001_[95])
  );
  NOT _447_ (
    .A(signal_out[96]),
    .Y(_125_)
  );
  NOR _448_ (
    .A(_004_),
    .B(_125_),
    .Y(_001_[96])
  );
  NOT _449_ (
    .A(signal_out[97]),
    .Y(_126_)
  );
  NOR _450_ (
    .A(_004_),
    .B(_126_),
    .Y(_001_[97])
  );
  NOT _451_ (
    .A(signal_out[98]),
    .Y(_127_)
  );
  NOR _452_ (
    .A(_004_),
    .B(_127_),
    .Y(_001_[98])
  );
  NOT _453_ (
    .A(signal_out[99]),
    .Y(_128_)
  );
  NOR _454_ (
    .A(_004_),
    .B(_128_),
    .Y(_001_[99])
  );
  NOT _455_ (
    .A(signal_out[100]),
    .Y(_129_)
  );
  NOR _456_ (
    .A(_004_),
    .B(_129_),
    .Y(_001_[100])
  );
  NOT _457_ (
    .A(signal_out[101]),
    .Y(_130_)
  );
  NOR _458_ (
    .A(_004_),
    .B(_130_),
    .Y(_001_[101])
  );
  NOT _459_ (
    .A(signal_out[102]),
    .Y(_131_)
  );
  NOR _460_ (
    .A(_004_),
    .B(_131_),
    .Y(_001_[102])
  );
  NOT _461_ (
    .A(signal_out[103]),
    .Y(_132_)
  );
  NOR _462_ (
    .A(_004_),
    .B(_132_),
    .Y(_001_[103])
  );
  NOT _463_ (
    .A(signal_out[104]),
    .Y(_133_)
  );
  NOR _464_ (
    .A(_004_),
    .B(_133_),
    .Y(_001_[104])
  );
  NOT _465_ (
    .A(signal_out[105]),
    .Y(_134_)
  );
  NOR _466_ (
    .A(_004_),
    .B(_134_),
    .Y(_001_[105])
  );
  NOT _467_ (
    .A(signal_out[106]),
    .Y(_135_)
  );
  NOR _468_ (
    .A(_004_),
    .B(_135_),
    .Y(_001_[106])
  );
  NOT _469_ (
    .A(signal_out[107]),
    .Y(_136_)
  );
  NOR _470_ (
    .A(_004_),
    .B(_136_),
    .Y(_001_[107])
  );
  NOT _471_ (
    .A(signal_out[108]),
    .Y(_137_)
  );
  NOR _472_ (
    .A(_004_),
    .B(_137_),
    .Y(_001_[108])
  );
  NOT _473_ (
    .A(signal_out[109]),
    .Y(_138_)
  );
  NOR _474_ (
    .A(_004_),
    .B(_138_),
    .Y(_001_[109])
  );
  NOT _475_ (
    .A(signal_out[110]),
    .Y(_139_)
  );
  NOR _476_ (
    .A(_004_),
    .B(_139_),
    .Y(_001_[110])
  );
  NOT _477_ (
    .A(signal_out[111]),
    .Y(_140_)
  );
  NOR _478_ (
    .A(_004_),
    .B(_140_),
    .Y(_001_[111])
  );
  NOT _479_ (
    .A(signal_out[112]),
    .Y(_141_)
  );
  NOR _480_ (
    .A(_004_),
    .B(_141_),
    .Y(_001_[112])
  );
  NOT _481_ (
    .A(signal_out[113]),
    .Y(_142_)
  );
  NOR _482_ (
    .A(_004_),
    .B(_142_),
    .Y(_001_[113])
  );
  NOT _483_ (
    .A(signal_out[114]),
    .Y(_143_)
  );
  NOR _484_ (
    .A(_004_),
    .B(_143_),
    .Y(_001_[114])
  );
  NOT _485_ (
    .A(signal_out[115]),
    .Y(_144_)
  );
  NOR _486_ (
    .A(_004_),
    .B(_144_),
    .Y(_039_)
  );
  NOT _487_ (
    .A(signal_out[116]),
    .Y(_145_)
  );
  NOR _488_ (
    .A(_004_),
    .B(_145_),
    .Y(_041_)
  );
  NOT _489_ (
    .A(signal_out[117]),
    .Y(_146_)
  );
  NOR _490_ (
    .A(_004_),
    .B(_146_),
    .Y(_044_)
  );
  NOT _491_ (
    .A(signal_out[118]),
    .Y(_147_)
  );
  NOR _492_ (
    .A(_004_),
    .B(_147_),
    .Y(_046_)
  );
  NOT _493_ (
    .A(signal_out[119]),
    .Y(_148_)
  );
  NOR _494_ (
    .A(_004_),
    .B(_148_),
    .Y(_049_)
  );
  NOT _495_ (
    .A(signal_out[120]),
    .Y(_149_)
  );
  NOR _496_ (
    .A(_004_),
    .B(_149_),
    .Y(_051_)
  );
  NOT _497_ (
    .A(signal_out[121]),
    .Y(_150_)
  );
  NOR _498_ (
    .A(_004_),
    .B(_150_),
    .Y(_054_)
  );
  NOT _499_ (
    .A(signal_out[122]),
    .Y(_151_)
  );
  NOR _500_ (
    .A(_004_),
    .B(_151_),
    .Y(_056_)
  );
  NOT _501_ (
    .A(signal_out[123]),
    .Y(_152_)
  );
  NOR _502_ (
    .A(_004_),
    .B(_152_),
    .Y(_059_)
  );
  NOT _503_ (
    .A(signal_out[124]),
    .Y(_153_)
  );
  NOR _504_ (
    .A(_004_),
    .B(_153_),
    .Y(_061_)
  );
  NOT _505_ (
    .A(signal_out[125]),
    .Y(_154_)
  );
  NOR _506_ (
    .A(_004_),
    .B(_154_),
    .Y(_064_)
  );
  NOT _507_ (
    .A(signal_out[126]),
    .Y(_155_)
  );
  NOR _508_ (
    .A(_004_),
    .B(_155_),
    .Y(_066_)
  );
  NOT _509_ (
    .A(signal_out[127]),
    .Y(_156_)
  );
  NOR _510_ (
    .A(_004_),
    .B(_156_),
    .Y(_069_)
  );
  NOT _511_ (
    .A(signal_out[128]),
    .Y(_157_)
  );
  NOR _512_ (
    .A(_004_),
    .B(_157_),
    .Y(_071_)
  );
  NOT _513_ (
    .A(signal_out[129]),
    .Y(_158_)
  );
  NOR _514_ (
    .A(_004_),
    .B(_158_),
    .Y(_074_)
  );
  NOT _515_ (
    .A(signal_out[130]),
    .Y(_159_)
  );
  NOR _516_ (
    .A(_004_),
    .B(_159_),
    .Y(_076_)
  );
  NOT _517_ (
    .A(signal_out[131]),
    .Y(_160_)
  );
  NOR _518_ (
    .A(_004_),
    .B(_160_),
    .Y(_079_)
  );
  NOT _519_ (
    .A(signal_out[132]),
    .Y(_161_)
  );
  NOR _520_ (
    .A(_004_),
    .B(_161_),
    .Y(_081_)
  );
  NOT _521_ (
    .A(signal_out[133]),
    .Y(_162_)
  );
  NOR _522_ (
    .A(_004_),
    .B(_162_),
    .Y(_084_)
  );
  NOT _523_ (
    .A(signal_out[134]),
    .Y(_163_)
  );
  NOR _524_ (
    .A(_004_),
    .B(_163_),
    .Y(_086_)
  );
  NOT _525_ (
    .A(signal_out[135]),
    .Y(_164_)
  );
  NOR _526_ (
    .A(_004_),
    .B(_164_),
    .Y(_089_)
  );
  NOR _527_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_165_)
  );
  NOT _528_ (
    .A(enable_stp),
    .Y(_166_)
  );
  NOR _529_ (
    .A(_166_),
    .B(contador[8]),
    .Y(_167_)
  );
  NAND _530_ (
    .A(_167_),
    .B(_165_),
    .Y(_168_)
  );
  NOT _531_ (
    .A(contador[4]),
    .Y(_169_)
  );
  NOT _532_ (
    .A(contador[5]),
    .Y(_170_)
  );
  NAND _533_ (
    .A(_170_),
    .B(_169_),
    .Y(_171_)
  );
  NOT _534_ (
    .A(contador[6]),
    .Y(_172_)
  );
  NOT _535_ (
    .A(contador[7]),
    .Y(_173_)
  );
  NAND _536_ (
    .A(_173_),
    .B(_172_),
    .Y(_174_)
  );
  NOR _537_ (
    .A(_174_),
    .B(_171_),
    .Y(_175_)
  );
  NOR _538_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_176_)
  );
  NAND _539_ (
    .A(_176_),
    .B(_175_),
    .Y(_177_)
  );
  NOR _540_ (
    .A(_177_),
    .B(_168_),
    .Y(_178_)
  );
  NOT _541_ (
    .A(contador[0]),
    .Y(_179_)
  );
  NAND _542_ (
    .A(_179_),
    .B(_166_),
    .Y(_180_)
  );
  NOR _543_ (
    .A(_179_),
    .B(_166_),
    .Y(_181_)
  );
  NOR _544_ (
    .A(_181_),
    .B(reset_stp),
    .Y(_182_)
  );
  NAND _545_ (
    .A(_182_),
    .B(_180_),
    .Y(_183_)
  );
  NOR _546_ (
    .A(_183_),
    .B(_178_),
    .Y(_105_)
  );
  NAND _547_ (
    .A(contador[1]),
    .B(contador[0]),
    .Y(_184_)
  );
  NOR _548_ (
    .A(_184_),
    .B(_166_),
    .Y(_185_)
  );
  NOT _549_ (
    .A(contador[1]),
    .Y(_186_)
  );
  NOT _550_ (
    .A(_181_),
    .Y(_187_)
  );
  NAND _551_ (
    .A(_187_),
    .B(_186_),
    .Y(_188_)
  );
  NAND _552_ (
    .A(_188_),
    .B(_003_),
    .Y(_189_)
  );
  NOR _553_ (
    .A(_189_),
    .B(_185_),
    .Y(_000_[1])
  );
  NOT _554_ (
    .A(contador[2]),
    .Y(_190_)
  );
  NOT _555_ (
    .A(_185_),
    .Y(_191_)
  );
  NOR _556_ (
    .A(_191_),
    .B(_190_),
    .Y(_192_)
  );
  NAND _557_ (
    .A(_191_),
    .B(_190_),
    .Y(_193_)
  );
  NAND _558_ (
    .A(_193_),
    .B(_003_),
    .Y(_194_)
  );
  NOR _559_ (
    .A(_194_),
    .B(_192_),
    .Y(_000_[2])
  );
  NOR _560_ (
    .A(_192_),
    .B(contador[3]),
    .Y(_195_)
  );
  NOT _561_ (
    .A(contador[3]),
    .Y(_196_)
  );
  NOR _562_ (
    .A(_196_),
    .B(_190_),
    .Y(_197_)
  );
  NAND _563_ (
    .A(_197_),
    .B(_185_),
    .Y(_198_)
  );
  NAND _564_ (
    .A(_198_),
    .B(_003_),
    .Y(_199_)
  );
  NOR _565_ (
    .A(_199_),
    .B(_195_),
    .Y(_000_[3])
  );
  NAND _566_ (
    .A(_198_),
    .B(_169_),
    .Y(_200_)
  );
  NAND _567_ (
    .A(contador[3]),
    .B(contador[2]),
    .Y(_201_)
  );
  NOR _568_ (
    .A(_201_),
    .B(_169_),
    .Y(_202_)
  );
  NAND _569_ (
    .A(_202_),
    .B(_185_),
    .Y(_203_)
  );
  NAND _570_ (
    .A(_203_),
    .B(_200_),
    .Y(_204_)
  );
  NOR _571_ (
    .A(_204_),
    .B(reset_stp),
    .Y(_000_[4])
  );
  NOR _572_ (
    .A(_198_),
    .B(_169_),
    .Y(_205_)
  );
  NOR _573_ (
    .A(_205_),
    .B(contador[5]),
    .Y(_206_)
  );
  NAND _574_ (
    .A(_205_),
    .B(contador[5]),
    .Y(_207_)
  );
  NAND _575_ (
    .A(_207_),
    .B(_003_),
    .Y(_208_)
  );
  NOR _576_ (
    .A(_208_),
    .B(_206_),
    .Y(_000_[5])
  );
  NOR _577_ (
    .A(_184_),
    .B(_170_),
    .Y(_209_)
  );
  NAND _578_ (
    .A(_209_),
    .B(_202_),
    .Y(_210_)
  );
  NOR _579_ (
    .A(_166_),
    .B(_172_),
    .Y(_211_)
  );
  NOT _580_ (
    .A(_211_),
    .Y(_212_)
  );
  NOR _581_ (
    .A(_212_),
    .B(_210_),
    .Y(_213_)
  );
  NAND _582_ (
    .A(_207_),
    .B(_172_),
    .Y(_214_)
  );
  NAND _583_ (
    .A(_214_),
    .B(_003_),
    .Y(_215_)
  );
  NOR _584_ (
    .A(_215_),
    .B(_213_),
    .Y(_000_[6])
  );
  NOR _585_ (
    .A(_213_),
    .B(contador[7]),
    .Y(_216_)
  );
  NAND _586_ (
    .A(_211_),
    .B(contador[7]),
    .Y(_217_)
  );
  NOR _587_ (
    .A(_217_),
    .B(_210_),
    .Y(_218_)
  );
  NOT _588_ (
    .A(_218_),
    .Y(_219_)
  );
  NAND _589_ (
    .A(_219_),
    .B(_003_),
    .Y(_220_)
  );
  NOR _590_ (
    .A(_220_),
    .B(_216_),
    .Y(_109_)
  );
  NOR _591_ (
    .A(_218_),
    .B(contador[8]),
    .Y(_221_)
  );
  NAND _592_ (
    .A(_218_),
    .B(contador[8]),
    .Y(_222_)
  );
  NAND _593_ (
    .A(_222_),
    .B(_003_),
    .Y(_223_)
  );
  NOR _594_ (
    .A(_223_),
    .B(_221_),
    .Y(_111_)
  );
  NOT _595_ (
    .A(serial_complete),
    .Y(_224_)
  );
  NOR _596_ (
    .A(_224_),
    .B(enable_stp),
    .Y(_225_)
  );
  NOR _597_ (
    .A(_225_),
    .B(_178_),
    .Y(_226_)
  );
  NOR _598_ (
    .A(_226_),
    .B(reset_stp),
    .Y(_113_)
  );
  DFF _599_ (
    .C(clk_SD),
    .D(_240_),
    .Q(signal_out[0])
  );
  DFF _600_ (
    .C(clk_SD),
    .D(_001_[1]),
    .Q(signal_out[1])
  );
  DFF _601_ (
    .C(clk_SD),
    .D(_241_),
    .Q(signal_out[2])
  );
  DFF _602_ (
    .C(clk_SD),
    .D(_001_[3]),
    .Q(signal_out[3])
  );
  DFF _603_ (
    .C(clk_SD),
    .D(_001_[4]),
    .Q(signal_out[4])
  );
  DFF _604_ (
    .C(clk_SD),
    .D(_242_),
    .Q(signal_out[5])
  );
  DFF _605_ (
    .C(clk_SD),
    .D(_243_),
    .Q(signal_out[6])
  );
  DFF _606_ (
    .C(clk_SD),
    .D(_244_),
    .Q(signal_out[7])
  );
  DFF _607_ (
    .C(clk_SD),
    .D(_245_),
    .Q(signal_out[8])
  );
  DFF _608_ (
    .C(clk_SD),
    .D(_246_),
    .Q(signal_out[9])
  );
  DFF _609_ (
    .C(clk_SD),
    .D(_247_),
    .Q(signal_out[10])
  );
  DFF _610_ (
    .C(clk_SD),
    .D(_248_),
    .Q(signal_out[11])
  );
  DFF _611_ (
    .C(clk_SD),
    .D(_249_),
    .Q(signal_out[12])
  );
  DFF _612_ (
    .C(clk_SD),
    .D(_250_),
    .Q(signal_out[13])
  );
  DFF _613_ (
    .C(clk_SD),
    .D(_251_),
    .Q(signal_out[14])
  );
  DFF _614_ (
    .C(clk_SD),
    .D(_252_),
    .Q(signal_out[15])
  );
  DFF _615_ (
    .C(clk_SD),
    .D(_227_),
    .Q(signal_out[16])
  );
  DFF _616_ (
    .C(clk_SD),
    .D(_228_),
    .Q(signal_out[17])
  );
  DFF _617_ (
    .C(clk_SD),
    .D(_001_[18]),
    .Q(signal_out[18])
  );
  DFF _618_ (
    .C(clk_SD),
    .D(_001_[19]),
    .Q(signal_out[19])
  );
  DFF _619_ (
    .C(clk_SD),
    .D(_001_[20]),
    .Q(signal_out[20])
  );
  DFF _620_ (
    .C(clk_SD),
    .D(_001_[21]),
    .Q(signal_out[21])
  );
  DFF _621_ (
    .C(clk_SD),
    .D(_001_[22]),
    .Q(signal_out[22])
  );
  DFF _622_ (
    .C(clk_SD),
    .D(_229_),
    .Q(signal_out[23])
  );
  DFF _623_ (
    .C(clk_SD),
    .D(_001_[24]),
    .Q(signal_out[24])
  );
  DFF _624_ (
    .C(clk_SD),
    .D(_001_[25]),
    .Q(signal_out[25])
  );
  DFF _625_ (
    .C(clk_SD),
    .D(_001_[26]),
    .Q(signal_out[26])
  );
  DFF _626_ (
    .C(clk_SD),
    .D(_001_[27]),
    .Q(signal_out[27])
  );
  DFF _627_ (
    .C(clk_SD),
    .D(_001_[28]),
    .Q(signal_out[28])
  );
  DFF _628_ (
    .C(clk_SD),
    .D(_230_),
    .Q(signal_out[29])
  );
  DFF _629_ (
    .C(clk_SD),
    .D(_231_),
    .Q(signal_out[30])
  );
  DFF _630_ (
    .C(clk_SD),
    .D(_232_),
    .Q(signal_out[31])
  );
  DFF _631_ (
    .C(clk_SD),
    .D(_233_),
    .Q(signal_out[32])
  );
  DFF _632_ (
    .C(clk_SD),
    .D(_234_),
    .Q(signal_out[33])
  );
  DFF _633_ (
    .C(clk_SD),
    .D(_235_),
    .Q(signal_out[34])
  );
  DFF _634_ (
    .C(clk_SD),
    .D(_236_),
    .Q(signal_out[35])
  );
  DFF _635_ (
    .C(clk_SD),
    .D(_237_),
    .Q(signal_out[36])
  );
  DFF _636_ (
    .C(clk_SD),
    .D(_238_),
    .Q(signal_out[37])
  );
  DFF _637_ (
    .C(clk_SD),
    .D(_239_),
    .Q(signal_out[38])
  );
  DFF _638_ (
    .C(clk_SD),
    .D(_001_[39]),
    .Q(signal_out[39])
  );
  DFF _639_ (
    .C(clk_SD),
    .D(_001_[40]),
    .Q(signal_out[40])
  );
  DFF _640_ (
    .C(clk_SD),
    .D(_001_[41]),
    .Q(signal_out[41])
  );
  DFF _641_ (
    .C(clk_SD),
    .D(_001_[42]),
    .Q(signal_out[42])
  );
  DFF _642_ (
    .C(clk_SD),
    .D(_001_[43]),
    .Q(signal_out[43])
  );
  DFF _643_ (
    .C(clk_SD),
    .D(_001_[44]),
    .Q(signal_out[44])
  );
  DFF _644_ (
    .C(clk_SD),
    .D(_001_[45]),
    .Q(signal_out[45])
  );
  DFF _645_ (
    .C(clk_SD),
    .D(_001_[46]),
    .Q(signal_out[46])
  );
  DFF _646_ (
    .C(clk_SD),
    .D(_001_[47]),
    .Q(signal_out[47])
  );
  DFF _647_ (
    .C(clk_SD),
    .D(_001_[48]),
    .Q(signal_out[48])
  );
  DFF _648_ (
    .C(clk_SD),
    .D(_001_[49]),
    .Q(signal_out[49])
  );
  DFF _649_ (
    .C(clk_SD),
    .D(_001_[50]),
    .Q(signal_out[50])
  );
  DFF _650_ (
    .C(clk_SD),
    .D(_001_[51]),
    .Q(signal_out[51])
  );
  DFF _651_ (
    .C(clk_SD),
    .D(_001_[52]),
    .Q(signal_out[52])
  );
  DFF _652_ (
    .C(clk_SD),
    .D(_001_[53]),
    .Q(signal_out[53])
  );
  DFF _653_ (
    .C(clk_SD),
    .D(_001_[54]),
    .Q(signal_out[54])
  );
  DFF _654_ (
    .C(clk_SD),
    .D(_001_[55]),
    .Q(signal_out[55])
  );
  DFF _655_ (
    .C(clk_SD),
    .D(_001_[56]),
    .Q(signal_out[56])
  );
  DFF _656_ (
    .C(clk_SD),
    .D(_001_[57]),
    .Q(signal_out[57])
  );
  DFF _657_ (
    .C(clk_SD),
    .D(_001_[58]),
    .Q(signal_out[58])
  );
  DFF _658_ (
    .C(clk_SD),
    .D(_001_[59]),
    .Q(signal_out[59])
  );
  DFF _659_ (
    .C(clk_SD),
    .D(_001_[60]),
    .Q(signal_out[60])
  );
  DFF _660_ (
    .C(clk_SD),
    .D(_001_[61]),
    .Q(signal_out[61])
  );
  DFF _661_ (
    .C(clk_SD),
    .D(_001_[62]),
    .Q(signal_out[62])
  );
  DFF _662_ (
    .C(clk_SD),
    .D(_001_[63]),
    .Q(signal_out[63])
  );
  DFF _663_ (
    .C(clk_SD),
    .D(_001_[64]),
    .Q(signal_out[64])
  );
  DFF _664_ (
    .C(clk_SD),
    .D(_001_[65]),
    .Q(signal_out[65])
  );
  DFF _665_ (
    .C(clk_SD),
    .D(_001_[66]),
    .Q(signal_out[66])
  );
  DFF _666_ (
    .C(clk_SD),
    .D(_001_[67]),
    .Q(signal_out[67])
  );
  DFF _667_ (
    .C(clk_SD),
    .D(_001_[68]),
    .Q(signal_out[68])
  );
  DFF _668_ (
    .C(clk_SD),
    .D(_001_[69]),
    .Q(signal_out[69])
  );
  DFF _669_ (
    .C(clk_SD),
    .D(_001_[70]),
    .Q(signal_out[70])
  );
  DFF _670_ (
    .C(clk_SD),
    .D(_001_[71]),
    .Q(signal_out[71])
  );
  DFF _671_ (
    .C(clk_SD),
    .D(_001_[72]),
    .Q(signal_out[72])
  );
  DFF _672_ (
    .C(clk_SD),
    .D(_001_[73]),
    .Q(signal_out[73])
  );
  DFF _673_ (
    .C(clk_SD),
    .D(_001_[74]),
    .Q(signal_out[74])
  );
  DFF _674_ (
    .C(clk_SD),
    .D(_001_[75]),
    .Q(signal_out[75])
  );
  DFF _675_ (
    .C(clk_SD),
    .D(_001_[76]),
    .Q(signal_out[76])
  );
  DFF _676_ (
    .C(clk_SD),
    .D(_001_[77]),
    .Q(signal_out[77])
  );
  DFF _677_ (
    .C(clk_SD),
    .D(_001_[78]),
    .Q(signal_out[78])
  );
  DFF _678_ (
    .C(clk_SD),
    .D(_001_[79]),
    .Q(signal_out[79])
  );
  DFF _679_ (
    .C(clk_SD),
    .D(_001_[80]),
    .Q(signal_out[80])
  );
  DFF _680_ (
    .C(clk_SD),
    .D(_001_[81]),
    .Q(signal_out[81])
  );
  DFF _681_ (
    .C(clk_SD),
    .D(_001_[82]),
    .Q(signal_out[82])
  );
  DFF _682_ (
    .C(clk_SD),
    .D(_001_[83]),
    .Q(signal_out[83])
  );
  DFF _683_ (
    .C(clk_SD),
    .D(_001_[84]),
    .Q(signal_out[84])
  );
  DFF _684_ (
    .C(clk_SD),
    .D(_001_[85]),
    .Q(signal_out[85])
  );
  DFF _685_ (
    .C(clk_SD),
    .D(_001_[86]),
    .Q(signal_out[86])
  );
  DFF _686_ (
    .C(clk_SD),
    .D(_001_[87]),
    .Q(signal_out[87])
  );
  DFF _687_ (
    .C(clk_SD),
    .D(_001_[88]),
    .Q(signal_out[88])
  );
  DFF _688_ (
    .C(clk_SD),
    .D(_001_[89]),
    .Q(signal_out[89])
  );
  DFF _689_ (
    .C(clk_SD),
    .D(_001_[90]),
    .Q(signal_out[90])
  );
  DFF _690_ (
    .C(clk_SD),
    .D(_001_[91]),
    .Q(signal_out[91])
  );
  DFF _691_ (
    .C(clk_SD),
    .D(_001_[92]),
    .Q(signal_out[92])
  );
  DFF _692_ (
    .C(clk_SD),
    .D(_001_[93]),
    .Q(signal_out[93])
  );
  DFF _693_ (
    .C(clk_SD),
    .D(_001_[94]),
    .Q(signal_out[94])
  );
  DFF _694_ (
    .C(clk_SD),
    .D(_001_[95]),
    .Q(signal_out[95])
  );
  DFF _695_ (
    .C(clk_SD),
    .D(_001_[96]),
    .Q(signal_out[96])
  );
  DFF _696_ (
    .C(clk_SD),
    .D(_001_[97]),
    .Q(signal_out[97])
  );
  DFF _697_ (
    .C(clk_SD),
    .D(_001_[98]),
    .Q(signal_out[98])
  );
  DFF _698_ (
    .C(clk_SD),
    .D(_001_[99]),
    .Q(signal_out[99])
  );
  DFF _699_ (
    .C(clk_SD),
    .D(_001_[100]),
    .Q(signal_out[100])
  );
  DFF _700_ (
    .C(clk_SD),
    .D(_001_[101]),
    .Q(signal_out[101])
  );
  DFF _701_ (
    .C(clk_SD),
    .D(_001_[102]),
    .Q(signal_out[102])
  );
  DFF _702_ (
    .C(clk_SD),
    .D(_001_[103]),
    .Q(signal_out[103])
  );
  DFF _703_ (
    .C(clk_SD),
    .D(_001_[104]),
    .Q(signal_out[104])
  );
  DFF _704_ (
    .C(clk_SD),
    .D(_001_[105]),
    .Q(signal_out[105])
  );
  DFF _705_ (
    .C(clk_SD),
    .D(_001_[106]),
    .Q(signal_out[106])
  );
  DFF _706_ (
    .C(clk_SD),
    .D(_001_[107]),
    .Q(signal_out[107])
  );
  DFF _707_ (
    .C(clk_SD),
    .D(_001_[108]),
    .Q(signal_out[108])
  );
  DFF _708_ (
    .C(clk_SD),
    .D(_001_[109]),
    .Q(signal_out[109])
  );
  DFF _709_ (
    .C(clk_SD),
    .D(_001_[110]),
    .Q(signal_out[110])
  );
  DFF _710_ (
    .C(clk_SD),
    .D(_001_[111]),
    .Q(signal_out[111])
  );
  DFF _711_ (
    .C(clk_SD),
    .D(_001_[112]),
    .Q(signal_out[112])
  );
  DFF _712_ (
    .C(clk_SD),
    .D(_001_[113]),
    .Q(signal_out[113])
  );
  DFF _713_ (
    .C(clk_SD),
    .D(_001_[114]),
    .Q(signal_out[114])
  );
  DFF _714_ (
    .C(clk_SD),
    .D(_039_),
    .Q(signal_out[115])
  );
  DFF _715_ (
    .C(clk_SD),
    .D(_041_),
    .Q(signal_out[116])
  );
  DFF _716_ (
    .C(clk_SD),
    .D(_044_),
    .Q(signal_out[117])
  );
  DFF _717_ (
    .C(clk_SD),
    .D(_046_),
    .Q(signal_out[118])
  );
  DFF _718_ (
    .C(clk_SD),
    .D(_049_),
    .Q(signal_out[119])
  );
  DFF _719_ (
    .C(clk_SD),
    .D(_051_),
    .Q(signal_out[120])
  );
  DFF _720_ (
    .C(clk_SD),
    .D(_054_),
    .Q(signal_out[121])
  );
  DFF _721_ (
    .C(clk_SD),
    .D(_056_),
    .Q(signal_out[122])
  );
  DFF _722_ (
    .C(clk_SD),
    .D(_059_),
    .Q(signal_out[123])
  );
  DFF _723_ (
    .C(clk_SD),
    .D(_061_),
    .Q(signal_out[124])
  );
  DFF _724_ (
    .C(clk_SD),
    .D(_064_),
    .Q(signal_out[125])
  );
  DFF _725_ (
    .C(clk_SD),
    .D(_066_),
    .Q(signal_out[126])
  );
  DFF _726_ (
    .C(clk_SD),
    .D(_069_),
    .Q(signal_out[127])
  );
  DFF _727_ (
    .C(clk_SD),
    .D(_071_),
    .Q(signal_out[128])
  );
  DFF _728_ (
    .C(clk_SD),
    .D(_074_),
    .Q(signal_out[129])
  );
  DFF _729_ (
    .C(clk_SD),
    .D(_076_),
    .Q(signal_out[130])
  );
  DFF _730_ (
    .C(clk_SD),
    .D(_079_),
    .Q(signal_out[131])
  );
  DFF _731_ (
    .C(clk_SD),
    .D(_081_),
    .Q(signal_out[132])
  );
  DFF _732_ (
    .C(clk_SD),
    .D(_084_),
    .Q(signal_out[133])
  );
  DFF _733_ (
    .C(clk_SD),
    .D(_086_),
    .Q(signal_out[134])
  );
  DFF _734_ (
    .C(clk_SD),
    .D(_089_),
    .Q(signal_out[135])
  );
  DFF _735_ (
    .C(clk_SD),
    .D(_105_),
    .Q(contador[0])
  );
  DFF _736_ (
    .C(clk_SD),
    .D(_000_[1]),
    .Q(contador[1])
  );
  DFF _737_ (
    .C(clk_SD),
    .D(_000_[2]),
    .Q(contador[2])
  );
  DFF _738_ (
    .C(clk_SD),
    .D(_000_[3]),
    .Q(contador[3])
  );
  DFF _739_ (
    .C(clk_SD),
    .D(_000_[4]),
    .Q(contador[4])
  );
  DFF _740_ (
    .C(clk_SD),
    .D(_000_[5]),
    .Q(contador[5])
  );
  DFF _741_ (
    .C(clk_SD),
    .D(_000_[6]),
    .Q(contador[6])
  );
  DFF _742_ (
    .C(clk_SD),
    .D(_109_),
    .Q(contador[7])
  );
  DFF _743_ (
    .C(clk_SD),
    .D(_111_),
    .Q(contador[8])
  );
  DFF _744_ (
    .C(clk_SD),
    .D(_113_),
    .Q(serial_complete)
  );
endmodule
